/* Generated by Yosys 0.45+11 (git sha1 e8951aba29faf774e475f20c1405162993235d7f, g++ 14.2.1 -O2 -fexceptions -fstack-protector-strong -m64 -march=x86-64 -mtune=generic -fasynchronous-unwind-tables -fstack-clash-protection -fcf-protection -mtls-dialect=gnu2 -fno-omit-frame-pointer -mno-omit-leaf-frame-pointer -fPIC -O3) */

(* generator = "Amaranth" *)
(* top =  1  *)
(* cells_not_processed =  1  *)
(* src = "alu.v:5.1-120.10" *)
module \$abstract\top ();
endmodule

(* generator = "Amaranth" *)
(* top =  1  *)
(* cells_not_processed =  1  *)
(* src = "alu.v:5.1-120.10" *)
module top(b, alu_ctrl, \alu_ctrl$3 , nzc, o, a);
  reg \$auto$verilog_backend.cc:2352:dump_module$37  = 0;
  (* src = "alu.v:6.7-6.56" *)
  reg _03_;
  (* src = "alu.v:95.3-118.6" *)
  reg [2:0] _04_;
  (* src = "alu.v:71.3-94.6" *)
  reg [31:0] _05_;
  (* src = "alu.v:95.3-118.6" *)
  reg [2:0] _06_;
  (* src = "alu.v:71.3-94.6" *)
  reg [31:0] _07_;
  (* src = "alu.v:43.17-43.40" *)
  wire [32:0] _08_;
  (* src = "alu.v:44.17-44.40" *)
  wire [32:0] _09_;
  (* src = "alu.v:49.17-49.27" *)
  wire [2:0] _10_;
  (* src = "alu.v:52.18-52.33" *)
  wire [1:0] _11_;
  (* src = "alu.v:60.74-60.81" *)
  wire [33:0] _12_;
  (* src = "alu.v:64.18-64.23" *)
  wire [31:0] _13_;
  (* src = "alu.v:61.18-61.45" *)
  wire [33:0] _14_;
  (* src = "alu.v:60.17-60.31" *)
  wire _15_;
  (* src = "alu.v:60.36-60.42" *)
  wire _16_;
  (* src = "alu.v:56.18-56.57" *)
  wire _17_;
  (* src = "alu.v:69.18-69.57" *)
  wire _18_;
  (* src = "alu.v:48.17-48.22" *)
  wire _19_;
  (* src = "alu.v:60.16-60.42" *)
  wire _20_;
  (* src = "alu.v:54.18-54.41" *)
  wire [63:0] _21_;
  (* src = "alu.v:55.18-55.41" *)
  wire [63:0] _22_;
  (* src = "alu.v:68.18-68.41" *)
  wire [63:0] _23_;
  (* src = "alu.v:65.18-65.23" *)
  wire [31:0] _24_;
  (* src = "alu.v:62.18-62.21" *)
  wire _25_;
  (* src = "alu.v:50.17-50.32" *)
  wire [7:0] _26_;
  (* src = "alu.v:53.18-53.30" *)
  wire [10:0] _27_;
  (* src = "alu.v:67.18-67.38" *)
  wire [62:0] _28_;
  (* src = "alu.v:70.18-70.39" *)
  wire [31:0] _29_;
  (* src = "alu.v:45.17-45.40" *)
  wire [32:0] _30_;
  (* src = "alu.v:46.17-46.40" *)
  wire [32:0] _31_;
  (* src = "alu.v:47.17-47.40" *)
  wire [32:0] _32_;
  (* src = "alu.v:51.17-51.40" *)
  wire [32:0] _33_;
  (* src = "alu.v:60.84-60.91" *)
  wire [33:0] _34_;
  (* src = "alu.v:60.59-60.92" *)
  wire [33:0] _35_;
  (* src = "alu.v:60.66-60.91" *)
  wire [33:0] _36_;
  (* src = "alu.v:60.16-60.93" *)
  wire [33:0] _37_;
  (* src = "alu.v:63.18-63.47" *)
  wire [32:0] _38_;
  (* src = "alu.v:66.18-66.23" *)
  wire [31:0] _39_;
  (* src = "alu.v:7.15-7.18" *)
  wire [32:0] \$1 ;
  (* src = "alu.v:8.14-8.18" *)
  wire [1:0] \$10 ;
  (* src = "alu.v:9.15-9.19" *)
  wire [10:0] \$11 ;
  (* src = "alu.v:10.15-10.19" *)
  wire [63:0] \$12 ;
  (* src = "alu.v:11.15-11.19" *)
  wire [63:0] \$13 ;
  (* src = "alu.v:12.8-12.12" *)
  wire \$14 ;
  (* src = "alu.v:13.15-13.19" *)
  wire [32:0] \$15 ;
  (* src = "alu.v:14.15-14.19" *)
  wire [31:0] \$16 ;
  (* src = "alu.v:15.15-15.19" *)
  wire [31:0] \$17 ;
  (* src = "alu.v:16.15-16.19" *)
  wire [31:0] \$18 ;
  (* src = "alu.v:17.15-17.19" *)
  wire [62:0] \$19 ;
  (* src = "alu.v:18.15-18.18" *)
  wire [32:0] \$2 ;
  (* src = "alu.v:19.15-19.19" *)
  wire [63:0] \$20 ;
  (* src = "alu.v:20.8-20.12" *)
  wire \$21 ;
  (* src = "alu.v:21.15-21.19" *)
  wire [31:0] \$22 ;
  (* src = "alu.v:22.15-22.18" *)
  wire [32:0] \$3 ;
  (* src = "alu.v:23.15-23.19" *)
  wire [32:0] \$37 ;
  (* src = "alu.v:24.8-24.12" *)
  wire \$39 ;
  (* src = "alu.v:25.15-25.18" *)
  wire [32:0] \$4 ;
  (* src = "alu.v:26.15-26.18" *)
  wire [32:0] \$5 ;
  (* src = "alu.v:27.8-27.11" *)
  wire \$6 ;
  (* src = "alu.v:28.14-28.17" *)
  wire [2:0] \$7 ;
  (* src = "alu.v:29.14-29.17" *)
  wire [7:0] \$8 ;
  (* src = "alu.v:30.15-30.18" *)
  wire [32:0] \$9 ;
  (* src = "alu.v:6.7-6.51" *)
  reg \$auto$verilog_backend.cc:2352:dump_module$1 ;
  (* src = "alu.v:57.15-57.18" *)
  wire [33:0] _0_;
  (* src = "alu.v:57.20-57.23" *)
  wire [33:0] _1_;
  (* src = "alu.v:57.25-57.28" *)
  wire [33:0] _2_;
  (* src = "alu.v:31.16-31.17" *)
  input [31:0] a;
  wire [31:0] a;
  (* src = "alu.v:33.15-33.23" *)
  input [5:0] alu_ctrl;
  wire [5:0] alu_ctrl;
  (* src = "alu.v:35.16-35.27" *)
  output [5:0] \alu_ctrl$3 ;
  wire [5:0] \alu_ctrl$3 ;
  (* src = "alu.v:37.16-37.17" *)
  input [31:0] b;
  wire [31:0] b;
  (* src = "alu.v:39.16-39.19" *)
  output [2:0] nzc;
  reg [2:0] nzc;
  (* src = "alu.v:41.17-41.18" *)
  output [31:0] o;
  reg [31:0] o;
  assign _08_ = $signed({ a[31], a }) + (* src = "alu.v:43.17-43.40" *) $signed({ b[31], b });
  assign _09_ = $signed({ a[31], a }) + (* src = "alu.v:44.17-44.40" *) $signed({ b[31], b });
  assign _10_ = 2'h2 + (* src = "alu.v:49.17-49.27" *) \$6 ;
  assign _11_ = 1'h1 + (* src = "alu.v:52.18-52.33" *) \$9 [32];
  assign _12_ = _1_ + (* src = "alu.v:60.74-60.81" *) 32'd1;
  assign _13_ = a & (* src = "alu.v:64.18-64.23" *) b;
  assign _14_ = $signed(_2_) / (* src = "alu.v:61.18-61.45" *) $signed(_1_);
  assign _15_ = a[31] == (* src = "alu.v:60.17-60.31" *) b[31];
  assign _16_ = a == (* src = "alu.v:60.36-60.42" *) 32'd0;
  assign _17_ = $signed(\$13 ) > (* src = "alu.v:56.18-56.57" *) $signed(64'h00000000ffffffff);
  assign _18_ = $signed(\$20 ) > (* src = "alu.v:69.18-69.57" *) $signed(64'h00000000ffffffff);
  assign _19_ = ! (* src = "alu.v:48.17-48.22" *) \$5 ;
  assign _20_ = _15_ || (* src = "alu.v:60.16-60.42" *) _16_;
  assign _21_ = $signed({ a[31], a[31], a[31], a[31], a[31], a[31], a[31], a[31], a[31], a[31], a[31], a[31], a[31], a[31], a[31], a[31], a[31], a[31], a[31], a[31], a[31], a[31], a[31], a[31], a[31], a[31], a[31], a[31], a[31], a[31], a[31], a[31], a }) * (* src = "alu.v:54.18-54.41" *) $signed({ b[31], b[31], b[31], b[31], b[31], b[31], b[31], b[31], b[31], b[31], b[31], b[31], b[31], b[31], b[31], b[31], b[31], b[31], b[31], b[31], b[31], b[31], b[31], b[31], b[31], b[31], b[31], b[31], b[31], b[31], b[31], b[31], b });
  assign _22_ = $signed({ a[31], a[31], a[31], a[31], a[31], a[31], a[31], a[31], a[31], a[31], a[31], a[31], a[31], a[31], a[31], a[31], a[31], a[31], a[31], a[31], a[31], a[31], a[31], a[31], a[31], a[31], a[31], a[31], a[31], a[31], a[31], a[31], a }) * (* src = "alu.v:55.18-55.41" *) $signed({ b[31], b[31], b[31], b[31], b[31], b[31], b[31], b[31], b[31], b[31], b[31], b[31], b[31], b[31], b[31], b[31], b[31], b[31], b[31], b[31], b[31], b[31], b[31], b[31], b[31], b[31], b[31], b[31], b[31], b[31], b[31], b[31], b });
  assign _23_ = $signed({ a[31], a[31], a[31], a[31], a[31], a[31], a[31], a[31], a[31], a[31], a[31], a[31], a[31], a[31], a[31], a[31], a[31], a[31], a[31], a[31], a[31], a[31], a[31], a[31], a[31], a[31], a[31], a[31], a[31], a[31], a[31], a[31], a }) * (* src = "alu.v:68.18-68.41" *) $signed({ b[31], b[31], b[31], b[31], b[31], b[31], b[31], b[31], b[31], b[31], b[31], b[31], b[31], b[31], b[31], b[31], b[31], b[31], b[31], b[31], b[31], b[31], b[31], b[31], b[31], b[31], b[31], b[31], b[31], b[31], b[31], b[31], b });
  assign _24_ = a | (* src = "alu.v:65.18-65.23" *) b;
  assign _25_ = | (* src = "alu.v:62.18-62.21" *) b;
  assign _26_ = \$4 [31] << (* src = "alu.v:50.17-50.32" *) \$7 ;
  assign _27_ = \$8  << (* src = "alu.v:53.18-53.30" *) \$10 ;
  assign _28_ = $signed({ a[31], a[31], a[31], a[31], a[31], a[31], a[31], a[31], a[31], a[31], a[31], a[31], a[31], a[31], a[31], a[31], a[31], a[31], a[31], a[31], a[31], a[31], a[31], a[31], a[31], a[31], a[31], a[31], a[31], a[31], a[31], a }) << (* src = "alu.v:67.18-67.38" *) b[4:0];
  assign _29_ = $signed(a) >>> (* src = "alu.v:70.18-70.39" *) b[4:0];
  assign _30_ = $signed({ a[31], a }) - (* src = "alu.v:45.17-45.40" *) $signed({ b[31], b });
  assign _31_ = $signed({ a[31], a }) - (* src = "alu.v:46.17-46.40" *) $signed({ b[31], b });
  assign _32_ = $signed({ a[31], a }) - (* src = "alu.v:47.17-47.40" *) $signed({ b[31], b });
  assign _33_ = $signed({ a[31], a }) - (* src = "alu.v:51.17-51.40" *) $signed({ b[31], b });
  assign _34_ = _1_ - (* src = "alu.v:60.84-60.91" *) 32'd1;
  assign _35_ = _0_ - (* src = "alu.v:60.59-60.92" *) _36_;
  assign _36_ = b[31] ? (* src = "alu.v:60.66-60.91" *) _12_ : _34_;
  assign _37_ = _20_ ? (* src = "alu.v:60.16-60.93" *) _0_ : _35_;
  assign _38_ = \$39  ? (* src = "alu.v:63.18-63.47" *) \$37  : 33'h000000000;
  assign _39_ = a ^ (* src = "alu.v:66.18-66.23" *) b;
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$37 ) begin end
    _03_ = 1'h0;
  end
  always @* begin
      \$auto$verilog_backend.cc:2352:dump_module$1  <= _03_;
  end
  initial begin
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$37 ) begin end
    _05_ = _07_;
    (* src = "alu.v:72.5-72.65" *)
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin
    end else begin
    end
    (* src = "alu.v:74.5-93.12" *)
    casez (alu_ctrl)
      /* src = "alu.v:0.0-0.0" */
      6'h00:
          _07_ = \$1 [31:0];
      /* src = "alu.v:0.0-0.0" */
      6'h01:
          _07_ = \$3 [31:0];
      /* src = "alu.v:0.0-0.0" */
      6'h02:
          _07_ = \$12 [31:0];
      /* src = "alu.v:0.0-0.0" */
      6'h03:
          _07_ = \$15 [31:0];
      /* src = "alu.v:0.0-0.0" */
      6'h04:
          _07_ = \$16 ;
      /* src = "alu.v:0.0-0.0" */
      6'h05:
          _07_ = \$17 ;
      /* src = "alu.v:0.0-0.0" */
      6'h06:
          _07_ = \$18 ;
      /* src = "alu.v:0.0-0.0" */
      6'h07:
          _07_ = \$19 [31:0];
      /* src = "alu.v:0.0-0.0" */
      6'h08:
          _07_ = \$22 ;
      default:
          _07_ = 32'd0;
    endcase
  end
  always @* begin
      o <= _05_;
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$37 ) begin end
    _04_ = _06_;
    (* src = "alu.v:96.5-96.65" *)
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin
    end else begin
    end
    (* src = "alu.v:98.5-117.12" *)
    casez (alu_ctrl)
      /* src = "alu.v:0.0-0.0" */
      6'h00:
        begin
          _06_[1:0] = 2'h0;
          _06_[2] = \$2 [32];
        end
      /* src = "alu.v:0.0-0.0" */
      6'h01:
          _06_ = \$11 [2:0];
      /* src = "alu.v:0.0-0.0" */
      6'h02:
        begin
          _06_[1:0] = 2'h0;
          _06_[2] = \$14 ;
        end
      /* src = "alu.v:0.0-0.0" */
      6'h03:
          _06_ = 3'h0;
      /* src = "alu.v:0.0-0.0" */
      6'h04:
          _06_ = 3'h0;
      /* src = "alu.v:0.0-0.0" */
      6'h05:
          _06_ = 3'h0;
      /* src = "alu.v:0.0-0.0" */
      6'h06:
          _06_ = 3'h0;
      /* src = "alu.v:0.0-0.0" */
      6'h07:
        begin
          _06_[1:0] = 2'h0;
          _06_[2] = \$21 ;
        end
      /* src = "alu.v:0.0-0.0" */
      6'h08:
          _06_ = 3'h0;
      default:
          _06_ = 3'h0;
    endcase
  end
  always @* begin
      nzc <= _04_;
  end
  assign \$1  = _08_;
  assign \$2  = _09_;
  assign \$3  = _30_;
  assign \$4  = _31_;
  assign \$5  = _32_;
  assign \$6  = _19_;
  assign \$7  = _10_;
  assign \$8  = _26_;
  assign \$9  = _33_;
  assign \$10  = _11_;
  assign \$11  = _27_;
  assign \$12  = _21_;
  assign \$13  = _22_;
  assign \$14  = _17_;
  assign _0_ = { a[31], a[31], a };
  assign _1_ = { b[31], b[31], b };
  assign _2_ = _37_;
  assign \$37  = _14_[32:0];
  assign \$39  = _25_;
  assign \$15  = _38_;
  assign \$16  = _13_;
  assign \$17  = _24_;
  assign \$18  = _39_;
  assign \$19  = _28_;
  assign \$20  = _23_;
  assign \$21  = _18_;
  assign \$22  = _29_;
  assign \alu_ctrl$3  = alu_ctrl;
endmodule
