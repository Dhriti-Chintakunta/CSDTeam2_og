   0  $accept : PROGRAM $end

   1  PROGRAM : LIST

   2  LIST : LIST FUNCTION
   3       | LIST CLASSDEF
   4       |

   5  $$1 :

   6  FUNCTION : FUNCTION_PREFIX LF $$1 STMTLIST RF

   7  $$2 :

   8  FUNCTION_PREFIX : FUNCTION_TYPE ID $$2 LP PARAMLIST RP

   9  FUNCTION_TYPE : VOID
  10                | DATA_TYPE

  11  DATA_TYPE : INT
  12            | CHAR
  13            | FLOAT
  14            | STRING
  15            | INT MUL
  16            | CHAR MUL

  17  $$3 :

  18  PARAMLIST : PARAM $$3 COMMA PARAMLIST
  19            | PARAM
  20            |

  21  PARAM : DATA_TYPE ID

  22  STMTLIST : STMT STMTLIST
  23           |

  24  CLASSDEF : CLASS ID LF CLASSBODY RF

  25  CLASSBODY : CLASSBODY CLASSMEMBER
  26            |

  27  CLASSMEMBER : ACCESS_MODIFIER DATA_TYPE ID SCOL
  28              | ACCESS_MODIFIER FUNCTION
  29              |

  30  ACCESS_MODIFIER : PUBLIC
  31                  | PRIVATE
  32                  | PROTECTED

  33  STMT : DECLARATION SCOL
  34       | ASSIGNMENT SCOL
  35       | EXPR SCOL
  36       | RETURN_STMT SCOL
  37       | IF_STMT
  38       | WHILE_STMT
  39       | FOR_STMT
  40       | BREAK SCOL
  41       | CONTINUE SCOL
  42       | INPUT LP ID RP SCOL
  43       | INPUT LP ID LB EXPR RB RP SCOL
  44       | OUTPUT LP EXPR RP SCOL

  45  DECLARATION : DATA_TYPE ID
  46              | DATA_TYPE ID ASSIGN EXPR
  47              | STRING ID ASSIGN STR
  48              | DATA_TYPE ID LB INT_NUM RB

  49  $$4 :

  50  DECLARATION : DATA_TYPE ID LB INT_NUM RB ASSIGN $$4 LF ARR_VALUES RF

  51  $$5 :

  52  ARR_VALUES : CONST $$5 COMMA ARR_VALUES
  53             | CONST

  54  RETURN_STMT : RETURN EXPR
  55              | RETURN

  56  EXPR : EXPR ADD EXPR
  57       | EXPR SUB EXPR
  58       | EXPR MUL EXPR
  59       | EXPR DIV EXPR
  60       | EXPR EQ EXPR
  61       | EXPR NE EXPR
  62       | EXPR LT EXPR
  63       | EXPR GT EXPR
  64       | EXPR LE EXPR
  65       | EXPR GE EXPR
  66       | EXPR AND EXPR
  67       | EXPR OR EXPR
  68       | EXPR BITAND EXPR
  69       | EXPR BITOR EXPR
  70       | UNARY_EXPR
  71       | PRIMARY_EXPR
  72       | POSTFIX_EXPR

  73  POSTFIX_EXPR : FUNCTION_CALL
  74               | ID LB EXPR RB

  75  UNARY_EXPR : UNARY_OP PRIMARY_EXPR

  76  PRIMARY_EXPR : ID
  77               | CONST
  78               | LP EXPR RP

  79  UNARY_OP : ADD
  80           | SUB
  81           | NEG

  82  CONST : INT_NUM
  83        | FLOAT_NUM
  84        | CHARACTER

  85  ASSIGNMENT : ID ASSIGN EXPR
  86             | ID LB EXPR RB ASSIGN EXPR

  87  $$6 :

  88  $$7 :

  89  $$8 :

  90  $$9 :

  91  IF_STMT : IF $$6 LP EXPR RP $$7 LF $$8 STMTLIST RF $$9 ELIF_STMT ELSE_STMT

  92  $$10 :

  93  $$11 :

  94  $$12 :

  95  $$13 :

  96  ELIF_STMT : ELSE IF $$10 LP EXPR RP $$11 LF $$12 STMTLIST RF $$13 ELIF_STMT
  97            |

  98  $$14 :

  99  ELSE_STMT : ELSE LF $$14 STMTLIST RF
 100            |

 101  $$15 :

 102  $$16 :

 103  $$17 :

 104  WHILE_STMT : WHILE $$15 LP EXPR RP $$16 LF $$17 STMTLIST RF

 105  $$18 :

 106  $$19 :

 107  $$20 :

 108  $$21 :

 109  FOR_STMT : FOR LP ASSIGNMENT SCOL $$18 EXPR SCOL $$19 ASSIGNMENT RP $$20 LF $$21 STMTLIST RF

 110  $$22 :

 111  FUNCTION_CALL : ID $$22 LP ARGUMENTLIST RP

 112  ARGUMENTLIST : ARG COMMA ARGUMENTLIST
 113               | ARG
 114               |

 115  ARG : EXPR

state 0
	$accept : . PROGRAM $end  (0)
	LIST : .  (4)

	.  reduce 4

	PROGRAM  goto 1
	LIST  goto 2


state 1
	$accept : PROGRAM . $end  (0)

	$end  accept


state 2
	PROGRAM : LIST .  (1)
	LIST : LIST . FUNCTION  (2)
	LIST : LIST . CLASSDEF  (3)

	INT  shift 3
	CHAR  shift 4
	FLOAT  shift 5
	STRING  shift 6
	VOID  shift 7
	CLASS  shift 8
	$end  reduce 1

	FUNCTION  goto 9
	FUNCTION_PREFIX  goto 10
	DATA_TYPE  goto 11
	CLASSDEF  goto 12
	FUNCTION_TYPE  goto 13


state 3
	DATA_TYPE : INT .  (11)
	DATA_TYPE : INT . MUL  (15)

	MUL  shift 14
	ID  reduce 11


state 4
	DATA_TYPE : CHAR .  (12)
	DATA_TYPE : CHAR . MUL  (16)

	MUL  shift 15
	ID  reduce 12


state 5
	DATA_TYPE : FLOAT .  (13)

	.  reduce 13


state 6
	DATA_TYPE : STRING .  (14)

	.  reduce 14


state 7
	FUNCTION_TYPE : VOID .  (9)

	.  reduce 9


state 8
	CLASSDEF : CLASS . ID LF CLASSBODY RF  (24)

	ID  shift 16
	.  error


state 9
	LIST : LIST FUNCTION .  (2)

	.  reduce 2


state 10
	FUNCTION : FUNCTION_PREFIX . LF $$1 STMTLIST RF  (6)

	LF  shift 17
	.  error


state 11
	FUNCTION_TYPE : DATA_TYPE .  (10)

	.  reduce 10


state 12
	LIST : LIST CLASSDEF .  (3)

	.  reduce 3


state 13
	FUNCTION_PREFIX : FUNCTION_TYPE . ID $$2 LP PARAMLIST RP  (8)

	ID  shift 18
	.  error


state 14
	DATA_TYPE : INT MUL .  (15)

	.  reduce 15


state 15
	DATA_TYPE : CHAR MUL .  (16)

	.  reduce 16


state 16
	CLASSDEF : CLASS ID . LF CLASSBODY RF  (24)

	LF  shift 19
	.  error


state 17
	FUNCTION : FUNCTION_PREFIX LF . $$1 STMTLIST RF  (6)
	$$1 : .  (5)

	.  reduce 5

	$$1  goto 20


state 18
	FUNCTION_PREFIX : FUNCTION_TYPE ID . $$2 LP PARAMLIST RP  (8)
	$$2 : .  (7)

	.  reduce 7

	$$2  goto 21


state 19
	CLASSDEF : CLASS ID LF . CLASSBODY RF  (24)
	CLASSBODY : .  (26)

	.  reduce 26

	CLASSBODY  goto 22


state 20
	FUNCTION : FUNCTION_PREFIX LF $$1 . STMTLIST RF  (6)
	STMTLIST : .  (23)

	INT  shift 3
	CHAR  shift 4
	FLOAT  shift 5
	STRING  shift 23
	RETURN  shift 24
	INPUT  shift 25
	OUTPUT  shift 26
	IF  shift 27
	WHILE  shift 28
	FOR  shift 29
	BREAK  shift 30
	CONTINUE  shift 31
	INT_NUM  shift 32
	FLOAT_NUM  shift 33
	ID  shift 34
	ADD  shift 35
	SUB  shift 36
	LP  shift 37
	CHARACTER  shift 38
	NEG  shift 39
	RF  reduce 23

	DATA_TYPE  goto 40
	STMTLIST  goto 41
	STMT  goto 42
	DECLARATION  goto 43
	ASSIGNMENT  goto 44
	EXPR  goto 45
	RETURN_STMT  goto 46
	UNARY_EXPR  goto 47
	PRIMARY_EXPR  goto 48
	UNARY_OP  goto 49
	CONST  goto 50
	IF_STMT  goto 51
	WHILE_STMT  goto 52
	FOR_STMT  goto 53
	FUNCTION_CALL  goto 54
	POSTFIX_EXPR  goto 55


state 21
	FUNCTION_PREFIX : FUNCTION_TYPE ID $$2 . LP PARAMLIST RP  (8)

	LP  shift 56
	.  error


22: shift/reduce conflict (shift 57, reduce 29) on PUBLIC
22: shift/reduce conflict (shift 58, reduce 29) on PRIVATE
22: shift/reduce conflict (shift 59, reduce 29) on PROTECTED
22: shift/reduce conflict (shift 60, reduce 29) on RF
state 22
	CLASSDEF : CLASS ID LF CLASSBODY . RF  (24)
	CLASSBODY : CLASSBODY . CLASSMEMBER  (25)
	CLASSMEMBER : .  (29)

	PUBLIC  shift 57
	PRIVATE  shift 58
	PROTECTED  shift 59
	RF  shift 60

	CLASSMEMBER  goto 61
	ACCESS_MODIFIER  goto 62


23: shift/reduce conflict (shift 63, reduce 14) on ID
state 23
	DATA_TYPE : STRING .  (14)
	DECLARATION : STRING . ID ASSIGN STR  (47)

	ID  shift 63


state 24
	RETURN_STMT : RETURN . EXPR  (54)
	RETURN_STMT : RETURN .  (55)

	INT_NUM  shift 32
	FLOAT_NUM  shift 33
	ID  shift 64
	ADD  shift 35
	SUB  shift 36
	LP  shift 37
	CHARACTER  shift 38
	NEG  shift 39
	SCOL  reduce 55

	EXPR  goto 65
	UNARY_EXPR  goto 47
	PRIMARY_EXPR  goto 48
	UNARY_OP  goto 49
	CONST  goto 50
	FUNCTION_CALL  goto 54
	POSTFIX_EXPR  goto 55


state 25
	STMT : INPUT . LP ID RP SCOL  (42)
	STMT : INPUT . LP ID LB EXPR RB RP SCOL  (43)

	LP  shift 66
	.  error


state 26
	STMT : OUTPUT . LP EXPR RP SCOL  (44)

	LP  shift 67
	.  error


state 27
	IF_STMT : IF . $$6 LP EXPR RP $$7 LF $$8 STMTLIST RF $$9 ELIF_STMT ELSE_STMT  (91)
	$$6 : .  (87)

	.  reduce 87

	$$6  goto 68


state 28
	WHILE_STMT : WHILE . $$15 LP EXPR RP $$16 LF $$17 STMTLIST RF  (104)
	$$15 : .  (101)

	.  reduce 101

	$$15  goto 69


state 29
	FOR_STMT : FOR . LP ASSIGNMENT SCOL $$18 EXPR SCOL $$19 ASSIGNMENT RP $$20 LF $$21 STMTLIST RF  (109)

	LP  shift 70
	.  error


state 30
	STMT : BREAK . SCOL  (40)

	SCOL  shift 71
	.  error


state 31
	STMT : CONTINUE . SCOL  (41)

	SCOL  shift 72
	.  error


state 32
	CONST : INT_NUM .  (82)

	.  reduce 82


state 33
	CONST : FLOAT_NUM .  (83)

	.  reduce 83


state 34
	POSTFIX_EXPR : ID . LB EXPR RB  (74)
	PRIMARY_EXPR : ID .  (76)
	ASSIGNMENT : ID . ASSIGN EXPR  (85)
	ASSIGNMENT : ID . LB EXPR RB ASSIGN EXPR  (86)
	FUNCTION_CALL : ID . $$22 LP ARGUMENTLIST RP  (111)
	$$22 : .  (110)

	ASSIGN  shift 73
	LB  shift 74
	ADD  reduce 76
	SUB  reduce 76
	MUL  reduce 76
	DIV  reduce 76
	EQ  reduce 76
	NE  reduce 76
	LT  reduce 76
	GT  reduce 76
	LE  reduce 76
	GE  reduce 76
	AND  reduce 76
	OR  reduce 76
	SCOL  reduce 76
	LP  reduce 110
	BITAND  reduce 76
	BITOR  reduce 76

	$$22  goto 75


state 35
	UNARY_OP : ADD .  (79)

	.  reduce 79


state 36
	UNARY_OP : SUB .  (80)

	.  reduce 80


state 37
	PRIMARY_EXPR : LP . EXPR RP  (78)

	INT_NUM  shift 32
	FLOAT_NUM  shift 33
	ID  shift 64
	ADD  shift 35
	SUB  shift 36
	LP  shift 37
	CHARACTER  shift 38
	NEG  shift 39
	.  error

	EXPR  goto 76
	UNARY_EXPR  goto 47
	PRIMARY_EXPR  goto 48
	UNARY_OP  goto 49
	CONST  goto 50
	FUNCTION_CALL  goto 54
	POSTFIX_EXPR  goto 55


state 38
	CONST : CHARACTER .  (84)

	.  reduce 84


state 39
	UNARY_OP : NEG .  (81)

	.  reduce 81


state 40
	DECLARATION : DATA_TYPE . ID  (45)
	DECLARATION : DATA_TYPE . ID ASSIGN EXPR  (46)
	DECLARATION : DATA_TYPE . ID LB INT_NUM RB  (48)
	DECLARATION : DATA_TYPE . ID LB INT_NUM RB ASSIGN $$4 LF ARR_VALUES RF  (50)

	ID  shift 77
	.  error


state 41
	FUNCTION : FUNCTION_PREFIX LF $$1 STMTLIST . RF  (6)

	RF  shift 78
	.  error


state 42
	STMTLIST : STMT . STMTLIST  (22)
	STMTLIST : .  (23)

	INT  shift 3
	CHAR  shift 4
	FLOAT  shift 5
	STRING  shift 23
	RETURN  shift 24
	INPUT  shift 25
	OUTPUT  shift 26
	IF  shift 27
	WHILE  shift 28
	FOR  shift 29
	BREAK  shift 30
	CONTINUE  shift 31
	INT_NUM  shift 32
	FLOAT_NUM  shift 33
	ID  shift 34
	ADD  shift 35
	SUB  shift 36
	LP  shift 37
	CHARACTER  shift 38
	NEG  shift 39
	RF  reduce 23

	DATA_TYPE  goto 40
	STMTLIST  goto 79
	STMT  goto 42
	DECLARATION  goto 43
	ASSIGNMENT  goto 44
	EXPR  goto 45
	RETURN_STMT  goto 46
	UNARY_EXPR  goto 47
	PRIMARY_EXPR  goto 48
	UNARY_OP  goto 49
	CONST  goto 50
	IF_STMT  goto 51
	WHILE_STMT  goto 52
	FOR_STMT  goto 53
	FUNCTION_CALL  goto 54
	POSTFIX_EXPR  goto 55


state 43
	STMT : DECLARATION . SCOL  (33)

	SCOL  shift 80
	.  error


state 44
	STMT : ASSIGNMENT . SCOL  (34)

	SCOL  shift 81
	.  error


state 45
	STMT : EXPR . SCOL  (35)
	EXPR : EXPR . ADD EXPR  (56)
	EXPR : EXPR . SUB EXPR  (57)
	EXPR : EXPR . MUL EXPR  (58)
	EXPR : EXPR . DIV EXPR  (59)
	EXPR : EXPR . EQ EXPR  (60)
	EXPR : EXPR . NE EXPR  (61)
	EXPR : EXPR . LT EXPR  (62)
	EXPR : EXPR . GT EXPR  (63)
	EXPR : EXPR . LE EXPR  (64)
	EXPR : EXPR . GE EXPR  (65)
	EXPR : EXPR . AND EXPR  (66)
	EXPR : EXPR . OR EXPR  (67)
	EXPR : EXPR . BITAND EXPR  (68)
	EXPR : EXPR . BITOR EXPR  (69)

	ADD  shift 82
	SUB  shift 83
	MUL  shift 84
	DIV  shift 85
	EQ  shift 86
	NE  shift 87
	LT  shift 88
	GT  shift 89
	LE  shift 90
	GE  shift 91
	AND  shift 92
	OR  shift 93
	SCOL  shift 94
	BITAND  shift 95
	BITOR  shift 96
	.  error


state 46
	STMT : RETURN_STMT . SCOL  (36)

	SCOL  shift 97
	.  error


state 47
	EXPR : UNARY_EXPR .  (70)

	.  reduce 70


state 48
	EXPR : PRIMARY_EXPR .  (71)

	.  reduce 71


state 49
	UNARY_EXPR : UNARY_OP . PRIMARY_EXPR  (75)

	INT_NUM  shift 32
	FLOAT_NUM  shift 33
	ID  shift 98
	LP  shift 37
	CHARACTER  shift 38
	.  error

	PRIMARY_EXPR  goto 99
	CONST  goto 50


state 50
	PRIMARY_EXPR : CONST .  (77)

	.  reduce 77


state 51
	STMT : IF_STMT .  (37)

	.  reduce 37


state 52
	STMT : WHILE_STMT .  (38)

	.  reduce 38


state 53
	STMT : FOR_STMT .  (39)

	.  reduce 39


state 54
	POSTFIX_EXPR : FUNCTION_CALL .  (73)

	.  reduce 73


state 55
	EXPR : POSTFIX_EXPR .  (72)

	.  reduce 72


state 56
	FUNCTION_PREFIX : FUNCTION_TYPE ID $$2 LP . PARAMLIST RP  (8)
	PARAMLIST : .  (20)

	INT  shift 3
	CHAR  shift 4
	FLOAT  shift 5
	STRING  shift 6
	RP  reduce 20

	DATA_TYPE  goto 100
	PARAMLIST  goto 101
	PARAM  goto 102


state 57
	ACCESS_MODIFIER : PUBLIC .  (30)

	.  reduce 30


state 58
	ACCESS_MODIFIER : PRIVATE .  (31)

	.  reduce 31


state 59
	ACCESS_MODIFIER : PROTECTED .  (32)

	.  reduce 32


state 60
	CLASSDEF : CLASS ID LF CLASSBODY RF .  (24)

	.  reduce 24


state 61
	CLASSBODY : CLASSBODY CLASSMEMBER .  (25)

	.  reduce 25


state 62
	CLASSMEMBER : ACCESS_MODIFIER . DATA_TYPE ID SCOL  (27)
	CLASSMEMBER : ACCESS_MODIFIER . FUNCTION  (28)

	INT  shift 3
	CHAR  shift 4
	FLOAT  shift 5
	STRING  shift 6
	VOID  shift 7
	.  error

	FUNCTION  goto 103
	FUNCTION_PREFIX  goto 10
	DATA_TYPE  goto 104
	FUNCTION_TYPE  goto 13


state 63
	DECLARATION : STRING ID . ASSIGN STR  (47)

	ASSIGN  shift 105
	.  error


state 64
	POSTFIX_EXPR : ID . LB EXPR RB  (74)
	PRIMARY_EXPR : ID .  (76)
	FUNCTION_CALL : ID . $$22 LP ARGUMENTLIST RP  (111)
	$$22 : .  (110)

	LB  shift 106
	ADD  reduce 76
	SUB  reduce 76
	MUL  reduce 76
	DIV  reduce 76
	EQ  reduce 76
	NE  reduce 76
	LT  reduce 76
	GT  reduce 76
	LE  reduce 76
	GE  reduce 76
	AND  reduce 76
	OR  reduce 76
	SCOL  reduce 76
	COMMA  reduce 76
	LP  reduce 110
	RP  reduce 76
	RB  reduce 76
	BITAND  reduce 76
	BITOR  reduce 76

	$$22  goto 75


state 65
	RETURN_STMT : RETURN EXPR .  (54)
	EXPR : EXPR . ADD EXPR  (56)
	EXPR : EXPR . SUB EXPR  (57)
	EXPR : EXPR . MUL EXPR  (58)
	EXPR : EXPR . DIV EXPR  (59)
	EXPR : EXPR . EQ EXPR  (60)
	EXPR : EXPR . NE EXPR  (61)
	EXPR : EXPR . LT EXPR  (62)
	EXPR : EXPR . GT EXPR  (63)
	EXPR : EXPR . LE EXPR  (64)
	EXPR : EXPR . GE EXPR  (65)
	EXPR : EXPR . AND EXPR  (66)
	EXPR : EXPR . OR EXPR  (67)
	EXPR : EXPR . BITAND EXPR  (68)
	EXPR : EXPR . BITOR EXPR  (69)

	ADD  shift 82
	SUB  shift 83
	MUL  shift 84
	DIV  shift 85
	EQ  shift 86
	NE  shift 87
	LT  shift 88
	GT  shift 89
	LE  shift 90
	GE  shift 91
	AND  shift 92
	OR  shift 93
	BITAND  shift 95
	BITOR  shift 96
	SCOL  reduce 54


state 66
	STMT : INPUT LP . ID RP SCOL  (42)
	STMT : INPUT LP . ID LB EXPR RB RP SCOL  (43)

	ID  shift 107
	.  error


state 67
	STMT : OUTPUT LP . EXPR RP SCOL  (44)

	INT_NUM  shift 32
	FLOAT_NUM  shift 33
	ID  shift 64
	ADD  shift 35
	SUB  shift 36
	LP  shift 37
	CHARACTER  shift 38
	NEG  shift 39
	.  error

	EXPR  goto 108
	UNARY_EXPR  goto 47
	PRIMARY_EXPR  goto 48
	UNARY_OP  goto 49
	CONST  goto 50
	FUNCTION_CALL  goto 54
	POSTFIX_EXPR  goto 55


state 68
	IF_STMT : IF $$6 . LP EXPR RP $$7 LF $$8 STMTLIST RF $$9 ELIF_STMT ELSE_STMT  (91)

	LP  shift 109
	.  error


state 69
	WHILE_STMT : WHILE $$15 . LP EXPR RP $$16 LF $$17 STMTLIST RF  (104)

	LP  shift 110
	.  error


state 70
	FOR_STMT : FOR LP . ASSIGNMENT SCOL $$18 EXPR SCOL $$19 ASSIGNMENT RP $$20 LF $$21 STMTLIST RF  (109)

	ID  shift 111
	.  error

	ASSIGNMENT  goto 112


state 71
	STMT : BREAK SCOL .  (40)

	.  reduce 40


state 72
	STMT : CONTINUE SCOL .  (41)

	.  reduce 41


state 73
	ASSIGNMENT : ID ASSIGN . EXPR  (85)

	INT_NUM  shift 32
	FLOAT_NUM  shift 33
	ID  shift 64
	ADD  shift 35
	SUB  shift 36
	LP  shift 37
	CHARACTER  shift 38
	NEG  shift 39
	.  error

	EXPR  goto 113
	UNARY_EXPR  goto 47
	PRIMARY_EXPR  goto 48
	UNARY_OP  goto 49
	CONST  goto 50
	FUNCTION_CALL  goto 54
	POSTFIX_EXPR  goto 55


state 74
	POSTFIX_EXPR : ID LB . EXPR RB  (74)
	ASSIGNMENT : ID LB . EXPR RB ASSIGN EXPR  (86)

	INT_NUM  shift 32
	FLOAT_NUM  shift 33
	ID  shift 64
	ADD  shift 35
	SUB  shift 36
	LP  shift 37
	CHARACTER  shift 38
	NEG  shift 39
	.  error

	EXPR  goto 114
	UNARY_EXPR  goto 47
	PRIMARY_EXPR  goto 48
	UNARY_OP  goto 49
	CONST  goto 50
	FUNCTION_CALL  goto 54
	POSTFIX_EXPR  goto 55


state 75
	FUNCTION_CALL : ID $$22 . LP ARGUMENTLIST RP  (111)

	LP  shift 115
	.  error


state 76
	EXPR : EXPR . ADD EXPR  (56)
	EXPR : EXPR . SUB EXPR  (57)
	EXPR : EXPR . MUL EXPR  (58)
	EXPR : EXPR . DIV EXPR  (59)
	EXPR : EXPR . EQ EXPR  (60)
	EXPR : EXPR . NE EXPR  (61)
	EXPR : EXPR . LT EXPR  (62)
	EXPR : EXPR . GT EXPR  (63)
	EXPR : EXPR . LE EXPR  (64)
	EXPR : EXPR . GE EXPR  (65)
	EXPR : EXPR . AND EXPR  (66)
	EXPR : EXPR . OR EXPR  (67)
	EXPR : EXPR . BITAND EXPR  (68)
	EXPR : EXPR . BITOR EXPR  (69)
	PRIMARY_EXPR : LP EXPR . RP  (78)

	ADD  shift 82
	SUB  shift 83
	MUL  shift 84
	DIV  shift 85
	EQ  shift 86
	NE  shift 87
	LT  shift 88
	GT  shift 89
	LE  shift 90
	GE  shift 91
	AND  shift 92
	OR  shift 93
	RP  shift 116
	BITAND  shift 95
	BITOR  shift 96
	.  error


state 77
	DECLARATION : DATA_TYPE ID .  (45)
	DECLARATION : DATA_TYPE ID . ASSIGN EXPR  (46)
	DECLARATION : DATA_TYPE ID . LB INT_NUM RB  (48)
	DECLARATION : DATA_TYPE ID . LB INT_NUM RB ASSIGN $$4 LF ARR_VALUES RF  (50)

	ASSIGN  shift 117
	LB  shift 118
	SCOL  reduce 45


state 78
	FUNCTION : FUNCTION_PREFIX LF $$1 STMTLIST RF .  (6)

	.  reduce 6


state 79
	STMTLIST : STMT STMTLIST .  (22)

	.  reduce 22


state 80
	STMT : DECLARATION SCOL .  (33)

	.  reduce 33


state 81
	STMT : ASSIGNMENT SCOL .  (34)

	.  reduce 34


state 82
	EXPR : EXPR ADD . EXPR  (56)

	INT_NUM  shift 32
	FLOAT_NUM  shift 33
	ID  shift 64
	ADD  shift 35
	SUB  shift 36
	LP  shift 37
	CHARACTER  shift 38
	NEG  shift 39
	.  error

	EXPR  goto 119
	UNARY_EXPR  goto 47
	PRIMARY_EXPR  goto 48
	UNARY_OP  goto 49
	CONST  goto 50
	FUNCTION_CALL  goto 54
	POSTFIX_EXPR  goto 55


state 83
	EXPR : EXPR SUB . EXPR  (57)

	INT_NUM  shift 32
	FLOAT_NUM  shift 33
	ID  shift 64
	ADD  shift 35
	SUB  shift 36
	LP  shift 37
	CHARACTER  shift 38
	NEG  shift 39
	.  error

	EXPR  goto 120
	UNARY_EXPR  goto 47
	PRIMARY_EXPR  goto 48
	UNARY_OP  goto 49
	CONST  goto 50
	FUNCTION_CALL  goto 54
	POSTFIX_EXPR  goto 55


state 84
	EXPR : EXPR MUL . EXPR  (58)

	INT_NUM  shift 32
	FLOAT_NUM  shift 33
	ID  shift 64
	ADD  shift 35
	SUB  shift 36
	LP  shift 37
	CHARACTER  shift 38
	NEG  shift 39
	.  error

	EXPR  goto 121
	UNARY_EXPR  goto 47
	PRIMARY_EXPR  goto 48
	UNARY_OP  goto 49
	CONST  goto 50
	FUNCTION_CALL  goto 54
	POSTFIX_EXPR  goto 55


state 85
	EXPR : EXPR DIV . EXPR  (59)

	INT_NUM  shift 32
	FLOAT_NUM  shift 33
	ID  shift 64
	ADD  shift 35
	SUB  shift 36
	LP  shift 37
	CHARACTER  shift 38
	NEG  shift 39
	.  error

	EXPR  goto 122
	UNARY_EXPR  goto 47
	PRIMARY_EXPR  goto 48
	UNARY_OP  goto 49
	CONST  goto 50
	FUNCTION_CALL  goto 54
	POSTFIX_EXPR  goto 55


state 86
	EXPR : EXPR EQ . EXPR  (60)

	INT_NUM  shift 32
	FLOAT_NUM  shift 33
	ID  shift 64
	ADD  shift 35
	SUB  shift 36
	LP  shift 37
	CHARACTER  shift 38
	NEG  shift 39
	.  error

	EXPR  goto 123
	UNARY_EXPR  goto 47
	PRIMARY_EXPR  goto 48
	UNARY_OP  goto 49
	CONST  goto 50
	FUNCTION_CALL  goto 54
	POSTFIX_EXPR  goto 55


state 87
	EXPR : EXPR NE . EXPR  (61)

	INT_NUM  shift 32
	FLOAT_NUM  shift 33
	ID  shift 64
	ADD  shift 35
	SUB  shift 36
	LP  shift 37
	CHARACTER  shift 38
	NEG  shift 39
	.  error

	EXPR  goto 124
	UNARY_EXPR  goto 47
	PRIMARY_EXPR  goto 48
	UNARY_OP  goto 49
	CONST  goto 50
	FUNCTION_CALL  goto 54
	POSTFIX_EXPR  goto 55


state 88
	EXPR : EXPR LT . EXPR  (62)

	INT_NUM  shift 32
	FLOAT_NUM  shift 33
	ID  shift 64
	ADD  shift 35
	SUB  shift 36
	LP  shift 37
	CHARACTER  shift 38
	NEG  shift 39
	.  error

	EXPR  goto 125
	UNARY_EXPR  goto 47
	PRIMARY_EXPR  goto 48
	UNARY_OP  goto 49
	CONST  goto 50
	FUNCTION_CALL  goto 54
	POSTFIX_EXPR  goto 55


state 89
	EXPR : EXPR GT . EXPR  (63)

	INT_NUM  shift 32
	FLOAT_NUM  shift 33
	ID  shift 64
	ADD  shift 35
	SUB  shift 36
	LP  shift 37
	CHARACTER  shift 38
	NEG  shift 39
	.  error

	EXPR  goto 126
	UNARY_EXPR  goto 47
	PRIMARY_EXPR  goto 48
	UNARY_OP  goto 49
	CONST  goto 50
	FUNCTION_CALL  goto 54
	POSTFIX_EXPR  goto 55


state 90
	EXPR : EXPR LE . EXPR  (64)

	INT_NUM  shift 32
	FLOAT_NUM  shift 33
	ID  shift 64
	ADD  shift 35
	SUB  shift 36
	LP  shift 37
	CHARACTER  shift 38
	NEG  shift 39
	.  error

	EXPR  goto 127
	UNARY_EXPR  goto 47
	PRIMARY_EXPR  goto 48
	UNARY_OP  goto 49
	CONST  goto 50
	FUNCTION_CALL  goto 54
	POSTFIX_EXPR  goto 55


state 91
	EXPR : EXPR GE . EXPR  (65)

	INT_NUM  shift 32
	FLOAT_NUM  shift 33
	ID  shift 64
	ADD  shift 35
	SUB  shift 36
	LP  shift 37
	CHARACTER  shift 38
	NEG  shift 39
	.  error

	EXPR  goto 128
	UNARY_EXPR  goto 47
	PRIMARY_EXPR  goto 48
	UNARY_OP  goto 49
	CONST  goto 50
	FUNCTION_CALL  goto 54
	POSTFIX_EXPR  goto 55


state 92
	EXPR : EXPR AND . EXPR  (66)

	INT_NUM  shift 32
	FLOAT_NUM  shift 33
	ID  shift 64
	ADD  shift 35
	SUB  shift 36
	LP  shift 37
	CHARACTER  shift 38
	NEG  shift 39
	.  error

	EXPR  goto 129
	UNARY_EXPR  goto 47
	PRIMARY_EXPR  goto 48
	UNARY_OP  goto 49
	CONST  goto 50
	FUNCTION_CALL  goto 54
	POSTFIX_EXPR  goto 55


state 93
	EXPR : EXPR OR . EXPR  (67)

	INT_NUM  shift 32
	FLOAT_NUM  shift 33
	ID  shift 64
	ADD  shift 35
	SUB  shift 36
	LP  shift 37
	CHARACTER  shift 38
	NEG  shift 39
	.  error

	EXPR  goto 130
	UNARY_EXPR  goto 47
	PRIMARY_EXPR  goto 48
	UNARY_OP  goto 49
	CONST  goto 50
	FUNCTION_CALL  goto 54
	POSTFIX_EXPR  goto 55


state 94
	STMT : EXPR SCOL .  (35)

	.  reduce 35


state 95
	EXPR : EXPR BITAND . EXPR  (68)

	INT_NUM  shift 32
	FLOAT_NUM  shift 33
	ID  shift 64
	ADD  shift 35
	SUB  shift 36
	LP  shift 37
	CHARACTER  shift 38
	NEG  shift 39
	.  error

	EXPR  goto 131
	UNARY_EXPR  goto 47
	PRIMARY_EXPR  goto 48
	UNARY_OP  goto 49
	CONST  goto 50
	FUNCTION_CALL  goto 54
	POSTFIX_EXPR  goto 55


state 96
	EXPR : EXPR BITOR . EXPR  (69)

	INT_NUM  shift 32
	FLOAT_NUM  shift 33
	ID  shift 64
	ADD  shift 35
	SUB  shift 36
	LP  shift 37
	CHARACTER  shift 38
	NEG  shift 39
	.  error

	EXPR  goto 132
	UNARY_EXPR  goto 47
	PRIMARY_EXPR  goto 48
	UNARY_OP  goto 49
	CONST  goto 50
	FUNCTION_CALL  goto 54
	POSTFIX_EXPR  goto 55


state 97
	STMT : RETURN_STMT SCOL .  (36)

	.  reduce 36


state 98
	PRIMARY_EXPR : ID .  (76)

	.  reduce 76


state 99
	UNARY_EXPR : UNARY_OP PRIMARY_EXPR .  (75)

	.  reduce 75


state 100
	PARAM : DATA_TYPE . ID  (21)

	ID  shift 133
	.  error


state 101
	FUNCTION_PREFIX : FUNCTION_TYPE ID $$2 LP PARAMLIST . RP  (8)

	RP  shift 134
	.  error


state 102
	PARAMLIST : PARAM . $$3 COMMA PARAMLIST  (18)
	PARAMLIST : PARAM .  (19)
	$$3 : .  (17)

	COMMA  reduce 17
	RP  reduce 19

	$$3  goto 135


state 103
	CLASSMEMBER : ACCESS_MODIFIER FUNCTION .  (28)

	.  reduce 28


104: shift/reduce conflict (shift 136, reduce 10) on ID
state 104
	FUNCTION_TYPE : DATA_TYPE .  (10)
	CLASSMEMBER : ACCESS_MODIFIER DATA_TYPE . ID SCOL  (27)

	ID  shift 136


state 105
	DECLARATION : STRING ID ASSIGN . STR  (47)

	STR  shift 137
	.  error


state 106
	POSTFIX_EXPR : ID LB . EXPR RB  (74)

	INT_NUM  shift 32
	FLOAT_NUM  shift 33
	ID  shift 64
	ADD  shift 35
	SUB  shift 36
	LP  shift 37
	CHARACTER  shift 38
	NEG  shift 39
	.  error

	EXPR  goto 138
	UNARY_EXPR  goto 47
	PRIMARY_EXPR  goto 48
	UNARY_OP  goto 49
	CONST  goto 50
	FUNCTION_CALL  goto 54
	POSTFIX_EXPR  goto 55


state 107
	STMT : INPUT LP ID . RP SCOL  (42)
	STMT : INPUT LP ID . LB EXPR RB RP SCOL  (43)

	RP  shift 139
	LB  shift 140
	.  error


state 108
	STMT : OUTPUT LP EXPR . RP SCOL  (44)
	EXPR : EXPR . ADD EXPR  (56)
	EXPR : EXPR . SUB EXPR  (57)
	EXPR : EXPR . MUL EXPR  (58)
	EXPR : EXPR . DIV EXPR  (59)
	EXPR : EXPR . EQ EXPR  (60)
	EXPR : EXPR . NE EXPR  (61)
	EXPR : EXPR . LT EXPR  (62)
	EXPR : EXPR . GT EXPR  (63)
	EXPR : EXPR . LE EXPR  (64)
	EXPR : EXPR . GE EXPR  (65)
	EXPR : EXPR . AND EXPR  (66)
	EXPR : EXPR . OR EXPR  (67)
	EXPR : EXPR . BITAND EXPR  (68)
	EXPR : EXPR . BITOR EXPR  (69)

	ADD  shift 82
	SUB  shift 83
	MUL  shift 84
	DIV  shift 85
	EQ  shift 86
	NE  shift 87
	LT  shift 88
	GT  shift 89
	LE  shift 90
	GE  shift 91
	AND  shift 92
	OR  shift 93
	RP  shift 141
	BITAND  shift 95
	BITOR  shift 96
	.  error


state 109
	IF_STMT : IF $$6 LP . EXPR RP $$7 LF $$8 STMTLIST RF $$9 ELIF_STMT ELSE_STMT  (91)

	INT_NUM  shift 32
	FLOAT_NUM  shift 33
	ID  shift 64
	ADD  shift 35
	SUB  shift 36
	LP  shift 37
	CHARACTER  shift 38
	NEG  shift 39
	.  error

	EXPR  goto 142
	UNARY_EXPR  goto 47
	PRIMARY_EXPR  goto 48
	UNARY_OP  goto 49
	CONST  goto 50
	FUNCTION_CALL  goto 54
	POSTFIX_EXPR  goto 55


state 110
	WHILE_STMT : WHILE $$15 LP . EXPR RP $$16 LF $$17 STMTLIST RF  (104)

	INT_NUM  shift 32
	FLOAT_NUM  shift 33
	ID  shift 64
	ADD  shift 35
	SUB  shift 36
	LP  shift 37
	CHARACTER  shift 38
	NEG  shift 39
	.  error

	EXPR  goto 143
	UNARY_EXPR  goto 47
	PRIMARY_EXPR  goto 48
	UNARY_OP  goto 49
	CONST  goto 50
	FUNCTION_CALL  goto 54
	POSTFIX_EXPR  goto 55


state 111
	ASSIGNMENT : ID . ASSIGN EXPR  (85)
	ASSIGNMENT : ID . LB EXPR RB ASSIGN EXPR  (86)

	ASSIGN  shift 73
	LB  shift 144
	.  error


state 112
	FOR_STMT : FOR LP ASSIGNMENT . SCOL $$18 EXPR SCOL $$19 ASSIGNMENT RP $$20 LF $$21 STMTLIST RF  (109)

	SCOL  shift 145
	.  error


state 113
	EXPR : EXPR . ADD EXPR  (56)
	EXPR : EXPR . SUB EXPR  (57)
	EXPR : EXPR . MUL EXPR  (58)
	EXPR : EXPR . DIV EXPR  (59)
	EXPR : EXPR . EQ EXPR  (60)
	EXPR : EXPR . NE EXPR  (61)
	EXPR : EXPR . LT EXPR  (62)
	EXPR : EXPR . GT EXPR  (63)
	EXPR : EXPR . LE EXPR  (64)
	EXPR : EXPR . GE EXPR  (65)
	EXPR : EXPR . AND EXPR  (66)
	EXPR : EXPR . OR EXPR  (67)
	EXPR : EXPR . BITAND EXPR  (68)
	EXPR : EXPR . BITOR EXPR  (69)
	ASSIGNMENT : ID ASSIGN EXPR .  (85)

	ADD  shift 82
	SUB  shift 83
	MUL  shift 84
	DIV  shift 85
	EQ  shift 86
	NE  shift 87
	LT  shift 88
	GT  shift 89
	LE  shift 90
	GE  shift 91
	AND  shift 92
	OR  shift 93
	BITAND  shift 95
	BITOR  shift 96
	SCOL  reduce 85
	RP  reduce 85


state 114
	EXPR : EXPR . ADD EXPR  (56)
	EXPR : EXPR . SUB EXPR  (57)
	EXPR : EXPR . MUL EXPR  (58)
	EXPR : EXPR . DIV EXPR  (59)
	EXPR : EXPR . EQ EXPR  (60)
	EXPR : EXPR . NE EXPR  (61)
	EXPR : EXPR . LT EXPR  (62)
	EXPR : EXPR . GT EXPR  (63)
	EXPR : EXPR . LE EXPR  (64)
	EXPR : EXPR . GE EXPR  (65)
	EXPR : EXPR . AND EXPR  (66)
	EXPR : EXPR . OR EXPR  (67)
	EXPR : EXPR . BITAND EXPR  (68)
	EXPR : EXPR . BITOR EXPR  (69)
	POSTFIX_EXPR : ID LB EXPR . RB  (74)
	ASSIGNMENT : ID LB EXPR . RB ASSIGN EXPR  (86)

	ADD  shift 82
	SUB  shift 83
	MUL  shift 84
	DIV  shift 85
	EQ  shift 86
	NE  shift 87
	LT  shift 88
	GT  shift 89
	LE  shift 90
	GE  shift 91
	AND  shift 92
	OR  shift 93
	RB  shift 146
	BITAND  shift 95
	BITOR  shift 96
	.  error


state 115
	FUNCTION_CALL : ID $$22 LP . ARGUMENTLIST RP  (111)
	ARGUMENTLIST : .  (114)

	INT_NUM  shift 32
	FLOAT_NUM  shift 33
	ID  shift 64
	ADD  shift 35
	SUB  shift 36
	LP  shift 37
	CHARACTER  shift 38
	NEG  shift 39
	RP  reduce 114

	EXPR  goto 147
	UNARY_EXPR  goto 47
	PRIMARY_EXPR  goto 48
	UNARY_OP  goto 49
	CONST  goto 50
	FUNCTION_CALL  goto 54
	ARGUMENTLIST  goto 148
	ARG  goto 149
	POSTFIX_EXPR  goto 55


state 116
	PRIMARY_EXPR : LP EXPR RP .  (78)

	.  reduce 78


state 117
	DECLARATION : DATA_TYPE ID ASSIGN . EXPR  (46)

	INT_NUM  shift 32
	FLOAT_NUM  shift 33
	ID  shift 64
	ADD  shift 35
	SUB  shift 36
	LP  shift 37
	CHARACTER  shift 38
	NEG  shift 39
	.  error

	EXPR  goto 150
	UNARY_EXPR  goto 47
	PRIMARY_EXPR  goto 48
	UNARY_OP  goto 49
	CONST  goto 50
	FUNCTION_CALL  goto 54
	POSTFIX_EXPR  goto 55


state 118
	DECLARATION : DATA_TYPE ID LB . INT_NUM RB  (48)
	DECLARATION : DATA_TYPE ID LB . INT_NUM RB ASSIGN $$4 LF ARR_VALUES RF  (50)

	INT_NUM  shift 151
	.  error


119: shift/reduce conflict (shift 95, reduce 56) on BITAND
119: shift/reduce conflict (shift 96, reduce 56) on BITOR
state 119
	EXPR : EXPR . ADD EXPR  (56)
	EXPR : EXPR ADD EXPR .  (56)
	EXPR : EXPR . SUB EXPR  (57)
	EXPR : EXPR . MUL EXPR  (58)
	EXPR : EXPR . DIV EXPR  (59)
	EXPR : EXPR . EQ EXPR  (60)
	EXPR : EXPR . NE EXPR  (61)
	EXPR : EXPR . LT EXPR  (62)
	EXPR : EXPR . GT EXPR  (63)
	EXPR : EXPR . LE EXPR  (64)
	EXPR : EXPR . GE EXPR  (65)
	EXPR : EXPR . AND EXPR  (66)
	EXPR : EXPR . OR EXPR  (67)
	EXPR : EXPR . BITAND EXPR  (68)
	EXPR : EXPR . BITOR EXPR  (69)

	MUL  shift 84
	DIV  shift 85
	BITAND  shift 95
	BITOR  shift 96
	ADD  reduce 56
	SUB  reduce 56
	EQ  reduce 56
	NE  reduce 56
	LT  reduce 56
	GT  reduce 56
	LE  reduce 56
	GE  reduce 56
	AND  reduce 56
	OR  reduce 56
	SCOL  reduce 56
	COMMA  reduce 56
	RP  reduce 56
	RB  reduce 56


120: shift/reduce conflict (shift 95, reduce 57) on BITAND
120: shift/reduce conflict (shift 96, reduce 57) on BITOR
state 120
	EXPR : EXPR . ADD EXPR  (56)
	EXPR : EXPR . SUB EXPR  (57)
	EXPR : EXPR SUB EXPR .  (57)
	EXPR : EXPR . MUL EXPR  (58)
	EXPR : EXPR . DIV EXPR  (59)
	EXPR : EXPR . EQ EXPR  (60)
	EXPR : EXPR . NE EXPR  (61)
	EXPR : EXPR . LT EXPR  (62)
	EXPR : EXPR . GT EXPR  (63)
	EXPR : EXPR . LE EXPR  (64)
	EXPR : EXPR . GE EXPR  (65)
	EXPR : EXPR . AND EXPR  (66)
	EXPR : EXPR . OR EXPR  (67)
	EXPR : EXPR . BITAND EXPR  (68)
	EXPR : EXPR . BITOR EXPR  (69)

	MUL  shift 84
	DIV  shift 85
	BITAND  shift 95
	BITOR  shift 96
	ADD  reduce 57
	SUB  reduce 57
	EQ  reduce 57
	NE  reduce 57
	LT  reduce 57
	GT  reduce 57
	LE  reduce 57
	GE  reduce 57
	AND  reduce 57
	OR  reduce 57
	SCOL  reduce 57
	COMMA  reduce 57
	RP  reduce 57
	RB  reduce 57


121: shift/reduce conflict (shift 95, reduce 58) on BITAND
121: shift/reduce conflict (shift 96, reduce 58) on BITOR
state 121
	EXPR : EXPR . ADD EXPR  (56)
	EXPR : EXPR . SUB EXPR  (57)
	EXPR : EXPR . MUL EXPR  (58)
	EXPR : EXPR MUL EXPR .  (58)
	EXPR : EXPR . DIV EXPR  (59)
	EXPR : EXPR . EQ EXPR  (60)
	EXPR : EXPR . NE EXPR  (61)
	EXPR : EXPR . LT EXPR  (62)
	EXPR : EXPR . GT EXPR  (63)
	EXPR : EXPR . LE EXPR  (64)
	EXPR : EXPR . GE EXPR  (65)
	EXPR : EXPR . AND EXPR  (66)
	EXPR : EXPR . OR EXPR  (67)
	EXPR : EXPR . BITAND EXPR  (68)
	EXPR : EXPR . BITOR EXPR  (69)

	BITAND  shift 95
	BITOR  shift 96
	ADD  reduce 58
	SUB  reduce 58
	MUL  reduce 58
	DIV  reduce 58
	EQ  reduce 58
	NE  reduce 58
	LT  reduce 58
	GT  reduce 58
	LE  reduce 58
	GE  reduce 58
	AND  reduce 58
	OR  reduce 58
	SCOL  reduce 58
	COMMA  reduce 58
	RP  reduce 58
	RB  reduce 58


122: shift/reduce conflict (shift 95, reduce 59) on BITAND
122: shift/reduce conflict (shift 96, reduce 59) on BITOR
state 122
	EXPR : EXPR . ADD EXPR  (56)
	EXPR : EXPR . SUB EXPR  (57)
	EXPR : EXPR . MUL EXPR  (58)
	EXPR : EXPR . DIV EXPR  (59)
	EXPR : EXPR DIV EXPR .  (59)
	EXPR : EXPR . EQ EXPR  (60)
	EXPR : EXPR . NE EXPR  (61)
	EXPR : EXPR . LT EXPR  (62)
	EXPR : EXPR . GT EXPR  (63)
	EXPR : EXPR . LE EXPR  (64)
	EXPR : EXPR . GE EXPR  (65)
	EXPR : EXPR . AND EXPR  (66)
	EXPR : EXPR . OR EXPR  (67)
	EXPR : EXPR . BITAND EXPR  (68)
	EXPR : EXPR . BITOR EXPR  (69)

	BITAND  shift 95
	BITOR  shift 96
	ADD  reduce 59
	SUB  reduce 59
	MUL  reduce 59
	DIV  reduce 59
	EQ  reduce 59
	NE  reduce 59
	LT  reduce 59
	GT  reduce 59
	LE  reduce 59
	GE  reduce 59
	AND  reduce 59
	OR  reduce 59
	SCOL  reduce 59
	COMMA  reduce 59
	RP  reduce 59
	RB  reduce 59


123: shift/reduce conflict (shift 95, reduce 60) on BITAND
123: shift/reduce conflict (shift 96, reduce 60) on BITOR
state 123
	EXPR : EXPR . ADD EXPR  (56)
	EXPR : EXPR . SUB EXPR  (57)
	EXPR : EXPR . MUL EXPR  (58)
	EXPR : EXPR . DIV EXPR  (59)
	EXPR : EXPR . EQ EXPR  (60)
	EXPR : EXPR EQ EXPR .  (60)
	EXPR : EXPR . NE EXPR  (61)
	EXPR : EXPR . LT EXPR  (62)
	EXPR : EXPR . GT EXPR  (63)
	EXPR : EXPR . LE EXPR  (64)
	EXPR : EXPR . GE EXPR  (65)
	EXPR : EXPR . AND EXPR  (66)
	EXPR : EXPR . OR EXPR  (67)
	EXPR : EXPR . BITAND EXPR  (68)
	EXPR : EXPR . BITOR EXPR  (69)

	ADD  shift 82
	SUB  shift 83
	MUL  shift 84
	DIV  shift 85
	LT  shift 88
	GT  shift 89
	LE  shift 90
	GE  shift 91
	BITAND  shift 95
	BITOR  shift 96
	EQ  reduce 60
	NE  reduce 60
	AND  reduce 60
	OR  reduce 60
	SCOL  reduce 60
	COMMA  reduce 60
	RP  reduce 60
	RB  reduce 60


124: shift/reduce conflict (shift 95, reduce 61) on BITAND
124: shift/reduce conflict (shift 96, reduce 61) on BITOR
state 124
	EXPR : EXPR . ADD EXPR  (56)
	EXPR : EXPR . SUB EXPR  (57)
	EXPR : EXPR . MUL EXPR  (58)
	EXPR : EXPR . DIV EXPR  (59)
	EXPR : EXPR . EQ EXPR  (60)
	EXPR : EXPR . NE EXPR  (61)
	EXPR : EXPR NE EXPR .  (61)
	EXPR : EXPR . LT EXPR  (62)
	EXPR : EXPR . GT EXPR  (63)
	EXPR : EXPR . LE EXPR  (64)
	EXPR : EXPR . GE EXPR  (65)
	EXPR : EXPR . AND EXPR  (66)
	EXPR : EXPR . OR EXPR  (67)
	EXPR : EXPR . BITAND EXPR  (68)
	EXPR : EXPR . BITOR EXPR  (69)

	ADD  shift 82
	SUB  shift 83
	MUL  shift 84
	DIV  shift 85
	LT  shift 88
	GT  shift 89
	LE  shift 90
	GE  shift 91
	BITAND  shift 95
	BITOR  shift 96
	EQ  reduce 61
	NE  reduce 61
	AND  reduce 61
	OR  reduce 61
	SCOL  reduce 61
	COMMA  reduce 61
	RP  reduce 61
	RB  reduce 61


125: shift/reduce conflict (shift 95, reduce 62) on BITAND
125: shift/reduce conflict (shift 96, reduce 62) on BITOR
state 125
	EXPR : EXPR . ADD EXPR  (56)
	EXPR : EXPR . SUB EXPR  (57)
	EXPR : EXPR . MUL EXPR  (58)
	EXPR : EXPR . DIV EXPR  (59)
	EXPR : EXPR . EQ EXPR  (60)
	EXPR : EXPR . NE EXPR  (61)
	EXPR : EXPR . LT EXPR  (62)
	EXPR : EXPR LT EXPR .  (62)
	EXPR : EXPR . GT EXPR  (63)
	EXPR : EXPR . LE EXPR  (64)
	EXPR : EXPR . GE EXPR  (65)
	EXPR : EXPR . AND EXPR  (66)
	EXPR : EXPR . OR EXPR  (67)
	EXPR : EXPR . BITAND EXPR  (68)
	EXPR : EXPR . BITOR EXPR  (69)

	ADD  shift 82
	SUB  shift 83
	MUL  shift 84
	DIV  shift 85
	BITAND  shift 95
	BITOR  shift 96
	EQ  reduce 62
	NE  reduce 62
	LT  reduce 62
	GT  reduce 62
	LE  reduce 62
	GE  reduce 62
	AND  reduce 62
	OR  reduce 62
	SCOL  reduce 62
	COMMA  reduce 62
	RP  reduce 62
	RB  reduce 62


126: shift/reduce conflict (shift 95, reduce 63) on BITAND
126: shift/reduce conflict (shift 96, reduce 63) on BITOR
state 126
	EXPR : EXPR . ADD EXPR  (56)
	EXPR : EXPR . SUB EXPR  (57)
	EXPR : EXPR . MUL EXPR  (58)
	EXPR : EXPR . DIV EXPR  (59)
	EXPR : EXPR . EQ EXPR  (60)
	EXPR : EXPR . NE EXPR  (61)
	EXPR : EXPR . LT EXPR  (62)
	EXPR : EXPR . GT EXPR  (63)
	EXPR : EXPR GT EXPR .  (63)
	EXPR : EXPR . LE EXPR  (64)
	EXPR : EXPR . GE EXPR  (65)
	EXPR : EXPR . AND EXPR  (66)
	EXPR : EXPR . OR EXPR  (67)
	EXPR : EXPR . BITAND EXPR  (68)
	EXPR : EXPR . BITOR EXPR  (69)

	ADD  shift 82
	SUB  shift 83
	MUL  shift 84
	DIV  shift 85
	BITAND  shift 95
	BITOR  shift 96
	EQ  reduce 63
	NE  reduce 63
	LT  reduce 63
	GT  reduce 63
	LE  reduce 63
	GE  reduce 63
	AND  reduce 63
	OR  reduce 63
	SCOL  reduce 63
	COMMA  reduce 63
	RP  reduce 63
	RB  reduce 63


127: shift/reduce conflict (shift 95, reduce 64) on BITAND
127: shift/reduce conflict (shift 96, reduce 64) on BITOR
state 127
	EXPR : EXPR . ADD EXPR  (56)
	EXPR : EXPR . SUB EXPR  (57)
	EXPR : EXPR . MUL EXPR  (58)
	EXPR : EXPR . DIV EXPR  (59)
	EXPR : EXPR . EQ EXPR  (60)
	EXPR : EXPR . NE EXPR  (61)
	EXPR : EXPR . LT EXPR  (62)
	EXPR : EXPR . GT EXPR  (63)
	EXPR : EXPR . LE EXPR  (64)
	EXPR : EXPR LE EXPR .  (64)
	EXPR : EXPR . GE EXPR  (65)
	EXPR : EXPR . AND EXPR  (66)
	EXPR : EXPR . OR EXPR  (67)
	EXPR : EXPR . BITAND EXPR  (68)
	EXPR : EXPR . BITOR EXPR  (69)

	ADD  shift 82
	SUB  shift 83
	MUL  shift 84
	DIV  shift 85
	BITAND  shift 95
	BITOR  shift 96
	EQ  reduce 64
	NE  reduce 64
	LT  reduce 64
	GT  reduce 64
	LE  reduce 64
	GE  reduce 64
	AND  reduce 64
	OR  reduce 64
	SCOL  reduce 64
	COMMA  reduce 64
	RP  reduce 64
	RB  reduce 64


128: shift/reduce conflict (shift 95, reduce 65) on BITAND
128: shift/reduce conflict (shift 96, reduce 65) on BITOR
state 128
	EXPR : EXPR . ADD EXPR  (56)
	EXPR : EXPR . SUB EXPR  (57)
	EXPR : EXPR . MUL EXPR  (58)
	EXPR : EXPR . DIV EXPR  (59)
	EXPR : EXPR . EQ EXPR  (60)
	EXPR : EXPR . NE EXPR  (61)
	EXPR : EXPR . LT EXPR  (62)
	EXPR : EXPR . GT EXPR  (63)
	EXPR : EXPR . LE EXPR  (64)
	EXPR : EXPR . GE EXPR  (65)
	EXPR : EXPR GE EXPR .  (65)
	EXPR : EXPR . AND EXPR  (66)
	EXPR : EXPR . OR EXPR  (67)
	EXPR : EXPR . BITAND EXPR  (68)
	EXPR : EXPR . BITOR EXPR  (69)

	ADD  shift 82
	SUB  shift 83
	MUL  shift 84
	DIV  shift 85
	BITAND  shift 95
	BITOR  shift 96
	EQ  reduce 65
	NE  reduce 65
	LT  reduce 65
	GT  reduce 65
	LE  reduce 65
	GE  reduce 65
	AND  reduce 65
	OR  reduce 65
	SCOL  reduce 65
	COMMA  reduce 65
	RP  reduce 65
	RB  reduce 65


129: shift/reduce conflict (shift 95, reduce 66) on BITAND
129: shift/reduce conflict (shift 96, reduce 66) on BITOR
state 129
	EXPR : EXPR . ADD EXPR  (56)
	EXPR : EXPR . SUB EXPR  (57)
	EXPR : EXPR . MUL EXPR  (58)
	EXPR : EXPR . DIV EXPR  (59)
	EXPR : EXPR . EQ EXPR  (60)
	EXPR : EXPR . NE EXPR  (61)
	EXPR : EXPR . LT EXPR  (62)
	EXPR : EXPR . GT EXPR  (63)
	EXPR : EXPR . LE EXPR  (64)
	EXPR : EXPR . GE EXPR  (65)
	EXPR : EXPR . AND EXPR  (66)
	EXPR : EXPR AND EXPR .  (66)
	EXPR : EXPR . OR EXPR  (67)
	EXPR : EXPR . BITAND EXPR  (68)
	EXPR : EXPR . BITOR EXPR  (69)

	ADD  shift 82
	SUB  shift 83
	MUL  shift 84
	DIV  shift 85
	EQ  shift 86
	NE  shift 87
	LT  shift 88
	GT  shift 89
	LE  shift 90
	GE  shift 91
	BITAND  shift 95
	BITOR  shift 96
	AND  reduce 66
	OR  reduce 66
	SCOL  reduce 66
	COMMA  reduce 66
	RP  reduce 66
	RB  reduce 66


130: shift/reduce conflict (shift 95, reduce 67) on BITAND
130: shift/reduce conflict (shift 96, reduce 67) on BITOR
state 130
	EXPR : EXPR . ADD EXPR  (56)
	EXPR : EXPR . SUB EXPR  (57)
	EXPR : EXPR . MUL EXPR  (58)
	EXPR : EXPR . DIV EXPR  (59)
	EXPR : EXPR . EQ EXPR  (60)
	EXPR : EXPR . NE EXPR  (61)
	EXPR : EXPR . LT EXPR  (62)
	EXPR : EXPR . GT EXPR  (63)
	EXPR : EXPR . LE EXPR  (64)
	EXPR : EXPR . GE EXPR  (65)
	EXPR : EXPR . AND EXPR  (66)
	EXPR : EXPR . OR EXPR  (67)
	EXPR : EXPR OR EXPR .  (67)
	EXPR : EXPR . BITAND EXPR  (68)
	EXPR : EXPR . BITOR EXPR  (69)

	ADD  shift 82
	SUB  shift 83
	MUL  shift 84
	DIV  shift 85
	EQ  shift 86
	NE  shift 87
	LT  shift 88
	GT  shift 89
	LE  shift 90
	GE  shift 91
	BITAND  shift 95
	BITOR  shift 96
	AND  reduce 67
	OR  reduce 67
	SCOL  reduce 67
	COMMA  reduce 67
	RP  reduce 67
	RB  reduce 67


131: shift/reduce conflict (shift 82, reduce 68) on ADD
131: shift/reduce conflict (shift 83, reduce 68) on SUB
131: shift/reduce conflict (shift 84, reduce 68) on MUL
131: shift/reduce conflict (shift 85, reduce 68) on DIV
131: shift/reduce conflict (shift 86, reduce 68) on EQ
131: shift/reduce conflict (shift 87, reduce 68) on NE
131: shift/reduce conflict (shift 88, reduce 68) on LT
131: shift/reduce conflict (shift 89, reduce 68) on GT
131: shift/reduce conflict (shift 90, reduce 68) on LE
131: shift/reduce conflict (shift 91, reduce 68) on GE
131: shift/reduce conflict (shift 92, reduce 68) on AND
131: shift/reduce conflict (shift 93, reduce 68) on OR
131: shift/reduce conflict (shift 95, reduce 68) on BITAND
131: shift/reduce conflict (shift 96, reduce 68) on BITOR
state 131
	EXPR : EXPR . ADD EXPR  (56)
	EXPR : EXPR . SUB EXPR  (57)
	EXPR : EXPR . MUL EXPR  (58)
	EXPR : EXPR . DIV EXPR  (59)
	EXPR : EXPR . EQ EXPR  (60)
	EXPR : EXPR . NE EXPR  (61)
	EXPR : EXPR . LT EXPR  (62)
	EXPR : EXPR . GT EXPR  (63)
	EXPR : EXPR . LE EXPR  (64)
	EXPR : EXPR . GE EXPR  (65)
	EXPR : EXPR . AND EXPR  (66)
	EXPR : EXPR . OR EXPR  (67)
	EXPR : EXPR . BITAND EXPR  (68)
	EXPR : EXPR BITAND EXPR .  (68)
	EXPR : EXPR . BITOR EXPR  (69)

	ADD  shift 82
	SUB  shift 83
	MUL  shift 84
	DIV  shift 85
	EQ  shift 86
	NE  shift 87
	LT  shift 88
	GT  shift 89
	LE  shift 90
	GE  shift 91
	AND  shift 92
	OR  shift 93
	BITAND  shift 95
	BITOR  shift 96
	SCOL  reduce 68
	COMMA  reduce 68
	RP  reduce 68
	RB  reduce 68


132: shift/reduce conflict (shift 82, reduce 69) on ADD
132: shift/reduce conflict (shift 83, reduce 69) on SUB
132: shift/reduce conflict (shift 84, reduce 69) on MUL
132: shift/reduce conflict (shift 85, reduce 69) on DIV
132: shift/reduce conflict (shift 86, reduce 69) on EQ
132: shift/reduce conflict (shift 87, reduce 69) on NE
132: shift/reduce conflict (shift 88, reduce 69) on LT
132: shift/reduce conflict (shift 89, reduce 69) on GT
132: shift/reduce conflict (shift 90, reduce 69) on LE
132: shift/reduce conflict (shift 91, reduce 69) on GE
132: shift/reduce conflict (shift 92, reduce 69) on AND
132: shift/reduce conflict (shift 93, reduce 69) on OR
132: shift/reduce conflict (shift 95, reduce 69) on BITAND
132: shift/reduce conflict (shift 96, reduce 69) on BITOR
state 132
	EXPR : EXPR . ADD EXPR  (56)
	EXPR : EXPR . SUB EXPR  (57)
	EXPR : EXPR . MUL EXPR  (58)
	EXPR : EXPR . DIV EXPR  (59)
	EXPR : EXPR . EQ EXPR  (60)
	EXPR : EXPR . NE EXPR  (61)
	EXPR : EXPR . LT EXPR  (62)
	EXPR : EXPR . GT EXPR  (63)
	EXPR : EXPR . LE EXPR  (64)
	EXPR : EXPR . GE EXPR  (65)
	EXPR : EXPR . AND EXPR  (66)
	EXPR : EXPR . OR EXPR  (67)
	EXPR : EXPR . BITAND EXPR  (68)
	EXPR : EXPR . BITOR EXPR  (69)
	EXPR : EXPR BITOR EXPR .  (69)

	ADD  shift 82
	SUB  shift 83
	MUL  shift 84
	DIV  shift 85
	EQ  shift 86
	NE  shift 87
	LT  shift 88
	GT  shift 89
	LE  shift 90
	GE  shift 91
	AND  shift 92
	OR  shift 93
	BITAND  shift 95
	BITOR  shift 96
	SCOL  reduce 69
	COMMA  reduce 69
	RP  reduce 69
	RB  reduce 69


state 133
	PARAM : DATA_TYPE ID .  (21)

	.  reduce 21


state 134
	FUNCTION_PREFIX : FUNCTION_TYPE ID $$2 LP PARAMLIST RP .  (8)

	.  reduce 8


state 135
	PARAMLIST : PARAM $$3 . COMMA PARAMLIST  (18)

	COMMA  shift 152
	.  error


state 136
	CLASSMEMBER : ACCESS_MODIFIER DATA_TYPE ID . SCOL  (27)

	SCOL  shift 153
	.  error


state 137
	DECLARATION : STRING ID ASSIGN STR .  (47)

	.  reduce 47


state 138
	EXPR : EXPR . ADD EXPR  (56)
	EXPR : EXPR . SUB EXPR  (57)
	EXPR : EXPR . MUL EXPR  (58)
	EXPR : EXPR . DIV EXPR  (59)
	EXPR : EXPR . EQ EXPR  (60)
	EXPR : EXPR . NE EXPR  (61)
	EXPR : EXPR . LT EXPR  (62)
	EXPR : EXPR . GT EXPR  (63)
	EXPR : EXPR . LE EXPR  (64)
	EXPR : EXPR . GE EXPR  (65)
	EXPR : EXPR . AND EXPR  (66)
	EXPR : EXPR . OR EXPR  (67)
	EXPR : EXPR . BITAND EXPR  (68)
	EXPR : EXPR . BITOR EXPR  (69)
	POSTFIX_EXPR : ID LB EXPR . RB  (74)

	ADD  shift 82
	SUB  shift 83
	MUL  shift 84
	DIV  shift 85
	EQ  shift 86
	NE  shift 87
	LT  shift 88
	GT  shift 89
	LE  shift 90
	GE  shift 91
	AND  shift 92
	OR  shift 93
	RB  shift 154
	BITAND  shift 95
	BITOR  shift 96
	.  error


state 139
	STMT : INPUT LP ID RP . SCOL  (42)

	SCOL  shift 155
	.  error


state 140
	STMT : INPUT LP ID LB . EXPR RB RP SCOL  (43)

	INT_NUM  shift 32
	FLOAT_NUM  shift 33
	ID  shift 64
	ADD  shift 35
	SUB  shift 36
	LP  shift 37
	CHARACTER  shift 38
	NEG  shift 39
	.  error

	EXPR  goto 156
	UNARY_EXPR  goto 47
	PRIMARY_EXPR  goto 48
	UNARY_OP  goto 49
	CONST  goto 50
	FUNCTION_CALL  goto 54
	POSTFIX_EXPR  goto 55


state 141
	STMT : OUTPUT LP EXPR RP . SCOL  (44)

	SCOL  shift 157
	.  error


state 142
	EXPR : EXPR . ADD EXPR  (56)
	EXPR : EXPR . SUB EXPR  (57)
	EXPR : EXPR . MUL EXPR  (58)
	EXPR : EXPR . DIV EXPR  (59)
	EXPR : EXPR . EQ EXPR  (60)
	EXPR : EXPR . NE EXPR  (61)
	EXPR : EXPR . LT EXPR  (62)
	EXPR : EXPR . GT EXPR  (63)
	EXPR : EXPR . LE EXPR  (64)
	EXPR : EXPR . GE EXPR  (65)
	EXPR : EXPR . AND EXPR  (66)
	EXPR : EXPR . OR EXPR  (67)
	EXPR : EXPR . BITAND EXPR  (68)
	EXPR : EXPR . BITOR EXPR  (69)
	IF_STMT : IF $$6 LP EXPR . RP $$7 LF $$8 STMTLIST RF $$9 ELIF_STMT ELSE_STMT  (91)

	ADD  shift 82
	SUB  shift 83
	MUL  shift 84
	DIV  shift 85
	EQ  shift 86
	NE  shift 87
	LT  shift 88
	GT  shift 89
	LE  shift 90
	GE  shift 91
	AND  shift 92
	OR  shift 93
	RP  shift 158
	BITAND  shift 95
	BITOR  shift 96
	.  error


state 143
	EXPR : EXPR . ADD EXPR  (56)
	EXPR : EXPR . SUB EXPR  (57)
	EXPR : EXPR . MUL EXPR  (58)
	EXPR : EXPR . DIV EXPR  (59)
	EXPR : EXPR . EQ EXPR  (60)
	EXPR : EXPR . NE EXPR  (61)
	EXPR : EXPR . LT EXPR  (62)
	EXPR : EXPR . GT EXPR  (63)
	EXPR : EXPR . LE EXPR  (64)
	EXPR : EXPR . GE EXPR  (65)
	EXPR : EXPR . AND EXPR  (66)
	EXPR : EXPR . OR EXPR  (67)
	EXPR : EXPR . BITAND EXPR  (68)
	EXPR : EXPR . BITOR EXPR  (69)
	WHILE_STMT : WHILE $$15 LP EXPR . RP $$16 LF $$17 STMTLIST RF  (104)

	ADD  shift 82
	SUB  shift 83
	MUL  shift 84
	DIV  shift 85
	EQ  shift 86
	NE  shift 87
	LT  shift 88
	GT  shift 89
	LE  shift 90
	GE  shift 91
	AND  shift 92
	OR  shift 93
	RP  shift 159
	BITAND  shift 95
	BITOR  shift 96
	.  error


state 144
	ASSIGNMENT : ID LB . EXPR RB ASSIGN EXPR  (86)

	INT_NUM  shift 32
	FLOAT_NUM  shift 33
	ID  shift 64
	ADD  shift 35
	SUB  shift 36
	LP  shift 37
	CHARACTER  shift 38
	NEG  shift 39
	.  error

	EXPR  goto 160
	UNARY_EXPR  goto 47
	PRIMARY_EXPR  goto 48
	UNARY_OP  goto 49
	CONST  goto 50
	FUNCTION_CALL  goto 54
	POSTFIX_EXPR  goto 55


state 145
	FOR_STMT : FOR LP ASSIGNMENT SCOL . $$18 EXPR SCOL $$19 ASSIGNMENT RP $$20 LF $$21 STMTLIST RF  (109)
	$$18 : .  (105)

	.  reduce 105

	$$18  goto 161


state 146
	POSTFIX_EXPR : ID LB EXPR RB .  (74)
	ASSIGNMENT : ID LB EXPR RB . ASSIGN EXPR  (86)

	ASSIGN  shift 162
	ADD  reduce 74
	SUB  reduce 74
	MUL  reduce 74
	DIV  reduce 74
	EQ  reduce 74
	NE  reduce 74
	LT  reduce 74
	GT  reduce 74
	LE  reduce 74
	GE  reduce 74
	AND  reduce 74
	OR  reduce 74
	SCOL  reduce 74
	BITAND  reduce 74
	BITOR  reduce 74


state 147
	EXPR : EXPR . ADD EXPR  (56)
	EXPR : EXPR . SUB EXPR  (57)
	EXPR : EXPR . MUL EXPR  (58)
	EXPR : EXPR . DIV EXPR  (59)
	EXPR : EXPR . EQ EXPR  (60)
	EXPR : EXPR . NE EXPR  (61)
	EXPR : EXPR . LT EXPR  (62)
	EXPR : EXPR . GT EXPR  (63)
	EXPR : EXPR . LE EXPR  (64)
	EXPR : EXPR . GE EXPR  (65)
	EXPR : EXPR . AND EXPR  (66)
	EXPR : EXPR . OR EXPR  (67)
	EXPR : EXPR . BITAND EXPR  (68)
	EXPR : EXPR . BITOR EXPR  (69)
	ARG : EXPR .  (115)

	ADD  shift 82
	SUB  shift 83
	MUL  shift 84
	DIV  shift 85
	EQ  shift 86
	NE  shift 87
	LT  shift 88
	GT  shift 89
	LE  shift 90
	GE  shift 91
	AND  shift 92
	OR  shift 93
	BITAND  shift 95
	BITOR  shift 96
	COMMA  reduce 115
	RP  reduce 115


state 148
	FUNCTION_CALL : ID $$22 LP ARGUMENTLIST . RP  (111)

	RP  shift 163
	.  error


state 149
	ARGUMENTLIST : ARG . COMMA ARGUMENTLIST  (112)
	ARGUMENTLIST : ARG .  (113)

	COMMA  shift 164
	RP  reduce 113


state 150
	DECLARATION : DATA_TYPE ID ASSIGN EXPR .  (46)
	EXPR : EXPR . ADD EXPR  (56)
	EXPR : EXPR . SUB EXPR  (57)
	EXPR : EXPR . MUL EXPR  (58)
	EXPR : EXPR . DIV EXPR  (59)
	EXPR : EXPR . EQ EXPR  (60)
	EXPR : EXPR . NE EXPR  (61)
	EXPR : EXPR . LT EXPR  (62)
	EXPR : EXPR . GT EXPR  (63)
	EXPR : EXPR . LE EXPR  (64)
	EXPR : EXPR . GE EXPR  (65)
	EXPR : EXPR . AND EXPR  (66)
	EXPR : EXPR . OR EXPR  (67)
	EXPR : EXPR . BITAND EXPR  (68)
	EXPR : EXPR . BITOR EXPR  (69)

	ADD  shift 82
	SUB  shift 83
	MUL  shift 84
	DIV  shift 85
	EQ  shift 86
	NE  shift 87
	LT  shift 88
	GT  shift 89
	LE  shift 90
	GE  shift 91
	AND  shift 92
	OR  shift 93
	BITAND  shift 95
	BITOR  shift 96
	SCOL  reduce 46


state 151
	DECLARATION : DATA_TYPE ID LB INT_NUM . RB  (48)
	DECLARATION : DATA_TYPE ID LB INT_NUM . RB ASSIGN $$4 LF ARR_VALUES RF  (50)

	RB  shift 165
	.  error


state 152
	PARAMLIST : PARAM $$3 COMMA . PARAMLIST  (18)
	PARAMLIST : .  (20)

	INT  shift 3
	CHAR  shift 4
	FLOAT  shift 5
	STRING  shift 6
	RP  reduce 20

	DATA_TYPE  goto 100
	PARAMLIST  goto 166
	PARAM  goto 102


state 153
	CLASSMEMBER : ACCESS_MODIFIER DATA_TYPE ID SCOL .  (27)

	.  reduce 27


state 154
	POSTFIX_EXPR : ID LB EXPR RB .  (74)

	.  reduce 74


state 155
	STMT : INPUT LP ID RP SCOL .  (42)

	.  reduce 42


state 156
	STMT : INPUT LP ID LB EXPR . RB RP SCOL  (43)
	EXPR : EXPR . ADD EXPR  (56)
	EXPR : EXPR . SUB EXPR  (57)
	EXPR : EXPR . MUL EXPR  (58)
	EXPR : EXPR . DIV EXPR  (59)
	EXPR : EXPR . EQ EXPR  (60)
	EXPR : EXPR . NE EXPR  (61)
	EXPR : EXPR . LT EXPR  (62)
	EXPR : EXPR . GT EXPR  (63)
	EXPR : EXPR . LE EXPR  (64)
	EXPR : EXPR . GE EXPR  (65)
	EXPR : EXPR . AND EXPR  (66)
	EXPR : EXPR . OR EXPR  (67)
	EXPR : EXPR . BITAND EXPR  (68)
	EXPR : EXPR . BITOR EXPR  (69)

	ADD  shift 82
	SUB  shift 83
	MUL  shift 84
	DIV  shift 85
	EQ  shift 86
	NE  shift 87
	LT  shift 88
	GT  shift 89
	LE  shift 90
	GE  shift 91
	AND  shift 92
	OR  shift 93
	RB  shift 167
	BITAND  shift 95
	BITOR  shift 96
	.  error


state 157
	STMT : OUTPUT LP EXPR RP SCOL .  (44)

	.  reduce 44


state 158
	IF_STMT : IF $$6 LP EXPR RP . $$7 LF $$8 STMTLIST RF $$9 ELIF_STMT ELSE_STMT  (91)
	$$7 : .  (88)

	.  reduce 88

	$$7  goto 168


state 159
	WHILE_STMT : WHILE $$15 LP EXPR RP . $$16 LF $$17 STMTLIST RF  (104)
	$$16 : .  (102)

	.  reduce 102

	$$16  goto 169


state 160
	EXPR : EXPR . ADD EXPR  (56)
	EXPR : EXPR . SUB EXPR  (57)
	EXPR : EXPR . MUL EXPR  (58)
	EXPR : EXPR . DIV EXPR  (59)
	EXPR : EXPR . EQ EXPR  (60)
	EXPR : EXPR . NE EXPR  (61)
	EXPR : EXPR . LT EXPR  (62)
	EXPR : EXPR . GT EXPR  (63)
	EXPR : EXPR . LE EXPR  (64)
	EXPR : EXPR . GE EXPR  (65)
	EXPR : EXPR . AND EXPR  (66)
	EXPR : EXPR . OR EXPR  (67)
	EXPR : EXPR . BITAND EXPR  (68)
	EXPR : EXPR . BITOR EXPR  (69)
	ASSIGNMENT : ID LB EXPR . RB ASSIGN EXPR  (86)

	ADD  shift 82
	SUB  shift 83
	MUL  shift 84
	DIV  shift 85
	EQ  shift 86
	NE  shift 87
	LT  shift 88
	GT  shift 89
	LE  shift 90
	GE  shift 91
	AND  shift 92
	OR  shift 93
	RB  shift 170
	BITAND  shift 95
	BITOR  shift 96
	.  error


state 161
	FOR_STMT : FOR LP ASSIGNMENT SCOL $$18 . EXPR SCOL $$19 ASSIGNMENT RP $$20 LF $$21 STMTLIST RF  (109)

	INT_NUM  shift 32
	FLOAT_NUM  shift 33
	ID  shift 64
	ADD  shift 35
	SUB  shift 36
	LP  shift 37
	CHARACTER  shift 38
	NEG  shift 39
	.  error

	EXPR  goto 171
	UNARY_EXPR  goto 47
	PRIMARY_EXPR  goto 48
	UNARY_OP  goto 49
	CONST  goto 50
	FUNCTION_CALL  goto 54
	POSTFIX_EXPR  goto 55


state 162
	ASSIGNMENT : ID LB EXPR RB ASSIGN . EXPR  (86)

	INT_NUM  shift 32
	FLOAT_NUM  shift 33
	ID  shift 64
	ADD  shift 35
	SUB  shift 36
	LP  shift 37
	CHARACTER  shift 38
	NEG  shift 39
	.  error

	EXPR  goto 172
	UNARY_EXPR  goto 47
	PRIMARY_EXPR  goto 48
	UNARY_OP  goto 49
	CONST  goto 50
	FUNCTION_CALL  goto 54
	POSTFIX_EXPR  goto 55


state 163
	FUNCTION_CALL : ID $$22 LP ARGUMENTLIST RP .  (111)

	.  reduce 111


state 164
	ARGUMENTLIST : ARG COMMA . ARGUMENTLIST  (112)
	ARGUMENTLIST : .  (114)

	INT_NUM  shift 32
	FLOAT_NUM  shift 33
	ID  shift 64
	ADD  shift 35
	SUB  shift 36
	LP  shift 37
	CHARACTER  shift 38
	NEG  shift 39
	RP  reduce 114

	EXPR  goto 147
	UNARY_EXPR  goto 47
	PRIMARY_EXPR  goto 48
	UNARY_OP  goto 49
	CONST  goto 50
	FUNCTION_CALL  goto 54
	ARGUMENTLIST  goto 173
	ARG  goto 149
	POSTFIX_EXPR  goto 55


state 165
	DECLARATION : DATA_TYPE ID LB INT_NUM RB .  (48)
	DECLARATION : DATA_TYPE ID LB INT_NUM RB . ASSIGN $$4 LF ARR_VALUES RF  (50)

	ASSIGN  shift 174
	SCOL  reduce 48


state 166
	PARAMLIST : PARAM $$3 COMMA PARAMLIST .  (18)

	.  reduce 18


state 167
	STMT : INPUT LP ID LB EXPR RB . RP SCOL  (43)

	RP  shift 175
	.  error


state 168
	IF_STMT : IF $$6 LP EXPR RP $$7 . LF $$8 STMTLIST RF $$9 ELIF_STMT ELSE_STMT  (91)

	LF  shift 176
	.  error


state 169
	WHILE_STMT : WHILE $$15 LP EXPR RP $$16 . LF $$17 STMTLIST RF  (104)

	LF  shift 177
	.  error


state 170
	ASSIGNMENT : ID LB EXPR RB . ASSIGN EXPR  (86)

	ASSIGN  shift 162
	.  error


state 171
	EXPR : EXPR . ADD EXPR  (56)
	EXPR : EXPR . SUB EXPR  (57)
	EXPR : EXPR . MUL EXPR  (58)
	EXPR : EXPR . DIV EXPR  (59)
	EXPR : EXPR . EQ EXPR  (60)
	EXPR : EXPR . NE EXPR  (61)
	EXPR : EXPR . LT EXPR  (62)
	EXPR : EXPR . GT EXPR  (63)
	EXPR : EXPR . LE EXPR  (64)
	EXPR : EXPR . GE EXPR  (65)
	EXPR : EXPR . AND EXPR  (66)
	EXPR : EXPR . OR EXPR  (67)
	EXPR : EXPR . BITAND EXPR  (68)
	EXPR : EXPR . BITOR EXPR  (69)
	FOR_STMT : FOR LP ASSIGNMENT SCOL $$18 EXPR . SCOL $$19 ASSIGNMENT RP $$20 LF $$21 STMTLIST RF  (109)

	ADD  shift 82
	SUB  shift 83
	MUL  shift 84
	DIV  shift 85
	EQ  shift 86
	NE  shift 87
	LT  shift 88
	GT  shift 89
	LE  shift 90
	GE  shift 91
	AND  shift 92
	OR  shift 93
	SCOL  shift 178
	BITAND  shift 95
	BITOR  shift 96
	.  error


state 172
	EXPR : EXPR . ADD EXPR  (56)
	EXPR : EXPR . SUB EXPR  (57)
	EXPR : EXPR . MUL EXPR  (58)
	EXPR : EXPR . DIV EXPR  (59)
	EXPR : EXPR . EQ EXPR  (60)
	EXPR : EXPR . NE EXPR  (61)
	EXPR : EXPR . LT EXPR  (62)
	EXPR : EXPR . GT EXPR  (63)
	EXPR : EXPR . LE EXPR  (64)
	EXPR : EXPR . GE EXPR  (65)
	EXPR : EXPR . AND EXPR  (66)
	EXPR : EXPR . OR EXPR  (67)
	EXPR : EXPR . BITAND EXPR  (68)
	EXPR : EXPR . BITOR EXPR  (69)
	ASSIGNMENT : ID LB EXPR RB ASSIGN EXPR .  (86)

	ADD  shift 82
	SUB  shift 83
	MUL  shift 84
	DIV  shift 85
	EQ  shift 86
	NE  shift 87
	LT  shift 88
	GT  shift 89
	LE  shift 90
	GE  shift 91
	AND  shift 92
	OR  shift 93
	BITAND  shift 95
	BITOR  shift 96
	SCOL  reduce 86
	RP  reduce 86


state 173
	ARGUMENTLIST : ARG COMMA ARGUMENTLIST .  (112)

	.  reduce 112


state 174
	DECLARATION : DATA_TYPE ID LB INT_NUM RB ASSIGN . $$4 LF ARR_VALUES RF  (50)
	$$4 : .  (49)

	.  reduce 49

	$$4  goto 179


state 175
	STMT : INPUT LP ID LB EXPR RB RP . SCOL  (43)

	SCOL  shift 180
	.  error


state 176
	IF_STMT : IF $$6 LP EXPR RP $$7 LF . $$8 STMTLIST RF $$9 ELIF_STMT ELSE_STMT  (91)
	$$8 : .  (89)

	.  reduce 89

	$$8  goto 181


state 177
	WHILE_STMT : WHILE $$15 LP EXPR RP $$16 LF . $$17 STMTLIST RF  (104)
	$$17 : .  (103)

	.  reduce 103

	$$17  goto 182


state 178
	FOR_STMT : FOR LP ASSIGNMENT SCOL $$18 EXPR SCOL . $$19 ASSIGNMENT RP $$20 LF $$21 STMTLIST RF  (109)
	$$19 : .  (106)

	.  reduce 106

	$$19  goto 183


state 179
	DECLARATION : DATA_TYPE ID LB INT_NUM RB ASSIGN $$4 . LF ARR_VALUES RF  (50)

	LF  shift 184
	.  error


state 180
	STMT : INPUT LP ID LB EXPR RB RP SCOL .  (43)

	.  reduce 43


state 181
	IF_STMT : IF $$6 LP EXPR RP $$7 LF $$8 . STMTLIST RF $$9 ELIF_STMT ELSE_STMT  (91)
	STMTLIST : .  (23)

	INT  shift 3
	CHAR  shift 4
	FLOAT  shift 5
	STRING  shift 23
	RETURN  shift 24
	INPUT  shift 25
	OUTPUT  shift 26
	IF  shift 27
	WHILE  shift 28
	FOR  shift 29
	BREAK  shift 30
	CONTINUE  shift 31
	INT_NUM  shift 32
	FLOAT_NUM  shift 33
	ID  shift 34
	ADD  shift 35
	SUB  shift 36
	LP  shift 37
	CHARACTER  shift 38
	NEG  shift 39
	RF  reduce 23

	DATA_TYPE  goto 40
	STMTLIST  goto 185
	STMT  goto 42
	DECLARATION  goto 43
	ASSIGNMENT  goto 44
	EXPR  goto 45
	RETURN_STMT  goto 46
	UNARY_EXPR  goto 47
	PRIMARY_EXPR  goto 48
	UNARY_OP  goto 49
	CONST  goto 50
	IF_STMT  goto 51
	WHILE_STMT  goto 52
	FOR_STMT  goto 53
	FUNCTION_CALL  goto 54
	POSTFIX_EXPR  goto 55


state 182
	WHILE_STMT : WHILE $$15 LP EXPR RP $$16 LF $$17 . STMTLIST RF  (104)
	STMTLIST : .  (23)

	INT  shift 3
	CHAR  shift 4
	FLOAT  shift 5
	STRING  shift 23
	RETURN  shift 24
	INPUT  shift 25
	OUTPUT  shift 26
	IF  shift 27
	WHILE  shift 28
	FOR  shift 29
	BREAK  shift 30
	CONTINUE  shift 31
	INT_NUM  shift 32
	FLOAT_NUM  shift 33
	ID  shift 34
	ADD  shift 35
	SUB  shift 36
	LP  shift 37
	CHARACTER  shift 38
	NEG  shift 39
	RF  reduce 23

	DATA_TYPE  goto 40
	STMTLIST  goto 186
	STMT  goto 42
	DECLARATION  goto 43
	ASSIGNMENT  goto 44
	EXPR  goto 45
	RETURN_STMT  goto 46
	UNARY_EXPR  goto 47
	PRIMARY_EXPR  goto 48
	UNARY_OP  goto 49
	CONST  goto 50
	IF_STMT  goto 51
	WHILE_STMT  goto 52
	FOR_STMT  goto 53
	FUNCTION_CALL  goto 54
	POSTFIX_EXPR  goto 55


state 183
	FOR_STMT : FOR LP ASSIGNMENT SCOL $$18 EXPR SCOL $$19 . ASSIGNMENT RP $$20 LF $$21 STMTLIST RF  (109)

	ID  shift 111
	.  error

	ASSIGNMENT  goto 187


state 184
	DECLARATION : DATA_TYPE ID LB INT_NUM RB ASSIGN $$4 LF . ARR_VALUES RF  (50)

	INT_NUM  shift 32
	FLOAT_NUM  shift 33
	CHARACTER  shift 38
	.  error

	CONST  goto 188
	ARR_VALUES  goto 189


state 185
	IF_STMT : IF $$6 LP EXPR RP $$7 LF $$8 STMTLIST . RF $$9 ELIF_STMT ELSE_STMT  (91)

	RF  shift 190
	.  error


state 186
	WHILE_STMT : WHILE $$15 LP EXPR RP $$16 LF $$17 STMTLIST . RF  (104)

	RF  shift 191
	.  error


state 187
	FOR_STMT : FOR LP ASSIGNMENT SCOL $$18 EXPR SCOL $$19 ASSIGNMENT . RP $$20 LF $$21 STMTLIST RF  (109)

	RP  shift 192
	.  error


state 188
	ARR_VALUES : CONST . $$5 COMMA ARR_VALUES  (52)
	ARR_VALUES : CONST .  (53)
	$$5 : .  (51)

	COMMA  reduce 51
	RF  reduce 53

	$$5  goto 193


state 189
	DECLARATION : DATA_TYPE ID LB INT_NUM RB ASSIGN $$4 LF ARR_VALUES . RF  (50)

	RF  shift 194
	.  error


state 190
	IF_STMT : IF $$6 LP EXPR RP $$7 LF $$8 STMTLIST RF . $$9 ELIF_STMT ELSE_STMT  (91)
	$$9 : .  (90)

	.  reduce 90

	$$9  goto 195


state 191
	WHILE_STMT : WHILE $$15 LP EXPR RP $$16 LF $$17 STMTLIST RF .  (104)

	.  reduce 104


state 192
	FOR_STMT : FOR LP ASSIGNMENT SCOL $$18 EXPR SCOL $$19 ASSIGNMENT RP . $$20 LF $$21 STMTLIST RF  (109)
	$$20 : .  (107)

	.  reduce 107

	$$20  goto 196


state 193
	ARR_VALUES : CONST $$5 . COMMA ARR_VALUES  (52)

	COMMA  shift 197
	.  error


state 194
	DECLARATION : DATA_TYPE ID LB INT_NUM RB ASSIGN $$4 LF ARR_VALUES RF .  (50)

	.  reduce 50


195: shift/reduce conflict (shift 198, reduce 97) on ELSE
state 195
	IF_STMT : IF $$6 LP EXPR RP $$7 LF $$8 STMTLIST RF $$9 . ELIF_STMT ELSE_STMT  (91)
	ELIF_STMT : .  (97)

	ELSE  shift 198
	INT  reduce 97
	CHAR  reduce 97
	FLOAT  reduce 97
	STRING  reduce 97
	RETURN  reduce 97
	INPUT  reduce 97
	OUTPUT  reduce 97
	IF  reduce 97
	WHILE  reduce 97
	FOR  reduce 97
	BREAK  reduce 97
	CONTINUE  reduce 97
	INT_NUM  reduce 97
	FLOAT_NUM  reduce 97
	ID  reduce 97
	ADD  reduce 97
	SUB  reduce 97
	LP  reduce 97
	RF  reduce 97
	CHARACTER  reduce 97
	NEG  reduce 97

	ELIF_STMT  goto 199


state 196
	FOR_STMT : FOR LP ASSIGNMENT SCOL $$18 EXPR SCOL $$19 ASSIGNMENT RP $$20 . LF $$21 STMTLIST RF  (109)

	LF  shift 200
	.  error


state 197
	ARR_VALUES : CONST $$5 COMMA . ARR_VALUES  (52)

	INT_NUM  shift 32
	FLOAT_NUM  shift 33
	CHARACTER  shift 38
	.  error

	CONST  goto 188
	ARR_VALUES  goto 201


state 198
	ELIF_STMT : ELSE . IF $$10 LP EXPR RP $$11 LF $$12 STMTLIST RF $$13 ELIF_STMT  (96)

	IF  shift 202
	.  error


state 199
	IF_STMT : IF $$6 LP EXPR RP $$7 LF $$8 STMTLIST RF $$9 ELIF_STMT . ELSE_STMT  (91)
	ELSE_STMT : .  (100)

	ELSE  shift 203
	INT  reduce 100
	CHAR  reduce 100
	FLOAT  reduce 100
	STRING  reduce 100
	RETURN  reduce 100
	INPUT  reduce 100
	OUTPUT  reduce 100
	IF  reduce 100
	WHILE  reduce 100
	FOR  reduce 100
	BREAK  reduce 100
	CONTINUE  reduce 100
	INT_NUM  reduce 100
	FLOAT_NUM  reduce 100
	ID  reduce 100
	ADD  reduce 100
	SUB  reduce 100
	LP  reduce 100
	RF  reduce 100
	CHARACTER  reduce 100
	NEG  reduce 100

	ELSE_STMT  goto 204


state 200
	FOR_STMT : FOR LP ASSIGNMENT SCOL $$18 EXPR SCOL $$19 ASSIGNMENT RP $$20 LF . $$21 STMTLIST RF  (109)
	$$21 : .  (108)

	.  reduce 108

	$$21  goto 205


state 201
	ARR_VALUES : CONST $$5 COMMA ARR_VALUES .  (52)

	.  reduce 52


state 202
	ELIF_STMT : ELSE IF . $$10 LP EXPR RP $$11 LF $$12 STMTLIST RF $$13 ELIF_STMT  (96)
	$$10 : .  (92)

	.  reduce 92

	$$10  goto 206


state 203
	ELSE_STMT : ELSE . LF $$14 STMTLIST RF  (99)

	LF  shift 207
	.  error


state 204
	IF_STMT : IF $$6 LP EXPR RP $$7 LF $$8 STMTLIST RF $$9 ELIF_STMT ELSE_STMT .  (91)

	.  reduce 91


state 205
	FOR_STMT : FOR LP ASSIGNMENT SCOL $$18 EXPR SCOL $$19 ASSIGNMENT RP $$20 LF $$21 . STMTLIST RF  (109)
	STMTLIST : .  (23)

	INT  shift 3
	CHAR  shift 4
	FLOAT  shift 5
	STRING  shift 23
	RETURN  shift 24
	INPUT  shift 25
	OUTPUT  shift 26
	IF  shift 27
	WHILE  shift 28
	FOR  shift 29
	BREAK  shift 30
	CONTINUE  shift 31
	INT_NUM  shift 32
	FLOAT_NUM  shift 33
	ID  shift 34
	ADD  shift 35
	SUB  shift 36
	LP  shift 37
	CHARACTER  shift 38
	NEG  shift 39
	RF  reduce 23

	DATA_TYPE  goto 40
	STMTLIST  goto 208
	STMT  goto 42
	DECLARATION  goto 43
	ASSIGNMENT  goto 44
	EXPR  goto 45
	RETURN_STMT  goto 46
	UNARY_EXPR  goto 47
	PRIMARY_EXPR  goto 48
	UNARY_OP  goto 49
	CONST  goto 50
	IF_STMT  goto 51
	WHILE_STMT  goto 52
	FOR_STMT  goto 53
	FUNCTION_CALL  goto 54
	POSTFIX_EXPR  goto 55


state 206
	ELIF_STMT : ELSE IF $$10 . LP EXPR RP $$11 LF $$12 STMTLIST RF $$13 ELIF_STMT  (96)

	LP  shift 209
	.  error


state 207
	ELSE_STMT : ELSE LF . $$14 STMTLIST RF  (99)
	$$14 : .  (98)

	.  reduce 98

	$$14  goto 210


state 208
	FOR_STMT : FOR LP ASSIGNMENT SCOL $$18 EXPR SCOL $$19 ASSIGNMENT RP $$20 LF $$21 STMTLIST . RF  (109)

	RF  shift 211
	.  error


state 209
	ELIF_STMT : ELSE IF $$10 LP . EXPR RP $$11 LF $$12 STMTLIST RF $$13 ELIF_STMT  (96)

	INT_NUM  shift 32
	FLOAT_NUM  shift 33
	ID  shift 64
	ADD  shift 35
	SUB  shift 36
	LP  shift 37
	CHARACTER  shift 38
	NEG  shift 39
	.  error

	EXPR  goto 212
	UNARY_EXPR  goto 47
	PRIMARY_EXPR  goto 48
	UNARY_OP  goto 49
	CONST  goto 50
	FUNCTION_CALL  goto 54
	POSTFIX_EXPR  goto 55


state 210
	ELSE_STMT : ELSE LF $$14 . STMTLIST RF  (99)
	STMTLIST : .  (23)

	INT  shift 3
	CHAR  shift 4
	FLOAT  shift 5
	STRING  shift 23
	RETURN  shift 24
	INPUT  shift 25
	OUTPUT  shift 26
	IF  shift 27
	WHILE  shift 28
	FOR  shift 29
	BREAK  shift 30
	CONTINUE  shift 31
	INT_NUM  shift 32
	FLOAT_NUM  shift 33
	ID  shift 34
	ADD  shift 35
	SUB  shift 36
	LP  shift 37
	CHARACTER  shift 38
	NEG  shift 39
	RF  reduce 23

	DATA_TYPE  goto 40
	STMTLIST  goto 213
	STMT  goto 42
	DECLARATION  goto 43
	ASSIGNMENT  goto 44
	EXPR  goto 45
	RETURN_STMT  goto 46
	UNARY_EXPR  goto 47
	PRIMARY_EXPR  goto 48
	UNARY_OP  goto 49
	CONST  goto 50
	IF_STMT  goto 51
	WHILE_STMT  goto 52
	FOR_STMT  goto 53
	FUNCTION_CALL  goto 54
	POSTFIX_EXPR  goto 55


state 211
	FOR_STMT : FOR LP ASSIGNMENT SCOL $$18 EXPR SCOL $$19 ASSIGNMENT RP $$20 LF $$21 STMTLIST RF .  (109)

	.  reduce 109


state 212
	EXPR : EXPR . ADD EXPR  (56)
	EXPR : EXPR . SUB EXPR  (57)
	EXPR : EXPR . MUL EXPR  (58)
	EXPR : EXPR . DIV EXPR  (59)
	EXPR : EXPR . EQ EXPR  (60)
	EXPR : EXPR . NE EXPR  (61)
	EXPR : EXPR . LT EXPR  (62)
	EXPR : EXPR . GT EXPR  (63)
	EXPR : EXPR . LE EXPR  (64)
	EXPR : EXPR . GE EXPR  (65)
	EXPR : EXPR . AND EXPR  (66)
	EXPR : EXPR . OR EXPR  (67)
	EXPR : EXPR . BITAND EXPR  (68)
	EXPR : EXPR . BITOR EXPR  (69)
	ELIF_STMT : ELSE IF $$10 LP EXPR . RP $$11 LF $$12 STMTLIST RF $$13 ELIF_STMT  (96)

	ADD  shift 82
	SUB  shift 83
	MUL  shift 84
	DIV  shift 85
	EQ  shift 86
	NE  shift 87
	LT  shift 88
	GT  shift 89
	LE  shift 90
	GE  shift 91
	AND  shift 92
	OR  shift 93
	RP  shift 214
	BITAND  shift 95
	BITOR  shift 96
	.  error


state 213
	ELSE_STMT : ELSE LF $$14 STMTLIST . RF  (99)

	RF  shift 215
	.  error


state 214
	ELIF_STMT : ELSE IF $$10 LP EXPR RP . $$11 LF $$12 STMTLIST RF $$13 ELIF_STMT  (96)
	$$11 : .  (93)

	.  reduce 93

	$$11  goto 216


state 215
	ELSE_STMT : ELSE LF $$14 STMTLIST RF .  (99)

	.  reduce 99


state 216
	ELIF_STMT : ELSE IF $$10 LP EXPR RP $$11 . LF $$12 STMTLIST RF $$13 ELIF_STMT  (96)

	LF  shift 217
	.  error


state 217
	ELIF_STMT : ELSE IF $$10 LP EXPR RP $$11 LF . $$12 STMTLIST RF $$13 ELIF_STMT  (96)
	$$12 : .  (94)

	.  reduce 94

	$$12  goto 218


state 218
	ELIF_STMT : ELSE IF $$10 LP EXPR RP $$11 LF $$12 . STMTLIST RF $$13 ELIF_STMT  (96)
	STMTLIST : .  (23)

	INT  shift 3
	CHAR  shift 4
	FLOAT  shift 5
	STRING  shift 23
	RETURN  shift 24
	INPUT  shift 25
	OUTPUT  shift 26
	IF  shift 27
	WHILE  shift 28
	FOR  shift 29
	BREAK  shift 30
	CONTINUE  shift 31
	INT_NUM  shift 32
	FLOAT_NUM  shift 33
	ID  shift 34
	ADD  shift 35
	SUB  shift 36
	LP  shift 37
	CHARACTER  shift 38
	NEG  shift 39
	RF  reduce 23

	DATA_TYPE  goto 40
	STMTLIST  goto 219
	STMT  goto 42
	DECLARATION  goto 43
	ASSIGNMENT  goto 44
	EXPR  goto 45
	RETURN_STMT  goto 46
	UNARY_EXPR  goto 47
	PRIMARY_EXPR  goto 48
	UNARY_OP  goto 49
	CONST  goto 50
	IF_STMT  goto 51
	WHILE_STMT  goto 52
	FOR_STMT  goto 53
	FUNCTION_CALL  goto 54
	POSTFIX_EXPR  goto 55


state 219
	ELIF_STMT : ELSE IF $$10 LP EXPR RP $$11 LF $$12 STMTLIST . RF $$13 ELIF_STMT  (96)

	RF  shift 220
	.  error


state 220
	ELIF_STMT : ELSE IF $$10 LP EXPR RP $$11 LF $$12 STMTLIST RF . $$13 ELIF_STMT  (96)
	$$13 : .  (95)

	.  reduce 95

	$$13  goto 221


221: shift/reduce conflict (shift 198, reduce 97) on ELSE
state 221
	ELIF_STMT : ELSE IF $$10 LP EXPR RP $$11 LF $$12 STMTLIST RF $$13 . ELIF_STMT  (96)
	ELIF_STMT : .  (97)

	ELSE  shift 198
	INT  reduce 97
	CHAR  reduce 97
	FLOAT  reduce 97
	STRING  reduce 97
	RETURN  reduce 97
	INPUT  reduce 97
	OUTPUT  reduce 97
	IF  reduce 97
	WHILE  reduce 97
	FOR  reduce 97
	BREAK  reduce 97
	CONTINUE  reduce 97
	INT_NUM  reduce 97
	FLOAT_NUM  reduce 97
	ID  reduce 97
	ADD  reduce 97
	SUB  reduce 97
	LP  reduce 97
	RF  reduce 97
	CHARACTER  reduce 97
	NEG  reduce 97

	ELIF_STMT  goto 222


state 222
	ELIF_STMT : ELSE IF $$10 LP EXPR RP $$11 LF $$12 STMTLIST RF $$13 ELIF_STMT .  (96)

	.  reduce 96


Rules never reduced:
	CLASSMEMBER :  (29)


State 22 contains 4 shift/reduce conflicts.
State 23 contains 1 shift/reduce conflict.
State 104 contains 1 shift/reduce conflict.
State 119 contains 2 shift/reduce conflicts.
State 120 contains 2 shift/reduce conflicts.
State 121 contains 2 shift/reduce conflicts.
State 122 contains 2 shift/reduce conflicts.
State 123 contains 2 shift/reduce conflicts.
State 124 contains 2 shift/reduce conflicts.
State 125 contains 2 shift/reduce conflicts.
State 126 contains 2 shift/reduce conflicts.
State 127 contains 2 shift/reduce conflicts.
State 128 contains 2 shift/reduce conflicts.
State 129 contains 2 shift/reduce conflicts.
State 130 contains 2 shift/reduce conflicts.
State 131 contains 14 shift/reduce conflicts.
State 132 contains 14 shift/reduce conflicts.
State 195 contains 1 shift/reduce conflict.
State 221 contains 1 shift/reduce conflict.


49 terminals, 55 nonterminals
116 grammar rules, 223 states

grammar parser grammar
symbol# value# symbol
     0      0  $end
     1    256  error
     2    257  INT
     3    258  CHAR
     4    259  FLOAT
     5    260  STRING
     6    261  VOID
     7    262  RETURN
     8    263  CLASS
     9    264  PUBLIC
    10    265  PRIVATE
    11    266  PROTECTED
    12    267  INPUT
    13    268  OUTPUT
    14    269  IF
    15    270  ELSE
    16    271  WHILE
    17    272  FOR
    18    273  BREAK
    19    274  CONTINUE
    20    275  INT_NUM
    21    276  FLOAT_NUM
    22    277  ID
    23    278  ADD
    24    279  SUB
    25    280  MUL
    26    281  DIV
    27    282  ASSIGN
    28    283  EQ
    29    284  NE
    30    285  LT
    31    286  GT
    32    287  LE
    33    288  GE
    34    289  AND
    35    290  OR
    36    291  SCOL
    37    292  COMMA
    38    293  LP
    39    294  RP
    40    295  LF
    41    296  RF
    42    297  LB
    43    298  RB
    44    299  STR
    45    300  CHARACTER
    46    301  BITAND
    47    302  BITOR
    48    303  NEG
    49    304  $accept
    50    305  PROGRAM
    51    306  LIST
    52    307  FUNCTION
    53    308  FUNCTION_PREFIX
    54    309  DATA_TYPE
    55    310  PARAMLIST
    56    311  PARAM
    57    312  STMTLIST
    58    313  CLASSDEF
    59    314  CLASSBODY
    60    315  CLASSMEMBER
    61    316  ACCESS_MODIFIER
    62    317  STMT
    63    318  DECLARATION
    64    319  ASSIGNMENT
    65    320  EXPR
    66    321  RETURN_STMT
    67    322  UNARY_EXPR
    68    323  PRIMARY_EXPR
    69    324  UNARY_OP
    70    325  CONST
    71    326  IF_STMT
    72    327  ELIF_STMT
    73    328  ELSE_STMT
    74    329  WHILE_STMT
    75    330  FOR_STMT
    76    331  FUNCTION_CALL
    77    332  ARGUMENTLIST
    78    333  ARG
    79    334  FUNCTION_TYPE
    80    335  POSTFIX_EXPR
    81    336  ARR_VALUES
    82    337  $$1
    83    338  $$2
    84    339  $$3
    85    340  $$4
    86    341  $$5
    87    342  $$6
    88    343  $$7
    89    344  $$8
    90    345  $$9
    91    346  $$10
    92    347  $$11
    93    348  $$12
    94    349  $$13
    95    350  $$14
    96    351  $$15
    97    352  $$16
    98    353  $$17
    99    354  $$18
   100    355  $$19
   101    356  $$20
   102    357  $$21
   103    358  $$22
