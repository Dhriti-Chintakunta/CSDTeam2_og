   0  $accept : PROGRAM $end

   1  PROGRAM : LIST

   2  LIST : LIST FUNCTION
   3       | LIST CLASSDEF
   4       |

   5  $$1 :

   6  FUNCTION : FUNCTION_PREFIX LF $$1 STMTLIST RF

   7  $$2 :

   8  FUNCTION_PREFIX : FUNCTION_TYPE ID $$2 LP PARAMLIST RP

   9  FUNCTION_TYPE : VOID
  10                | DATA_TYPE

  11  DATA_TYPE : INT
  12            | CHAR
  13            | FLOAT
  14            | STRING

  15  $$3 :

  16  PARAMLIST : PARAM $$3 COMMA PARAMLIST
  17            | PARAM
  18            |

  19  PARAM : DATA_TYPE ID

  20  STMTLIST : STMT STMTLIST
  21           |

  22  CLASSDEF : CLASS ID LF CLASSBODY RF

  23  CLASSBODY : CLASSBODY CLASSMEMBER
  24            |

  25  CLASSMEMBER : ACCESS_MODIFIER DATA_TYPE ID SCOL
  26              | ACCESS_MODIFIER FUNCTION
  27              |

  28  ACCESS_MODIFIER : PUBLIC
  29                  | PRIVATE
  30                  | PROTECTED

  31  STMT : DECLARATION SCOL
  32       | ASSIGNMENT SCOL
  33       | EXPR SCOL
  34       | RETURN_STMT SCOL
  35       | IF_STMT
  36       | WHILE_STMT
  37       | FOR_STMT
  38       | BREAK SCOL
  39       | CONTINUE SCOL
  40       | INPUT LP ID RP SCOL
  41       | INPUT LP ID LB EXPR RB RP SCOL
  42       | OUTPUT LP EXPR RP SCOL

  43  DECLARATION : DATA_TYPE ID
  44              | DATA_TYPE ID ASSIGN EXPR
  45              | STRING ID ASSIGN STR
  46              | DATA_TYPE ID LB INT_NUM RB

  47  $$4 :

  48  DECLARATION : DATA_TYPE ID LB INT_NUM RB ASSIGN $$4 LF ARR_VALUES RF

  49  $$5 :

  50  ARR_VALUES : CONST $$5 COMMA ARR_VALUES
  51             | CONST

  52  RETURN_STMT : RETURN EXPR
  53              | RETURN

  54  EXPR : EXPR ADD EXPR
  55       | EXPR SUB EXPR
  56       | EXPR MUL EXPR
  57       | EXPR DIV EXPR
  58       | EXPR EQ EXPR
  59       | EXPR NE EXPR
  60       | EXPR LT EXPR
  61       | EXPR GT EXPR
  62       | EXPR LE EXPR
  63       | EXPR GE EXPR
  64       | EXPR AND EXPR
  65       | EXPR OR EXPR
  66       | EXPR BITAND EXPR
  67       | EXPR BITOR EXPR
  68       | UNARY_EXPR
  69       | PRIMARY_EXPR
  70       | POSTFIX_EXPR

  71  POSTFIX_EXPR : FUNCTION_CALL
  72               | ID LB EXPR RB

  73  UNARY_EXPR : UNARY_OP PRIMARY_EXPR

  74  PRIMARY_EXPR : ID
  75               | CONST
  76               | LP EXPR RP

  77  UNARY_OP : ADD
  78           | SUB
  79           | NEG

  80  CONST : INT_NUM
  81        | FLOAT_NUM
  82        | CHARACTER

  83  ASSIGNMENT : ID ASSIGN EXPR
  84             | ID LB EXPR RB ASSIGN EXPR

  85  $$6 :

  86  $$7 :

  87  $$8 :

  88  $$9 :

  89  IF_STMT : IF $$6 LP EXPR RP $$7 LF $$8 STMTLIST RF $$9 ELIF_STMT ELSE_STMT

  90  $$10 :

  91  $$11 :

  92  $$12 :

  93  $$13 :

  94  ELIF_STMT : ELSE IF $$10 LP EXPR RP $$11 LF $$12 STMTLIST RF $$13 ELIF_STMT
  95            |

  96  $$14 :

  97  ELSE_STMT : ELSE LF $$14 STMTLIST RF

  98  $$15 :

  99  $$16 :

 100  $$17 :

 101  WHILE_STMT : WHILE $$15 LP EXPR RP $$16 LF $$17 STMTLIST RF

 102  $$18 :

 103  $$19 :

 104  $$20 :

 105  $$21 :

 106  FOR_STMT : FOR LP ASSIGNMENT SCOL $$18 EXPR SCOL $$19 ASSIGNMENT RP $$20 LF $$21 STMTLIST RF

 107  $$22 :

 108  FUNCTION_CALL : ID $$22 LP ARGUMENTLIST RP

 109  ARGUMENTLIST : ARG COMMA ARGUMENTLIST
 110               | ARG
 111               |

 112  ARG : EXPR

state 0
	$accept : . PROGRAM $end  (0)
	LIST : .  (4)

	.  reduce 4

	PROGRAM  goto 1
	LIST  goto 2


state 1
	$accept : PROGRAM . $end  (0)

	$end  accept


state 2
	PROGRAM : LIST .  (1)
	LIST : LIST . FUNCTION  (2)
	LIST : LIST . CLASSDEF  (3)

	INT  shift 3
	CHAR  shift 4
	FLOAT  shift 5
	STRING  shift 6
	VOID  shift 7
	CLASS  shift 8
	$end  reduce 1

	FUNCTION  goto 9
	FUNCTION_PREFIX  goto 10
	DATA_TYPE  goto 11
	CLASSDEF  goto 12
	FUNCTION_TYPE  goto 13


state 3
	DATA_TYPE : INT .  (11)

	.  reduce 11


state 4
	DATA_TYPE : CHAR .  (12)

	.  reduce 12


state 5
	DATA_TYPE : FLOAT .  (13)

	.  reduce 13


state 6
	DATA_TYPE : STRING .  (14)

	.  reduce 14


state 7
	FUNCTION_TYPE : VOID .  (9)

	.  reduce 9


state 8
	CLASSDEF : CLASS . ID LF CLASSBODY RF  (22)

	ID  shift 14
	.  error


state 9
	LIST : LIST FUNCTION .  (2)

	.  reduce 2


state 10
	FUNCTION : FUNCTION_PREFIX . LF $$1 STMTLIST RF  (6)

	LF  shift 15
	.  error


state 11
	FUNCTION_TYPE : DATA_TYPE .  (10)

	.  reduce 10


state 12
	LIST : LIST CLASSDEF .  (3)

	.  reduce 3


state 13
	FUNCTION_PREFIX : FUNCTION_TYPE . ID $$2 LP PARAMLIST RP  (8)

	ID  shift 16
	.  error


state 14
	CLASSDEF : CLASS ID . LF CLASSBODY RF  (22)

	LF  shift 17
	.  error


state 15
	FUNCTION : FUNCTION_PREFIX LF . $$1 STMTLIST RF  (6)
	$$1 : .  (5)

	.  reduce 5

	$$1  goto 18


state 16
	FUNCTION_PREFIX : FUNCTION_TYPE ID . $$2 LP PARAMLIST RP  (8)
	$$2 : .  (7)

	.  reduce 7

	$$2  goto 19


state 17
	CLASSDEF : CLASS ID LF . CLASSBODY RF  (22)
	CLASSBODY : .  (24)

	.  reduce 24

	CLASSBODY  goto 20


state 18
	FUNCTION : FUNCTION_PREFIX LF $$1 . STMTLIST RF  (6)
	STMTLIST : .  (21)

	INT  shift 3
	CHAR  shift 4
	FLOAT  shift 5
	STRING  shift 21
	RETURN  shift 22
	INPUT  shift 23
	OUTPUT  shift 24
	IF  shift 25
	WHILE  shift 26
	FOR  shift 27
	BREAK  shift 28
	CONTINUE  shift 29
	INT_NUM  shift 30
	FLOAT_NUM  shift 31
	ID  shift 32
	ADD  shift 33
	SUB  shift 34
	LP  shift 35
	CHARACTER  shift 36
	NEG  shift 37
	RF  reduce 21

	DATA_TYPE  goto 38
	STMTLIST  goto 39
	STMT  goto 40
	DECLARATION  goto 41
	ASSIGNMENT  goto 42
	EXPR  goto 43
	RETURN_STMT  goto 44
	UNARY_EXPR  goto 45
	PRIMARY_EXPR  goto 46
	UNARY_OP  goto 47
	CONST  goto 48
	IF_STMT  goto 49
	WHILE_STMT  goto 50
	FOR_STMT  goto 51
	FUNCTION_CALL  goto 52
	POSTFIX_EXPR  goto 53


state 19
	FUNCTION_PREFIX : FUNCTION_TYPE ID $$2 . LP PARAMLIST RP  (8)

	LP  shift 54
	.  error


20: shift/reduce conflict (shift 55, reduce 27) on PUBLIC
20: shift/reduce conflict (shift 56, reduce 27) on PRIVATE
20: shift/reduce conflict (shift 57, reduce 27) on PROTECTED
20: shift/reduce conflict (shift 58, reduce 27) on RF
state 20
	CLASSDEF : CLASS ID LF CLASSBODY . RF  (22)
	CLASSBODY : CLASSBODY . CLASSMEMBER  (23)
	CLASSMEMBER : .  (27)

	PUBLIC  shift 55
	PRIVATE  shift 56
	PROTECTED  shift 57
	RF  shift 58

	CLASSMEMBER  goto 59
	ACCESS_MODIFIER  goto 60


21: shift/reduce conflict (shift 61, reduce 14) on ID
state 21
	DATA_TYPE : STRING .  (14)
	DECLARATION : STRING . ID ASSIGN STR  (45)

	ID  shift 61


state 22
	RETURN_STMT : RETURN . EXPR  (52)
	RETURN_STMT : RETURN .  (53)

	INT_NUM  shift 30
	FLOAT_NUM  shift 31
	ID  shift 62
	ADD  shift 33
	SUB  shift 34
	LP  shift 35
	CHARACTER  shift 36
	NEG  shift 37
	SCOL  reduce 53

	EXPR  goto 63
	UNARY_EXPR  goto 45
	PRIMARY_EXPR  goto 46
	UNARY_OP  goto 47
	CONST  goto 48
	FUNCTION_CALL  goto 52
	POSTFIX_EXPR  goto 53


state 23
	STMT : INPUT . LP ID RP SCOL  (40)
	STMT : INPUT . LP ID LB EXPR RB RP SCOL  (41)

	LP  shift 64
	.  error


state 24
	STMT : OUTPUT . LP EXPR RP SCOL  (42)

	LP  shift 65
	.  error


state 25
	IF_STMT : IF . $$6 LP EXPR RP $$7 LF $$8 STMTLIST RF $$9 ELIF_STMT ELSE_STMT  (89)
	$$6 : .  (85)

	.  reduce 85

	$$6  goto 66


state 26
	WHILE_STMT : WHILE . $$15 LP EXPR RP $$16 LF $$17 STMTLIST RF  (101)
	$$15 : .  (98)

	.  reduce 98

	$$15  goto 67


state 27
	FOR_STMT : FOR . LP ASSIGNMENT SCOL $$18 EXPR SCOL $$19 ASSIGNMENT RP $$20 LF $$21 STMTLIST RF  (106)

	LP  shift 68
	.  error


state 28
	STMT : BREAK . SCOL  (38)

	SCOL  shift 69
	.  error


state 29
	STMT : CONTINUE . SCOL  (39)

	SCOL  shift 70
	.  error


state 30
	CONST : INT_NUM .  (80)

	.  reduce 80


state 31
	CONST : FLOAT_NUM .  (81)

	.  reduce 81


state 32
	POSTFIX_EXPR : ID . LB EXPR RB  (72)
	PRIMARY_EXPR : ID .  (74)
	ASSIGNMENT : ID . ASSIGN EXPR  (83)
	ASSIGNMENT : ID . LB EXPR RB ASSIGN EXPR  (84)
	FUNCTION_CALL : ID . $$22 LP ARGUMENTLIST RP  (108)
	$$22 : .  (107)

	ASSIGN  shift 71
	LB  shift 72
	ADD  reduce 74
	SUB  reduce 74
	MUL  reduce 74
	DIV  reduce 74
	EQ  reduce 74
	NE  reduce 74
	LT  reduce 74
	GT  reduce 74
	LE  reduce 74
	GE  reduce 74
	AND  reduce 74
	OR  reduce 74
	SCOL  reduce 74
	LP  reduce 107
	BITAND  reduce 74
	BITOR  reduce 74

	$$22  goto 73


state 33
	UNARY_OP : ADD .  (77)

	.  reduce 77


state 34
	UNARY_OP : SUB .  (78)

	.  reduce 78


state 35
	PRIMARY_EXPR : LP . EXPR RP  (76)

	INT_NUM  shift 30
	FLOAT_NUM  shift 31
	ID  shift 62
	ADD  shift 33
	SUB  shift 34
	LP  shift 35
	CHARACTER  shift 36
	NEG  shift 37
	.  error

	EXPR  goto 74
	UNARY_EXPR  goto 45
	PRIMARY_EXPR  goto 46
	UNARY_OP  goto 47
	CONST  goto 48
	FUNCTION_CALL  goto 52
	POSTFIX_EXPR  goto 53


state 36
	CONST : CHARACTER .  (82)

	.  reduce 82


state 37
	UNARY_OP : NEG .  (79)

	.  reduce 79


state 38
	DECLARATION : DATA_TYPE . ID  (43)
	DECLARATION : DATA_TYPE . ID ASSIGN EXPR  (44)
	DECLARATION : DATA_TYPE . ID LB INT_NUM RB  (46)
	DECLARATION : DATA_TYPE . ID LB INT_NUM RB ASSIGN $$4 LF ARR_VALUES RF  (48)

	ID  shift 75
	.  error


state 39
	FUNCTION : FUNCTION_PREFIX LF $$1 STMTLIST . RF  (6)

	RF  shift 76
	.  error


state 40
	STMTLIST : STMT . STMTLIST  (20)
	STMTLIST : .  (21)

	INT  shift 3
	CHAR  shift 4
	FLOAT  shift 5
	STRING  shift 21
	RETURN  shift 22
	INPUT  shift 23
	OUTPUT  shift 24
	IF  shift 25
	WHILE  shift 26
	FOR  shift 27
	BREAK  shift 28
	CONTINUE  shift 29
	INT_NUM  shift 30
	FLOAT_NUM  shift 31
	ID  shift 32
	ADD  shift 33
	SUB  shift 34
	LP  shift 35
	CHARACTER  shift 36
	NEG  shift 37
	RF  reduce 21

	DATA_TYPE  goto 38
	STMTLIST  goto 77
	STMT  goto 40
	DECLARATION  goto 41
	ASSIGNMENT  goto 42
	EXPR  goto 43
	RETURN_STMT  goto 44
	UNARY_EXPR  goto 45
	PRIMARY_EXPR  goto 46
	UNARY_OP  goto 47
	CONST  goto 48
	IF_STMT  goto 49
	WHILE_STMT  goto 50
	FOR_STMT  goto 51
	FUNCTION_CALL  goto 52
	POSTFIX_EXPR  goto 53


state 41
	STMT : DECLARATION . SCOL  (31)

	SCOL  shift 78
	.  error


state 42
	STMT : ASSIGNMENT . SCOL  (32)

	SCOL  shift 79
	.  error


state 43
	STMT : EXPR . SCOL  (33)
	EXPR : EXPR . ADD EXPR  (54)
	EXPR : EXPR . SUB EXPR  (55)
	EXPR : EXPR . MUL EXPR  (56)
	EXPR : EXPR . DIV EXPR  (57)
	EXPR : EXPR . EQ EXPR  (58)
	EXPR : EXPR . NE EXPR  (59)
	EXPR : EXPR . LT EXPR  (60)
	EXPR : EXPR . GT EXPR  (61)
	EXPR : EXPR . LE EXPR  (62)
	EXPR : EXPR . GE EXPR  (63)
	EXPR : EXPR . AND EXPR  (64)
	EXPR : EXPR . OR EXPR  (65)
	EXPR : EXPR . BITAND EXPR  (66)
	EXPR : EXPR . BITOR EXPR  (67)

	ADD  shift 80
	SUB  shift 81
	MUL  shift 82
	DIV  shift 83
	EQ  shift 84
	NE  shift 85
	LT  shift 86
	GT  shift 87
	LE  shift 88
	GE  shift 89
	AND  shift 90
	OR  shift 91
	SCOL  shift 92
	BITAND  shift 93
	BITOR  shift 94
	.  error


state 44
	STMT : RETURN_STMT . SCOL  (34)

	SCOL  shift 95
	.  error


state 45
	EXPR : UNARY_EXPR .  (68)

	.  reduce 68


state 46
	EXPR : PRIMARY_EXPR .  (69)

	.  reduce 69


state 47
	UNARY_EXPR : UNARY_OP . PRIMARY_EXPR  (73)

	INT_NUM  shift 30
	FLOAT_NUM  shift 31
	ID  shift 96
	LP  shift 35
	CHARACTER  shift 36
	.  error

	PRIMARY_EXPR  goto 97
	CONST  goto 48


state 48
	PRIMARY_EXPR : CONST .  (75)

	.  reduce 75


state 49
	STMT : IF_STMT .  (35)

	.  reduce 35


state 50
	STMT : WHILE_STMT .  (36)

	.  reduce 36


state 51
	STMT : FOR_STMT .  (37)

	.  reduce 37


state 52
	POSTFIX_EXPR : FUNCTION_CALL .  (71)

	.  reduce 71


state 53
	EXPR : POSTFIX_EXPR .  (70)

	.  reduce 70


state 54
	FUNCTION_PREFIX : FUNCTION_TYPE ID $$2 LP . PARAMLIST RP  (8)
	PARAMLIST : .  (18)

	INT  shift 3
	CHAR  shift 4
	FLOAT  shift 5
	STRING  shift 6
	RP  reduce 18

	DATA_TYPE  goto 98
	PARAMLIST  goto 99
	PARAM  goto 100


state 55
	ACCESS_MODIFIER : PUBLIC .  (28)

	.  reduce 28


state 56
	ACCESS_MODIFIER : PRIVATE .  (29)

	.  reduce 29


state 57
	ACCESS_MODIFIER : PROTECTED .  (30)

	.  reduce 30


state 58
	CLASSDEF : CLASS ID LF CLASSBODY RF .  (22)

	.  reduce 22


state 59
	CLASSBODY : CLASSBODY CLASSMEMBER .  (23)

	.  reduce 23


state 60
	CLASSMEMBER : ACCESS_MODIFIER . DATA_TYPE ID SCOL  (25)
	CLASSMEMBER : ACCESS_MODIFIER . FUNCTION  (26)

	INT  shift 3
	CHAR  shift 4
	FLOAT  shift 5
	STRING  shift 6
	VOID  shift 7
	.  error

	FUNCTION  goto 101
	FUNCTION_PREFIX  goto 10
	DATA_TYPE  goto 102
	FUNCTION_TYPE  goto 13


state 61
	DECLARATION : STRING ID . ASSIGN STR  (45)

	ASSIGN  shift 103
	.  error


state 62
	POSTFIX_EXPR : ID . LB EXPR RB  (72)
	PRIMARY_EXPR : ID .  (74)
	FUNCTION_CALL : ID . $$22 LP ARGUMENTLIST RP  (108)
	$$22 : .  (107)

	LB  shift 104
	ADD  reduce 74
	SUB  reduce 74
	MUL  reduce 74
	DIV  reduce 74
	EQ  reduce 74
	NE  reduce 74
	LT  reduce 74
	GT  reduce 74
	LE  reduce 74
	GE  reduce 74
	AND  reduce 74
	OR  reduce 74
	SCOL  reduce 74
	COMMA  reduce 74
	LP  reduce 107
	RP  reduce 74
	RB  reduce 74
	BITAND  reduce 74
	BITOR  reduce 74

	$$22  goto 73


state 63
	RETURN_STMT : RETURN EXPR .  (52)
	EXPR : EXPR . ADD EXPR  (54)
	EXPR : EXPR . SUB EXPR  (55)
	EXPR : EXPR . MUL EXPR  (56)
	EXPR : EXPR . DIV EXPR  (57)
	EXPR : EXPR . EQ EXPR  (58)
	EXPR : EXPR . NE EXPR  (59)
	EXPR : EXPR . LT EXPR  (60)
	EXPR : EXPR . GT EXPR  (61)
	EXPR : EXPR . LE EXPR  (62)
	EXPR : EXPR . GE EXPR  (63)
	EXPR : EXPR . AND EXPR  (64)
	EXPR : EXPR . OR EXPR  (65)
	EXPR : EXPR . BITAND EXPR  (66)
	EXPR : EXPR . BITOR EXPR  (67)

	ADD  shift 80
	SUB  shift 81
	MUL  shift 82
	DIV  shift 83
	EQ  shift 84
	NE  shift 85
	LT  shift 86
	GT  shift 87
	LE  shift 88
	GE  shift 89
	AND  shift 90
	OR  shift 91
	BITAND  shift 93
	BITOR  shift 94
	SCOL  reduce 52


state 64
	STMT : INPUT LP . ID RP SCOL  (40)
	STMT : INPUT LP . ID LB EXPR RB RP SCOL  (41)

	ID  shift 105
	.  error


state 65
	STMT : OUTPUT LP . EXPR RP SCOL  (42)

	INT_NUM  shift 30
	FLOAT_NUM  shift 31
	ID  shift 62
	ADD  shift 33
	SUB  shift 34
	LP  shift 35
	CHARACTER  shift 36
	NEG  shift 37
	.  error

	EXPR  goto 106
	UNARY_EXPR  goto 45
	PRIMARY_EXPR  goto 46
	UNARY_OP  goto 47
	CONST  goto 48
	FUNCTION_CALL  goto 52
	POSTFIX_EXPR  goto 53


state 66
	IF_STMT : IF $$6 . LP EXPR RP $$7 LF $$8 STMTLIST RF $$9 ELIF_STMT ELSE_STMT  (89)

	LP  shift 107
	.  error


state 67
	WHILE_STMT : WHILE $$15 . LP EXPR RP $$16 LF $$17 STMTLIST RF  (101)

	LP  shift 108
	.  error


state 68
	FOR_STMT : FOR LP . ASSIGNMENT SCOL $$18 EXPR SCOL $$19 ASSIGNMENT RP $$20 LF $$21 STMTLIST RF  (106)

	ID  shift 109
	.  error

	ASSIGNMENT  goto 110


state 69
	STMT : BREAK SCOL .  (38)

	.  reduce 38


state 70
	STMT : CONTINUE SCOL .  (39)

	.  reduce 39


state 71
	ASSIGNMENT : ID ASSIGN . EXPR  (83)

	INT_NUM  shift 30
	FLOAT_NUM  shift 31
	ID  shift 62
	ADD  shift 33
	SUB  shift 34
	LP  shift 35
	CHARACTER  shift 36
	NEG  shift 37
	.  error

	EXPR  goto 111
	UNARY_EXPR  goto 45
	PRIMARY_EXPR  goto 46
	UNARY_OP  goto 47
	CONST  goto 48
	FUNCTION_CALL  goto 52
	POSTFIX_EXPR  goto 53


state 72
	POSTFIX_EXPR : ID LB . EXPR RB  (72)
	ASSIGNMENT : ID LB . EXPR RB ASSIGN EXPR  (84)

	INT_NUM  shift 30
	FLOAT_NUM  shift 31
	ID  shift 62
	ADD  shift 33
	SUB  shift 34
	LP  shift 35
	CHARACTER  shift 36
	NEG  shift 37
	.  error

	EXPR  goto 112
	UNARY_EXPR  goto 45
	PRIMARY_EXPR  goto 46
	UNARY_OP  goto 47
	CONST  goto 48
	FUNCTION_CALL  goto 52
	POSTFIX_EXPR  goto 53


state 73
	FUNCTION_CALL : ID $$22 . LP ARGUMENTLIST RP  (108)

	LP  shift 113
	.  error


state 74
	EXPR : EXPR . ADD EXPR  (54)
	EXPR : EXPR . SUB EXPR  (55)
	EXPR : EXPR . MUL EXPR  (56)
	EXPR : EXPR . DIV EXPR  (57)
	EXPR : EXPR . EQ EXPR  (58)
	EXPR : EXPR . NE EXPR  (59)
	EXPR : EXPR . LT EXPR  (60)
	EXPR : EXPR . GT EXPR  (61)
	EXPR : EXPR . LE EXPR  (62)
	EXPR : EXPR . GE EXPR  (63)
	EXPR : EXPR . AND EXPR  (64)
	EXPR : EXPR . OR EXPR  (65)
	EXPR : EXPR . BITAND EXPR  (66)
	EXPR : EXPR . BITOR EXPR  (67)
	PRIMARY_EXPR : LP EXPR . RP  (76)

	ADD  shift 80
	SUB  shift 81
	MUL  shift 82
	DIV  shift 83
	EQ  shift 84
	NE  shift 85
	LT  shift 86
	GT  shift 87
	LE  shift 88
	GE  shift 89
	AND  shift 90
	OR  shift 91
	RP  shift 114
	BITAND  shift 93
	BITOR  shift 94
	.  error


state 75
	DECLARATION : DATA_TYPE ID .  (43)
	DECLARATION : DATA_TYPE ID . ASSIGN EXPR  (44)
	DECLARATION : DATA_TYPE ID . LB INT_NUM RB  (46)
	DECLARATION : DATA_TYPE ID . LB INT_NUM RB ASSIGN $$4 LF ARR_VALUES RF  (48)

	ASSIGN  shift 115
	LB  shift 116
	SCOL  reduce 43


state 76
	FUNCTION : FUNCTION_PREFIX LF $$1 STMTLIST RF .  (6)

	.  reduce 6


state 77
	STMTLIST : STMT STMTLIST .  (20)

	.  reduce 20


state 78
	STMT : DECLARATION SCOL .  (31)

	.  reduce 31


state 79
	STMT : ASSIGNMENT SCOL .  (32)

	.  reduce 32


state 80
	EXPR : EXPR ADD . EXPR  (54)

	INT_NUM  shift 30
	FLOAT_NUM  shift 31
	ID  shift 62
	ADD  shift 33
	SUB  shift 34
	LP  shift 35
	CHARACTER  shift 36
	NEG  shift 37
	.  error

	EXPR  goto 117
	UNARY_EXPR  goto 45
	PRIMARY_EXPR  goto 46
	UNARY_OP  goto 47
	CONST  goto 48
	FUNCTION_CALL  goto 52
	POSTFIX_EXPR  goto 53


state 81
	EXPR : EXPR SUB . EXPR  (55)

	INT_NUM  shift 30
	FLOAT_NUM  shift 31
	ID  shift 62
	ADD  shift 33
	SUB  shift 34
	LP  shift 35
	CHARACTER  shift 36
	NEG  shift 37
	.  error

	EXPR  goto 118
	UNARY_EXPR  goto 45
	PRIMARY_EXPR  goto 46
	UNARY_OP  goto 47
	CONST  goto 48
	FUNCTION_CALL  goto 52
	POSTFIX_EXPR  goto 53


state 82
	EXPR : EXPR MUL . EXPR  (56)

	INT_NUM  shift 30
	FLOAT_NUM  shift 31
	ID  shift 62
	ADD  shift 33
	SUB  shift 34
	LP  shift 35
	CHARACTER  shift 36
	NEG  shift 37
	.  error

	EXPR  goto 119
	UNARY_EXPR  goto 45
	PRIMARY_EXPR  goto 46
	UNARY_OP  goto 47
	CONST  goto 48
	FUNCTION_CALL  goto 52
	POSTFIX_EXPR  goto 53


state 83
	EXPR : EXPR DIV . EXPR  (57)

	INT_NUM  shift 30
	FLOAT_NUM  shift 31
	ID  shift 62
	ADD  shift 33
	SUB  shift 34
	LP  shift 35
	CHARACTER  shift 36
	NEG  shift 37
	.  error

	EXPR  goto 120
	UNARY_EXPR  goto 45
	PRIMARY_EXPR  goto 46
	UNARY_OP  goto 47
	CONST  goto 48
	FUNCTION_CALL  goto 52
	POSTFIX_EXPR  goto 53


state 84
	EXPR : EXPR EQ . EXPR  (58)

	INT_NUM  shift 30
	FLOAT_NUM  shift 31
	ID  shift 62
	ADD  shift 33
	SUB  shift 34
	LP  shift 35
	CHARACTER  shift 36
	NEG  shift 37
	.  error

	EXPR  goto 121
	UNARY_EXPR  goto 45
	PRIMARY_EXPR  goto 46
	UNARY_OP  goto 47
	CONST  goto 48
	FUNCTION_CALL  goto 52
	POSTFIX_EXPR  goto 53


state 85
	EXPR : EXPR NE . EXPR  (59)

	INT_NUM  shift 30
	FLOAT_NUM  shift 31
	ID  shift 62
	ADD  shift 33
	SUB  shift 34
	LP  shift 35
	CHARACTER  shift 36
	NEG  shift 37
	.  error

	EXPR  goto 122
	UNARY_EXPR  goto 45
	PRIMARY_EXPR  goto 46
	UNARY_OP  goto 47
	CONST  goto 48
	FUNCTION_CALL  goto 52
	POSTFIX_EXPR  goto 53


state 86
	EXPR : EXPR LT . EXPR  (60)

	INT_NUM  shift 30
	FLOAT_NUM  shift 31
	ID  shift 62
	ADD  shift 33
	SUB  shift 34
	LP  shift 35
	CHARACTER  shift 36
	NEG  shift 37
	.  error

	EXPR  goto 123
	UNARY_EXPR  goto 45
	PRIMARY_EXPR  goto 46
	UNARY_OP  goto 47
	CONST  goto 48
	FUNCTION_CALL  goto 52
	POSTFIX_EXPR  goto 53


state 87
	EXPR : EXPR GT . EXPR  (61)

	INT_NUM  shift 30
	FLOAT_NUM  shift 31
	ID  shift 62
	ADD  shift 33
	SUB  shift 34
	LP  shift 35
	CHARACTER  shift 36
	NEG  shift 37
	.  error

	EXPR  goto 124
	UNARY_EXPR  goto 45
	PRIMARY_EXPR  goto 46
	UNARY_OP  goto 47
	CONST  goto 48
	FUNCTION_CALL  goto 52
	POSTFIX_EXPR  goto 53


state 88
	EXPR : EXPR LE . EXPR  (62)

	INT_NUM  shift 30
	FLOAT_NUM  shift 31
	ID  shift 62
	ADD  shift 33
	SUB  shift 34
	LP  shift 35
	CHARACTER  shift 36
	NEG  shift 37
	.  error

	EXPR  goto 125
	UNARY_EXPR  goto 45
	PRIMARY_EXPR  goto 46
	UNARY_OP  goto 47
	CONST  goto 48
	FUNCTION_CALL  goto 52
	POSTFIX_EXPR  goto 53


state 89
	EXPR : EXPR GE . EXPR  (63)

	INT_NUM  shift 30
	FLOAT_NUM  shift 31
	ID  shift 62
	ADD  shift 33
	SUB  shift 34
	LP  shift 35
	CHARACTER  shift 36
	NEG  shift 37
	.  error

	EXPR  goto 126
	UNARY_EXPR  goto 45
	PRIMARY_EXPR  goto 46
	UNARY_OP  goto 47
	CONST  goto 48
	FUNCTION_CALL  goto 52
	POSTFIX_EXPR  goto 53


state 90
	EXPR : EXPR AND . EXPR  (64)

	INT_NUM  shift 30
	FLOAT_NUM  shift 31
	ID  shift 62
	ADD  shift 33
	SUB  shift 34
	LP  shift 35
	CHARACTER  shift 36
	NEG  shift 37
	.  error

	EXPR  goto 127
	UNARY_EXPR  goto 45
	PRIMARY_EXPR  goto 46
	UNARY_OP  goto 47
	CONST  goto 48
	FUNCTION_CALL  goto 52
	POSTFIX_EXPR  goto 53


state 91
	EXPR : EXPR OR . EXPR  (65)

	INT_NUM  shift 30
	FLOAT_NUM  shift 31
	ID  shift 62
	ADD  shift 33
	SUB  shift 34
	LP  shift 35
	CHARACTER  shift 36
	NEG  shift 37
	.  error

	EXPR  goto 128
	UNARY_EXPR  goto 45
	PRIMARY_EXPR  goto 46
	UNARY_OP  goto 47
	CONST  goto 48
	FUNCTION_CALL  goto 52
	POSTFIX_EXPR  goto 53


state 92
	STMT : EXPR SCOL .  (33)

	.  reduce 33


state 93
	EXPR : EXPR BITAND . EXPR  (66)

	INT_NUM  shift 30
	FLOAT_NUM  shift 31
	ID  shift 62
	ADD  shift 33
	SUB  shift 34
	LP  shift 35
	CHARACTER  shift 36
	NEG  shift 37
	.  error

	EXPR  goto 129
	UNARY_EXPR  goto 45
	PRIMARY_EXPR  goto 46
	UNARY_OP  goto 47
	CONST  goto 48
	FUNCTION_CALL  goto 52
	POSTFIX_EXPR  goto 53


state 94
	EXPR : EXPR BITOR . EXPR  (67)

	INT_NUM  shift 30
	FLOAT_NUM  shift 31
	ID  shift 62
	ADD  shift 33
	SUB  shift 34
	LP  shift 35
	CHARACTER  shift 36
	NEG  shift 37
	.  error

	EXPR  goto 130
	UNARY_EXPR  goto 45
	PRIMARY_EXPR  goto 46
	UNARY_OP  goto 47
	CONST  goto 48
	FUNCTION_CALL  goto 52
	POSTFIX_EXPR  goto 53


state 95
	STMT : RETURN_STMT SCOL .  (34)

	.  reduce 34


state 96
	PRIMARY_EXPR : ID .  (74)

	.  reduce 74


state 97
	UNARY_EXPR : UNARY_OP PRIMARY_EXPR .  (73)

	.  reduce 73


state 98
	PARAM : DATA_TYPE . ID  (19)

	ID  shift 131
	.  error


state 99
	FUNCTION_PREFIX : FUNCTION_TYPE ID $$2 LP PARAMLIST . RP  (8)

	RP  shift 132
	.  error


state 100
	PARAMLIST : PARAM . $$3 COMMA PARAMLIST  (16)
	PARAMLIST : PARAM .  (17)
	$$3 : .  (15)

	COMMA  reduce 15
	RP  reduce 17

	$$3  goto 133


state 101
	CLASSMEMBER : ACCESS_MODIFIER FUNCTION .  (26)

	.  reduce 26


102: shift/reduce conflict (shift 134, reduce 10) on ID
state 102
	FUNCTION_TYPE : DATA_TYPE .  (10)
	CLASSMEMBER : ACCESS_MODIFIER DATA_TYPE . ID SCOL  (25)

	ID  shift 134


state 103
	DECLARATION : STRING ID ASSIGN . STR  (45)

	STR  shift 135
	.  error


state 104
	POSTFIX_EXPR : ID LB . EXPR RB  (72)

	INT_NUM  shift 30
	FLOAT_NUM  shift 31
	ID  shift 62
	ADD  shift 33
	SUB  shift 34
	LP  shift 35
	CHARACTER  shift 36
	NEG  shift 37
	.  error

	EXPR  goto 136
	UNARY_EXPR  goto 45
	PRIMARY_EXPR  goto 46
	UNARY_OP  goto 47
	CONST  goto 48
	FUNCTION_CALL  goto 52
	POSTFIX_EXPR  goto 53


state 105
	STMT : INPUT LP ID . RP SCOL  (40)
	STMT : INPUT LP ID . LB EXPR RB RP SCOL  (41)

	RP  shift 137
	LB  shift 138
	.  error


state 106
	STMT : OUTPUT LP EXPR . RP SCOL  (42)
	EXPR : EXPR . ADD EXPR  (54)
	EXPR : EXPR . SUB EXPR  (55)
	EXPR : EXPR . MUL EXPR  (56)
	EXPR : EXPR . DIV EXPR  (57)
	EXPR : EXPR . EQ EXPR  (58)
	EXPR : EXPR . NE EXPR  (59)
	EXPR : EXPR . LT EXPR  (60)
	EXPR : EXPR . GT EXPR  (61)
	EXPR : EXPR . LE EXPR  (62)
	EXPR : EXPR . GE EXPR  (63)
	EXPR : EXPR . AND EXPR  (64)
	EXPR : EXPR . OR EXPR  (65)
	EXPR : EXPR . BITAND EXPR  (66)
	EXPR : EXPR . BITOR EXPR  (67)

	ADD  shift 80
	SUB  shift 81
	MUL  shift 82
	DIV  shift 83
	EQ  shift 84
	NE  shift 85
	LT  shift 86
	GT  shift 87
	LE  shift 88
	GE  shift 89
	AND  shift 90
	OR  shift 91
	RP  shift 139
	BITAND  shift 93
	BITOR  shift 94
	.  error


state 107
	IF_STMT : IF $$6 LP . EXPR RP $$7 LF $$8 STMTLIST RF $$9 ELIF_STMT ELSE_STMT  (89)

	INT_NUM  shift 30
	FLOAT_NUM  shift 31
	ID  shift 62
	ADD  shift 33
	SUB  shift 34
	LP  shift 35
	CHARACTER  shift 36
	NEG  shift 37
	.  error

	EXPR  goto 140
	UNARY_EXPR  goto 45
	PRIMARY_EXPR  goto 46
	UNARY_OP  goto 47
	CONST  goto 48
	FUNCTION_CALL  goto 52
	POSTFIX_EXPR  goto 53


state 108
	WHILE_STMT : WHILE $$15 LP . EXPR RP $$16 LF $$17 STMTLIST RF  (101)

	INT_NUM  shift 30
	FLOAT_NUM  shift 31
	ID  shift 62
	ADD  shift 33
	SUB  shift 34
	LP  shift 35
	CHARACTER  shift 36
	NEG  shift 37
	.  error

	EXPR  goto 141
	UNARY_EXPR  goto 45
	PRIMARY_EXPR  goto 46
	UNARY_OP  goto 47
	CONST  goto 48
	FUNCTION_CALL  goto 52
	POSTFIX_EXPR  goto 53


state 109
	ASSIGNMENT : ID . ASSIGN EXPR  (83)
	ASSIGNMENT : ID . LB EXPR RB ASSIGN EXPR  (84)

	ASSIGN  shift 71
	LB  shift 142
	.  error


state 110
	FOR_STMT : FOR LP ASSIGNMENT . SCOL $$18 EXPR SCOL $$19 ASSIGNMENT RP $$20 LF $$21 STMTLIST RF  (106)

	SCOL  shift 143
	.  error


state 111
	EXPR : EXPR . ADD EXPR  (54)
	EXPR : EXPR . SUB EXPR  (55)
	EXPR : EXPR . MUL EXPR  (56)
	EXPR : EXPR . DIV EXPR  (57)
	EXPR : EXPR . EQ EXPR  (58)
	EXPR : EXPR . NE EXPR  (59)
	EXPR : EXPR . LT EXPR  (60)
	EXPR : EXPR . GT EXPR  (61)
	EXPR : EXPR . LE EXPR  (62)
	EXPR : EXPR . GE EXPR  (63)
	EXPR : EXPR . AND EXPR  (64)
	EXPR : EXPR . OR EXPR  (65)
	EXPR : EXPR . BITAND EXPR  (66)
	EXPR : EXPR . BITOR EXPR  (67)
	ASSIGNMENT : ID ASSIGN EXPR .  (83)

	ADD  shift 80
	SUB  shift 81
	MUL  shift 82
	DIV  shift 83
	EQ  shift 84
	NE  shift 85
	LT  shift 86
	GT  shift 87
	LE  shift 88
	GE  shift 89
	AND  shift 90
	OR  shift 91
	BITAND  shift 93
	BITOR  shift 94
	SCOL  reduce 83
	RP  reduce 83


state 112
	EXPR : EXPR . ADD EXPR  (54)
	EXPR : EXPR . SUB EXPR  (55)
	EXPR : EXPR . MUL EXPR  (56)
	EXPR : EXPR . DIV EXPR  (57)
	EXPR : EXPR . EQ EXPR  (58)
	EXPR : EXPR . NE EXPR  (59)
	EXPR : EXPR . LT EXPR  (60)
	EXPR : EXPR . GT EXPR  (61)
	EXPR : EXPR . LE EXPR  (62)
	EXPR : EXPR . GE EXPR  (63)
	EXPR : EXPR . AND EXPR  (64)
	EXPR : EXPR . OR EXPR  (65)
	EXPR : EXPR . BITAND EXPR  (66)
	EXPR : EXPR . BITOR EXPR  (67)
	POSTFIX_EXPR : ID LB EXPR . RB  (72)
	ASSIGNMENT : ID LB EXPR . RB ASSIGN EXPR  (84)

	ADD  shift 80
	SUB  shift 81
	MUL  shift 82
	DIV  shift 83
	EQ  shift 84
	NE  shift 85
	LT  shift 86
	GT  shift 87
	LE  shift 88
	GE  shift 89
	AND  shift 90
	OR  shift 91
	RB  shift 144
	BITAND  shift 93
	BITOR  shift 94
	.  error


state 113
	FUNCTION_CALL : ID $$22 LP . ARGUMENTLIST RP  (108)
	ARGUMENTLIST : .  (111)

	INT_NUM  shift 30
	FLOAT_NUM  shift 31
	ID  shift 62
	ADD  shift 33
	SUB  shift 34
	LP  shift 35
	CHARACTER  shift 36
	NEG  shift 37
	RP  reduce 111

	EXPR  goto 145
	UNARY_EXPR  goto 45
	PRIMARY_EXPR  goto 46
	UNARY_OP  goto 47
	CONST  goto 48
	FUNCTION_CALL  goto 52
	ARGUMENTLIST  goto 146
	ARG  goto 147
	POSTFIX_EXPR  goto 53


state 114
	PRIMARY_EXPR : LP EXPR RP .  (76)

	.  reduce 76


state 115
	DECLARATION : DATA_TYPE ID ASSIGN . EXPR  (44)

	INT_NUM  shift 30
	FLOAT_NUM  shift 31
	ID  shift 62
	ADD  shift 33
	SUB  shift 34
	LP  shift 35
	CHARACTER  shift 36
	NEG  shift 37
	.  error

	EXPR  goto 148
	UNARY_EXPR  goto 45
	PRIMARY_EXPR  goto 46
	UNARY_OP  goto 47
	CONST  goto 48
	FUNCTION_CALL  goto 52
	POSTFIX_EXPR  goto 53


state 116
	DECLARATION : DATA_TYPE ID LB . INT_NUM RB  (46)
	DECLARATION : DATA_TYPE ID LB . INT_NUM RB ASSIGN $$4 LF ARR_VALUES RF  (48)

	INT_NUM  shift 149
	.  error


117: shift/reduce conflict (shift 93, reduce 54) on BITAND
117: shift/reduce conflict (shift 94, reduce 54) on BITOR
state 117
	EXPR : EXPR . ADD EXPR  (54)
	EXPR : EXPR ADD EXPR .  (54)
	EXPR : EXPR . SUB EXPR  (55)
	EXPR : EXPR . MUL EXPR  (56)
	EXPR : EXPR . DIV EXPR  (57)
	EXPR : EXPR . EQ EXPR  (58)
	EXPR : EXPR . NE EXPR  (59)
	EXPR : EXPR . LT EXPR  (60)
	EXPR : EXPR . GT EXPR  (61)
	EXPR : EXPR . LE EXPR  (62)
	EXPR : EXPR . GE EXPR  (63)
	EXPR : EXPR . AND EXPR  (64)
	EXPR : EXPR . OR EXPR  (65)
	EXPR : EXPR . BITAND EXPR  (66)
	EXPR : EXPR . BITOR EXPR  (67)

	MUL  shift 82
	DIV  shift 83
	BITAND  shift 93
	BITOR  shift 94
	ADD  reduce 54
	SUB  reduce 54
	EQ  reduce 54
	NE  reduce 54
	LT  reduce 54
	GT  reduce 54
	LE  reduce 54
	GE  reduce 54
	AND  reduce 54
	OR  reduce 54
	SCOL  reduce 54
	COMMA  reduce 54
	RP  reduce 54
	RB  reduce 54


118: shift/reduce conflict (shift 93, reduce 55) on BITAND
118: shift/reduce conflict (shift 94, reduce 55) on BITOR
state 118
	EXPR : EXPR . ADD EXPR  (54)
	EXPR : EXPR . SUB EXPR  (55)
	EXPR : EXPR SUB EXPR .  (55)
	EXPR : EXPR . MUL EXPR  (56)
	EXPR : EXPR . DIV EXPR  (57)
	EXPR : EXPR . EQ EXPR  (58)
	EXPR : EXPR . NE EXPR  (59)
	EXPR : EXPR . LT EXPR  (60)
	EXPR : EXPR . GT EXPR  (61)
	EXPR : EXPR . LE EXPR  (62)
	EXPR : EXPR . GE EXPR  (63)
	EXPR : EXPR . AND EXPR  (64)
	EXPR : EXPR . OR EXPR  (65)
	EXPR : EXPR . BITAND EXPR  (66)
	EXPR : EXPR . BITOR EXPR  (67)

	MUL  shift 82
	DIV  shift 83
	BITAND  shift 93
	BITOR  shift 94
	ADD  reduce 55
	SUB  reduce 55
	EQ  reduce 55
	NE  reduce 55
	LT  reduce 55
	GT  reduce 55
	LE  reduce 55
	GE  reduce 55
	AND  reduce 55
	OR  reduce 55
	SCOL  reduce 55
	COMMA  reduce 55
	RP  reduce 55
	RB  reduce 55


119: shift/reduce conflict (shift 93, reduce 56) on BITAND
119: shift/reduce conflict (shift 94, reduce 56) on BITOR
state 119
	EXPR : EXPR . ADD EXPR  (54)
	EXPR : EXPR . SUB EXPR  (55)
	EXPR : EXPR . MUL EXPR  (56)
	EXPR : EXPR MUL EXPR .  (56)
	EXPR : EXPR . DIV EXPR  (57)
	EXPR : EXPR . EQ EXPR  (58)
	EXPR : EXPR . NE EXPR  (59)
	EXPR : EXPR . LT EXPR  (60)
	EXPR : EXPR . GT EXPR  (61)
	EXPR : EXPR . LE EXPR  (62)
	EXPR : EXPR . GE EXPR  (63)
	EXPR : EXPR . AND EXPR  (64)
	EXPR : EXPR . OR EXPR  (65)
	EXPR : EXPR . BITAND EXPR  (66)
	EXPR : EXPR . BITOR EXPR  (67)

	BITAND  shift 93
	BITOR  shift 94
	ADD  reduce 56
	SUB  reduce 56
	MUL  reduce 56
	DIV  reduce 56
	EQ  reduce 56
	NE  reduce 56
	LT  reduce 56
	GT  reduce 56
	LE  reduce 56
	GE  reduce 56
	AND  reduce 56
	OR  reduce 56
	SCOL  reduce 56
	COMMA  reduce 56
	RP  reduce 56
	RB  reduce 56


120: shift/reduce conflict (shift 93, reduce 57) on BITAND
120: shift/reduce conflict (shift 94, reduce 57) on BITOR
state 120
	EXPR : EXPR . ADD EXPR  (54)
	EXPR : EXPR . SUB EXPR  (55)
	EXPR : EXPR . MUL EXPR  (56)
	EXPR : EXPR . DIV EXPR  (57)
	EXPR : EXPR DIV EXPR .  (57)
	EXPR : EXPR . EQ EXPR  (58)
	EXPR : EXPR . NE EXPR  (59)
	EXPR : EXPR . LT EXPR  (60)
	EXPR : EXPR . GT EXPR  (61)
	EXPR : EXPR . LE EXPR  (62)
	EXPR : EXPR . GE EXPR  (63)
	EXPR : EXPR . AND EXPR  (64)
	EXPR : EXPR . OR EXPR  (65)
	EXPR : EXPR . BITAND EXPR  (66)
	EXPR : EXPR . BITOR EXPR  (67)

	BITAND  shift 93
	BITOR  shift 94
	ADD  reduce 57
	SUB  reduce 57
	MUL  reduce 57
	DIV  reduce 57
	EQ  reduce 57
	NE  reduce 57
	LT  reduce 57
	GT  reduce 57
	LE  reduce 57
	GE  reduce 57
	AND  reduce 57
	OR  reduce 57
	SCOL  reduce 57
	COMMA  reduce 57
	RP  reduce 57
	RB  reduce 57


121: shift/reduce conflict (shift 93, reduce 58) on BITAND
121: shift/reduce conflict (shift 94, reduce 58) on BITOR
state 121
	EXPR : EXPR . ADD EXPR  (54)
	EXPR : EXPR . SUB EXPR  (55)
	EXPR : EXPR . MUL EXPR  (56)
	EXPR : EXPR . DIV EXPR  (57)
	EXPR : EXPR . EQ EXPR  (58)
	EXPR : EXPR EQ EXPR .  (58)
	EXPR : EXPR . NE EXPR  (59)
	EXPR : EXPR . LT EXPR  (60)
	EXPR : EXPR . GT EXPR  (61)
	EXPR : EXPR . LE EXPR  (62)
	EXPR : EXPR . GE EXPR  (63)
	EXPR : EXPR . AND EXPR  (64)
	EXPR : EXPR . OR EXPR  (65)
	EXPR : EXPR . BITAND EXPR  (66)
	EXPR : EXPR . BITOR EXPR  (67)

	ADD  shift 80
	SUB  shift 81
	MUL  shift 82
	DIV  shift 83
	LT  shift 86
	GT  shift 87
	LE  shift 88
	GE  shift 89
	BITAND  shift 93
	BITOR  shift 94
	EQ  reduce 58
	NE  reduce 58
	AND  reduce 58
	OR  reduce 58
	SCOL  reduce 58
	COMMA  reduce 58
	RP  reduce 58
	RB  reduce 58


122: shift/reduce conflict (shift 93, reduce 59) on BITAND
122: shift/reduce conflict (shift 94, reduce 59) on BITOR
state 122
	EXPR : EXPR . ADD EXPR  (54)
	EXPR : EXPR . SUB EXPR  (55)
	EXPR : EXPR . MUL EXPR  (56)
	EXPR : EXPR . DIV EXPR  (57)
	EXPR : EXPR . EQ EXPR  (58)
	EXPR : EXPR . NE EXPR  (59)
	EXPR : EXPR NE EXPR .  (59)
	EXPR : EXPR . LT EXPR  (60)
	EXPR : EXPR . GT EXPR  (61)
	EXPR : EXPR . LE EXPR  (62)
	EXPR : EXPR . GE EXPR  (63)
	EXPR : EXPR . AND EXPR  (64)
	EXPR : EXPR . OR EXPR  (65)
	EXPR : EXPR . BITAND EXPR  (66)
	EXPR : EXPR . BITOR EXPR  (67)

	ADD  shift 80
	SUB  shift 81
	MUL  shift 82
	DIV  shift 83
	LT  shift 86
	GT  shift 87
	LE  shift 88
	GE  shift 89
	BITAND  shift 93
	BITOR  shift 94
	EQ  reduce 59
	NE  reduce 59
	AND  reduce 59
	OR  reduce 59
	SCOL  reduce 59
	COMMA  reduce 59
	RP  reduce 59
	RB  reduce 59


123: shift/reduce conflict (shift 93, reduce 60) on BITAND
123: shift/reduce conflict (shift 94, reduce 60) on BITOR
state 123
	EXPR : EXPR . ADD EXPR  (54)
	EXPR : EXPR . SUB EXPR  (55)
	EXPR : EXPR . MUL EXPR  (56)
	EXPR : EXPR . DIV EXPR  (57)
	EXPR : EXPR . EQ EXPR  (58)
	EXPR : EXPR . NE EXPR  (59)
	EXPR : EXPR . LT EXPR  (60)
	EXPR : EXPR LT EXPR .  (60)
	EXPR : EXPR . GT EXPR  (61)
	EXPR : EXPR . LE EXPR  (62)
	EXPR : EXPR . GE EXPR  (63)
	EXPR : EXPR . AND EXPR  (64)
	EXPR : EXPR . OR EXPR  (65)
	EXPR : EXPR . BITAND EXPR  (66)
	EXPR : EXPR . BITOR EXPR  (67)

	ADD  shift 80
	SUB  shift 81
	MUL  shift 82
	DIV  shift 83
	BITAND  shift 93
	BITOR  shift 94
	EQ  reduce 60
	NE  reduce 60
	LT  reduce 60
	GT  reduce 60
	LE  reduce 60
	GE  reduce 60
	AND  reduce 60
	OR  reduce 60
	SCOL  reduce 60
	COMMA  reduce 60
	RP  reduce 60
	RB  reduce 60


124: shift/reduce conflict (shift 93, reduce 61) on BITAND
124: shift/reduce conflict (shift 94, reduce 61) on BITOR
state 124
	EXPR : EXPR . ADD EXPR  (54)
	EXPR : EXPR . SUB EXPR  (55)
	EXPR : EXPR . MUL EXPR  (56)
	EXPR : EXPR . DIV EXPR  (57)
	EXPR : EXPR . EQ EXPR  (58)
	EXPR : EXPR . NE EXPR  (59)
	EXPR : EXPR . LT EXPR  (60)
	EXPR : EXPR . GT EXPR  (61)
	EXPR : EXPR GT EXPR .  (61)
	EXPR : EXPR . LE EXPR  (62)
	EXPR : EXPR . GE EXPR  (63)
	EXPR : EXPR . AND EXPR  (64)
	EXPR : EXPR . OR EXPR  (65)
	EXPR : EXPR . BITAND EXPR  (66)
	EXPR : EXPR . BITOR EXPR  (67)

	ADD  shift 80
	SUB  shift 81
	MUL  shift 82
	DIV  shift 83
	BITAND  shift 93
	BITOR  shift 94
	EQ  reduce 61
	NE  reduce 61
	LT  reduce 61
	GT  reduce 61
	LE  reduce 61
	GE  reduce 61
	AND  reduce 61
	OR  reduce 61
	SCOL  reduce 61
	COMMA  reduce 61
	RP  reduce 61
	RB  reduce 61


125: shift/reduce conflict (shift 93, reduce 62) on BITAND
125: shift/reduce conflict (shift 94, reduce 62) on BITOR
state 125
	EXPR : EXPR . ADD EXPR  (54)
	EXPR : EXPR . SUB EXPR  (55)
	EXPR : EXPR . MUL EXPR  (56)
	EXPR : EXPR . DIV EXPR  (57)
	EXPR : EXPR . EQ EXPR  (58)
	EXPR : EXPR . NE EXPR  (59)
	EXPR : EXPR . LT EXPR  (60)
	EXPR : EXPR . GT EXPR  (61)
	EXPR : EXPR . LE EXPR  (62)
	EXPR : EXPR LE EXPR .  (62)
	EXPR : EXPR . GE EXPR  (63)
	EXPR : EXPR . AND EXPR  (64)
	EXPR : EXPR . OR EXPR  (65)
	EXPR : EXPR . BITAND EXPR  (66)
	EXPR : EXPR . BITOR EXPR  (67)

	ADD  shift 80
	SUB  shift 81
	MUL  shift 82
	DIV  shift 83
	BITAND  shift 93
	BITOR  shift 94
	EQ  reduce 62
	NE  reduce 62
	LT  reduce 62
	GT  reduce 62
	LE  reduce 62
	GE  reduce 62
	AND  reduce 62
	OR  reduce 62
	SCOL  reduce 62
	COMMA  reduce 62
	RP  reduce 62
	RB  reduce 62


126: shift/reduce conflict (shift 93, reduce 63) on BITAND
126: shift/reduce conflict (shift 94, reduce 63) on BITOR
state 126
	EXPR : EXPR . ADD EXPR  (54)
	EXPR : EXPR . SUB EXPR  (55)
	EXPR : EXPR . MUL EXPR  (56)
	EXPR : EXPR . DIV EXPR  (57)
	EXPR : EXPR . EQ EXPR  (58)
	EXPR : EXPR . NE EXPR  (59)
	EXPR : EXPR . LT EXPR  (60)
	EXPR : EXPR . GT EXPR  (61)
	EXPR : EXPR . LE EXPR  (62)
	EXPR : EXPR . GE EXPR  (63)
	EXPR : EXPR GE EXPR .  (63)
	EXPR : EXPR . AND EXPR  (64)
	EXPR : EXPR . OR EXPR  (65)
	EXPR : EXPR . BITAND EXPR  (66)
	EXPR : EXPR . BITOR EXPR  (67)

	ADD  shift 80
	SUB  shift 81
	MUL  shift 82
	DIV  shift 83
	BITAND  shift 93
	BITOR  shift 94
	EQ  reduce 63
	NE  reduce 63
	LT  reduce 63
	GT  reduce 63
	LE  reduce 63
	GE  reduce 63
	AND  reduce 63
	OR  reduce 63
	SCOL  reduce 63
	COMMA  reduce 63
	RP  reduce 63
	RB  reduce 63


127: shift/reduce conflict (shift 93, reduce 64) on BITAND
127: shift/reduce conflict (shift 94, reduce 64) on BITOR
state 127
	EXPR : EXPR . ADD EXPR  (54)
	EXPR : EXPR . SUB EXPR  (55)
	EXPR : EXPR . MUL EXPR  (56)
	EXPR : EXPR . DIV EXPR  (57)
	EXPR : EXPR . EQ EXPR  (58)
	EXPR : EXPR . NE EXPR  (59)
	EXPR : EXPR . LT EXPR  (60)
	EXPR : EXPR . GT EXPR  (61)
	EXPR : EXPR . LE EXPR  (62)
	EXPR : EXPR . GE EXPR  (63)
	EXPR : EXPR . AND EXPR  (64)
	EXPR : EXPR AND EXPR .  (64)
	EXPR : EXPR . OR EXPR  (65)
	EXPR : EXPR . BITAND EXPR  (66)
	EXPR : EXPR . BITOR EXPR  (67)

	ADD  shift 80
	SUB  shift 81
	MUL  shift 82
	DIV  shift 83
	EQ  shift 84
	NE  shift 85
	LT  shift 86
	GT  shift 87
	LE  shift 88
	GE  shift 89
	BITAND  shift 93
	BITOR  shift 94
	AND  reduce 64
	OR  reduce 64
	SCOL  reduce 64
	COMMA  reduce 64
	RP  reduce 64
	RB  reduce 64


128: shift/reduce conflict (shift 93, reduce 65) on BITAND
128: shift/reduce conflict (shift 94, reduce 65) on BITOR
state 128
	EXPR : EXPR . ADD EXPR  (54)
	EXPR : EXPR . SUB EXPR  (55)
	EXPR : EXPR . MUL EXPR  (56)
	EXPR : EXPR . DIV EXPR  (57)
	EXPR : EXPR . EQ EXPR  (58)
	EXPR : EXPR . NE EXPR  (59)
	EXPR : EXPR . LT EXPR  (60)
	EXPR : EXPR . GT EXPR  (61)
	EXPR : EXPR . LE EXPR  (62)
	EXPR : EXPR . GE EXPR  (63)
	EXPR : EXPR . AND EXPR  (64)
	EXPR : EXPR . OR EXPR  (65)
	EXPR : EXPR OR EXPR .  (65)
	EXPR : EXPR . BITAND EXPR  (66)
	EXPR : EXPR . BITOR EXPR  (67)

	ADD  shift 80
	SUB  shift 81
	MUL  shift 82
	DIV  shift 83
	EQ  shift 84
	NE  shift 85
	LT  shift 86
	GT  shift 87
	LE  shift 88
	GE  shift 89
	BITAND  shift 93
	BITOR  shift 94
	AND  reduce 65
	OR  reduce 65
	SCOL  reduce 65
	COMMA  reduce 65
	RP  reduce 65
	RB  reduce 65


129: shift/reduce conflict (shift 80, reduce 66) on ADD
129: shift/reduce conflict (shift 81, reduce 66) on SUB
129: shift/reduce conflict (shift 82, reduce 66) on MUL
129: shift/reduce conflict (shift 83, reduce 66) on DIV
129: shift/reduce conflict (shift 84, reduce 66) on EQ
129: shift/reduce conflict (shift 85, reduce 66) on NE
129: shift/reduce conflict (shift 86, reduce 66) on LT
129: shift/reduce conflict (shift 87, reduce 66) on GT
129: shift/reduce conflict (shift 88, reduce 66) on LE
129: shift/reduce conflict (shift 89, reduce 66) on GE
129: shift/reduce conflict (shift 90, reduce 66) on AND
129: shift/reduce conflict (shift 91, reduce 66) on OR
129: shift/reduce conflict (shift 93, reduce 66) on BITAND
129: shift/reduce conflict (shift 94, reduce 66) on BITOR
state 129
	EXPR : EXPR . ADD EXPR  (54)
	EXPR : EXPR . SUB EXPR  (55)
	EXPR : EXPR . MUL EXPR  (56)
	EXPR : EXPR . DIV EXPR  (57)
	EXPR : EXPR . EQ EXPR  (58)
	EXPR : EXPR . NE EXPR  (59)
	EXPR : EXPR . LT EXPR  (60)
	EXPR : EXPR . GT EXPR  (61)
	EXPR : EXPR . LE EXPR  (62)
	EXPR : EXPR . GE EXPR  (63)
	EXPR : EXPR . AND EXPR  (64)
	EXPR : EXPR . OR EXPR  (65)
	EXPR : EXPR . BITAND EXPR  (66)
	EXPR : EXPR BITAND EXPR .  (66)
	EXPR : EXPR . BITOR EXPR  (67)

	ADD  shift 80
	SUB  shift 81
	MUL  shift 82
	DIV  shift 83
	EQ  shift 84
	NE  shift 85
	LT  shift 86
	GT  shift 87
	LE  shift 88
	GE  shift 89
	AND  shift 90
	OR  shift 91
	BITAND  shift 93
	BITOR  shift 94
	SCOL  reduce 66
	COMMA  reduce 66
	RP  reduce 66
	RB  reduce 66


130: shift/reduce conflict (shift 80, reduce 67) on ADD
130: shift/reduce conflict (shift 81, reduce 67) on SUB
130: shift/reduce conflict (shift 82, reduce 67) on MUL
130: shift/reduce conflict (shift 83, reduce 67) on DIV
130: shift/reduce conflict (shift 84, reduce 67) on EQ
130: shift/reduce conflict (shift 85, reduce 67) on NE
130: shift/reduce conflict (shift 86, reduce 67) on LT
130: shift/reduce conflict (shift 87, reduce 67) on GT
130: shift/reduce conflict (shift 88, reduce 67) on LE
130: shift/reduce conflict (shift 89, reduce 67) on GE
130: shift/reduce conflict (shift 90, reduce 67) on AND
130: shift/reduce conflict (shift 91, reduce 67) on OR
130: shift/reduce conflict (shift 93, reduce 67) on BITAND
130: shift/reduce conflict (shift 94, reduce 67) on BITOR
state 130
	EXPR : EXPR . ADD EXPR  (54)
	EXPR : EXPR . SUB EXPR  (55)
	EXPR : EXPR . MUL EXPR  (56)
	EXPR : EXPR . DIV EXPR  (57)
	EXPR : EXPR . EQ EXPR  (58)
	EXPR : EXPR . NE EXPR  (59)
	EXPR : EXPR . LT EXPR  (60)
	EXPR : EXPR . GT EXPR  (61)
	EXPR : EXPR . LE EXPR  (62)
	EXPR : EXPR . GE EXPR  (63)
	EXPR : EXPR . AND EXPR  (64)
	EXPR : EXPR . OR EXPR  (65)
	EXPR : EXPR . BITAND EXPR  (66)
	EXPR : EXPR . BITOR EXPR  (67)
	EXPR : EXPR BITOR EXPR .  (67)

	ADD  shift 80
	SUB  shift 81
	MUL  shift 82
	DIV  shift 83
	EQ  shift 84
	NE  shift 85
	LT  shift 86
	GT  shift 87
	LE  shift 88
	GE  shift 89
	AND  shift 90
	OR  shift 91
	BITAND  shift 93
	BITOR  shift 94
	SCOL  reduce 67
	COMMA  reduce 67
	RP  reduce 67
	RB  reduce 67


state 131
	PARAM : DATA_TYPE ID .  (19)

	.  reduce 19


state 132
	FUNCTION_PREFIX : FUNCTION_TYPE ID $$2 LP PARAMLIST RP .  (8)

	.  reduce 8


state 133
	PARAMLIST : PARAM $$3 . COMMA PARAMLIST  (16)

	COMMA  shift 150
	.  error


state 134
	CLASSMEMBER : ACCESS_MODIFIER DATA_TYPE ID . SCOL  (25)

	SCOL  shift 151
	.  error


state 135
	DECLARATION : STRING ID ASSIGN STR .  (45)

	.  reduce 45


state 136
	EXPR : EXPR . ADD EXPR  (54)
	EXPR : EXPR . SUB EXPR  (55)
	EXPR : EXPR . MUL EXPR  (56)
	EXPR : EXPR . DIV EXPR  (57)
	EXPR : EXPR . EQ EXPR  (58)
	EXPR : EXPR . NE EXPR  (59)
	EXPR : EXPR . LT EXPR  (60)
	EXPR : EXPR . GT EXPR  (61)
	EXPR : EXPR . LE EXPR  (62)
	EXPR : EXPR . GE EXPR  (63)
	EXPR : EXPR . AND EXPR  (64)
	EXPR : EXPR . OR EXPR  (65)
	EXPR : EXPR . BITAND EXPR  (66)
	EXPR : EXPR . BITOR EXPR  (67)
	POSTFIX_EXPR : ID LB EXPR . RB  (72)

	ADD  shift 80
	SUB  shift 81
	MUL  shift 82
	DIV  shift 83
	EQ  shift 84
	NE  shift 85
	LT  shift 86
	GT  shift 87
	LE  shift 88
	GE  shift 89
	AND  shift 90
	OR  shift 91
	RB  shift 152
	BITAND  shift 93
	BITOR  shift 94
	.  error


state 137
	STMT : INPUT LP ID RP . SCOL  (40)

	SCOL  shift 153
	.  error


state 138
	STMT : INPUT LP ID LB . EXPR RB RP SCOL  (41)

	INT_NUM  shift 30
	FLOAT_NUM  shift 31
	ID  shift 62
	ADD  shift 33
	SUB  shift 34
	LP  shift 35
	CHARACTER  shift 36
	NEG  shift 37
	.  error

	EXPR  goto 154
	UNARY_EXPR  goto 45
	PRIMARY_EXPR  goto 46
	UNARY_OP  goto 47
	CONST  goto 48
	FUNCTION_CALL  goto 52
	POSTFIX_EXPR  goto 53


state 139
	STMT : OUTPUT LP EXPR RP . SCOL  (42)

	SCOL  shift 155
	.  error


state 140
	EXPR : EXPR . ADD EXPR  (54)
	EXPR : EXPR . SUB EXPR  (55)
	EXPR : EXPR . MUL EXPR  (56)
	EXPR : EXPR . DIV EXPR  (57)
	EXPR : EXPR . EQ EXPR  (58)
	EXPR : EXPR . NE EXPR  (59)
	EXPR : EXPR . LT EXPR  (60)
	EXPR : EXPR . GT EXPR  (61)
	EXPR : EXPR . LE EXPR  (62)
	EXPR : EXPR . GE EXPR  (63)
	EXPR : EXPR . AND EXPR  (64)
	EXPR : EXPR . OR EXPR  (65)
	EXPR : EXPR . BITAND EXPR  (66)
	EXPR : EXPR . BITOR EXPR  (67)
	IF_STMT : IF $$6 LP EXPR . RP $$7 LF $$8 STMTLIST RF $$9 ELIF_STMT ELSE_STMT  (89)

	ADD  shift 80
	SUB  shift 81
	MUL  shift 82
	DIV  shift 83
	EQ  shift 84
	NE  shift 85
	LT  shift 86
	GT  shift 87
	LE  shift 88
	GE  shift 89
	AND  shift 90
	OR  shift 91
	RP  shift 156
	BITAND  shift 93
	BITOR  shift 94
	.  error


state 141
	EXPR : EXPR . ADD EXPR  (54)
	EXPR : EXPR . SUB EXPR  (55)
	EXPR : EXPR . MUL EXPR  (56)
	EXPR : EXPR . DIV EXPR  (57)
	EXPR : EXPR . EQ EXPR  (58)
	EXPR : EXPR . NE EXPR  (59)
	EXPR : EXPR . LT EXPR  (60)
	EXPR : EXPR . GT EXPR  (61)
	EXPR : EXPR . LE EXPR  (62)
	EXPR : EXPR . GE EXPR  (63)
	EXPR : EXPR . AND EXPR  (64)
	EXPR : EXPR . OR EXPR  (65)
	EXPR : EXPR . BITAND EXPR  (66)
	EXPR : EXPR . BITOR EXPR  (67)
	WHILE_STMT : WHILE $$15 LP EXPR . RP $$16 LF $$17 STMTLIST RF  (101)

	ADD  shift 80
	SUB  shift 81
	MUL  shift 82
	DIV  shift 83
	EQ  shift 84
	NE  shift 85
	LT  shift 86
	GT  shift 87
	LE  shift 88
	GE  shift 89
	AND  shift 90
	OR  shift 91
	RP  shift 157
	BITAND  shift 93
	BITOR  shift 94
	.  error


state 142
	ASSIGNMENT : ID LB . EXPR RB ASSIGN EXPR  (84)

	INT_NUM  shift 30
	FLOAT_NUM  shift 31
	ID  shift 62
	ADD  shift 33
	SUB  shift 34
	LP  shift 35
	CHARACTER  shift 36
	NEG  shift 37
	.  error

	EXPR  goto 158
	UNARY_EXPR  goto 45
	PRIMARY_EXPR  goto 46
	UNARY_OP  goto 47
	CONST  goto 48
	FUNCTION_CALL  goto 52
	POSTFIX_EXPR  goto 53


state 143
	FOR_STMT : FOR LP ASSIGNMENT SCOL . $$18 EXPR SCOL $$19 ASSIGNMENT RP $$20 LF $$21 STMTLIST RF  (106)
	$$18 : .  (102)

	.  reduce 102

	$$18  goto 159


state 144
	POSTFIX_EXPR : ID LB EXPR RB .  (72)
	ASSIGNMENT : ID LB EXPR RB . ASSIGN EXPR  (84)

	ASSIGN  shift 160
	ADD  reduce 72
	SUB  reduce 72
	MUL  reduce 72
	DIV  reduce 72
	EQ  reduce 72
	NE  reduce 72
	LT  reduce 72
	GT  reduce 72
	LE  reduce 72
	GE  reduce 72
	AND  reduce 72
	OR  reduce 72
	SCOL  reduce 72
	BITAND  reduce 72
	BITOR  reduce 72


state 145
	EXPR : EXPR . ADD EXPR  (54)
	EXPR : EXPR . SUB EXPR  (55)
	EXPR : EXPR . MUL EXPR  (56)
	EXPR : EXPR . DIV EXPR  (57)
	EXPR : EXPR . EQ EXPR  (58)
	EXPR : EXPR . NE EXPR  (59)
	EXPR : EXPR . LT EXPR  (60)
	EXPR : EXPR . GT EXPR  (61)
	EXPR : EXPR . LE EXPR  (62)
	EXPR : EXPR . GE EXPR  (63)
	EXPR : EXPR . AND EXPR  (64)
	EXPR : EXPR . OR EXPR  (65)
	EXPR : EXPR . BITAND EXPR  (66)
	EXPR : EXPR . BITOR EXPR  (67)
	ARG : EXPR .  (112)

	ADD  shift 80
	SUB  shift 81
	MUL  shift 82
	DIV  shift 83
	EQ  shift 84
	NE  shift 85
	LT  shift 86
	GT  shift 87
	LE  shift 88
	GE  shift 89
	AND  shift 90
	OR  shift 91
	BITAND  shift 93
	BITOR  shift 94
	COMMA  reduce 112
	RP  reduce 112


state 146
	FUNCTION_CALL : ID $$22 LP ARGUMENTLIST . RP  (108)

	RP  shift 161
	.  error


state 147
	ARGUMENTLIST : ARG . COMMA ARGUMENTLIST  (109)
	ARGUMENTLIST : ARG .  (110)

	COMMA  shift 162
	RP  reduce 110


state 148
	DECLARATION : DATA_TYPE ID ASSIGN EXPR .  (44)
	EXPR : EXPR . ADD EXPR  (54)
	EXPR : EXPR . SUB EXPR  (55)
	EXPR : EXPR . MUL EXPR  (56)
	EXPR : EXPR . DIV EXPR  (57)
	EXPR : EXPR . EQ EXPR  (58)
	EXPR : EXPR . NE EXPR  (59)
	EXPR : EXPR . LT EXPR  (60)
	EXPR : EXPR . GT EXPR  (61)
	EXPR : EXPR . LE EXPR  (62)
	EXPR : EXPR . GE EXPR  (63)
	EXPR : EXPR . AND EXPR  (64)
	EXPR : EXPR . OR EXPR  (65)
	EXPR : EXPR . BITAND EXPR  (66)
	EXPR : EXPR . BITOR EXPR  (67)

	ADD  shift 80
	SUB  shift 81
	MUL  shift 82
	DIV  shift 83
	EQ  shift 84
	NE  shift 85
	LT  shift 86
	GT  shift 87
	LE  shift 88
	GE  shift 89
	AND  shift 90
	OR  shift 91
	BITAND  shift 93
	BITOR  shift 94
	SCOL  reduce 44


state 149
	DECLARATION : DATA_TYPE ID LB INT_NUM . RB  (46)
	DECLARATION : DATA_TYPE ID LB INT_NUM . RB ASSIGN $$4 LF ARR_VALUES RF  (48)

	RB  shift 163
	.  error


state 150
	PARAMLIST : PARAM $$3 COMMA . PARAMLIST  (16)
	PARAMLIST : .  (18)

	INT  shift 3
	CHAR  shift 4
	FLOAT  shift 5
	STRING  shift 6
	RP  reduce 18

	DATA_TYPE  goto 98
	PARAMLIST  goto 164
	PARAM  goto 100


state 151
	CLASSMEMBER : ACCESS_MODIFIER DATA_TYPE ID SCOL .  (25)

	.  reduce 25


state 152
	POSTFIX_EXPR : ID LB EXPR RB .  (72)

	.  reduce 72


state 153
	STMT : INPUT LP ID RP SCOL .  (40)

	.  reduce 40


state 154
	STMT : INPUT LP ID LB EXPR . RB RP SCOL  (41)
	EXPR : EXPR . ADD EXPR  (54)
	EXPR : EXPR . SUB EXPR  (55)
	EXPR : EXPR . MUL EXPR  (56)
	EXPR : EXPR . DIV EXPR  (57)
	EXPR : EXPR . EQ EXPR  (58)
	EXPR : EXPR . NE EXPR  (59)
	EXPR : EXPR . LT EXPR  (60)
	EXPR : EXPR . GT EXPR  (61)
	EXPR : EXPR . LE EXPR  (62)
	EXPR : EXPR . GE EXPR  (63)
	EXPR : EXPR . AND EXPR  (64)
	EXPR : EXPR . OR EXPR  (65)
	EXPR : EXPR . BITAND EXPR  (66)
	EXPR : EXPR . BITOR EXPR  (67)

	ADD  shift 80
	SUB  shift 81
	MUL  shift 82
	DIV  shift 83
	EQ  shift 84
	NE  shift 85
	LT  shift 86
	GT  shift 87
	LE  shift 88
	GE  shift 89
	AND  shift 90
	OR  shift 91
	RB  shift 165
	BITAND  shift 93
	BITOR  shift 94
	.  error


state 155
	STMT : OUTPUT LP EXPR RP SCOL .  (42)

	.  reduce 42


state 156
	IF_STMT : IF $$6 LP EXPR RP . $$7 LF $$8 STMTLIST RF $$9 ELIF_STMT ELSE_STMT  (89)
	$$7 : .  (86)

	.  reduce 86

	$$7  goto 166


state 157
	WHILE_STMT : WHILE $$15 LP EXPR RP . $$16 LF $$17 STMTLIST RF  (101)
	$$16 : .  (99)

	.  reduce 99

	$$16  goto 167


state 158
	EXPR : EXPR . ADD EXPR  (54)
	EXPR : EXPR . SUB EXPR  (55)
	EXPR : EXPR . MUL EXPR  (56)
	EXPR : EXPR . DIV EXPR  (57)
	EXPR : EXPR . EQ EXPR  (58)
	EXPR : EXPR . NE EXPR  (59)
	EXPR : EXPR . LT EXPR  (60)
	EXPR : EXPR . GT EXPR  (61)
	EXPR : EXPR . LE EXPR  (62)
	EXPR : EXPR . GE EXPR  (63)
	EXPR : EXPR . AND EXPR  (64)
	EXPR : EXPR . OR EXPR  (65)
	EXPR : EXPR . BITAND EXPR  (66)
	EXPR : EXPR . BITOR EXPR  (67)
	ASSIGNMENT : ID LB EXPR . RB ASSIGN EXPR  (84)

	ADD  shift 80
	SUB  shift 81
	MUL  shift 82
	DIV  shift 83
	EQ  shift 84
	NE  shift 85
	LT  shift 86
	GT  shift 87
	LE  shift 88
	GE  shift 89
	AND  shift 90
	OR  shift 91
	RB  shift 168
	BITAND  shift 93
	BITOR  shift 94
	.  error


state 159
	FOR_STMT : FOR LP ASSIGNMENT SCOL $$18 . EXPR SCOL $$19 ASSIGNMENT RP $$20 LF $$21 STMTLIST RF  (106)

	INT_NUM  shift 30
	FLOAT_NUM  shift 31
	ID  shift 62
	ADD  shift 33
	SUB  shift 34
	LP  shift 35
	CHARACTER  shift 36
	NEG  shift 37
	.  error

	EXPR  goto 169
	UNARY_EXPR  goto 45
	PRIMARY_EXPR  goto 46
	UNARY_OP  goto 47
	CONST  goto 48
	FUNCTION_CALL  goto 52
	POSTFIX_EXPR  goto 53


state 160
	ASSIGNMENT : ID LB EXPR RB ASSIGN . EXPR  (84)

	INT_NUM  shift 30
	FLOAT_NUM  shift 31
	ID  shift 62
	ADD  shift 33
	SUB  shift 34
	LP  shift 35
	CHARACTER  shift 36
	NEG  shift 37
	.  error

	EXPR  goto 170
	UNARY_EXPR  goto 45
	PRIMARY_EXPR  goto 46
	UNARY_OP  goto 47
	CONST  goto 48
	FUNCTION_CALL  goto 52
	POSTFIX_EXPR  goto 53


state 161
	FUNCTION_CALL : ID $$22 LP ARGUMENTLIST RP .  (108)

	.  reduce 108


state 162
	ARGUMENTLIST : ARG COMMA . ARGUMENTLIST  (109)
	ARGUMENTLIST : .  (111)

	INT_NUM  shift 30
	FLOAT_NUM  shift 31
	ID  shift 62
	ADD  shift 33
	SUB  shift 34
	LP  shift 35
	CHARACTER  shift 36
	NEG  shift 37
	RP  reduce 111

	EXPR  goto 145
	UNARY_EXPR  goto 45
	PRIMARY_EXPR  goto 46
	UNARY_OP  goto 47
	CONST  goto 48
	FUNCTION_CALL  goto 52
	ARGUMENTLIST  goto 171
	ARG  goto 147
	POSTFIX_EXPR  goto 53


state 163
	DECLARATION : DATA_TYPE ID LB INT_NUM RB .  (46)
	DECLARATION : DATA_TYPE ID LB INT_NUM RB . ASSIGN $$4 LF ARR_VALUES RF  (48)

	ASSIGN  shift 172
	SCOL  reduce 46


state 164
	PARAMLIST : PARAM $$3 COMMA PARAMLIST .  (16)

	.  reduce 16


state 165
	STMT : INPUT LP ID LB EXPR RB . RP SCOL  (41)

	RP  shift 173
	.  error


state 166
	IF_STMT : IF $$6 LP EXPR RP $$7 . LF $$8 STMTLIST RF $$9 ELIF_STMT ELSE_STMT  (89)

	LF  shift 174
	.  error


state 167
	WHILE_STMT : WHILE $$15 LP EXPR RP $$16 . LF $$17 STMTLIST RF  (101)

	LF  shift 175
	.  error


state 168
	ASSIGNMENT : ID LB EXPR RB . ASSIGN EXPR  (84)

	ASSIGN  shift 160
	.  error


state 169
	EXPR : EXPR . ADD EXPR  (54)
	EXPR : EXPR . SUB EXPR  (55)
	EXPR : EXPR . MUL EXPR  (56)
	EXPR : EXPR . DIV EXPR  (57)
	EXPR : EXPR . EQ EXPR  (58)
	EXPR : EXPR . NE EXPR  (59)
	EXPR : EXPR . LT EXPR  (60)
	EXPR : EXPR . GT EXPR  (61)
	EXPR : EXPR . LE EXPR  (62)
	EXPR : EXPR . GE EXPR  (63)
	EXPR : EXPR . AND EXPR  (64)
	EXPR : EXPR . OR EXPR  (65)
	EXPR : EXPR . BITAND EXPR  (66)
	EXPR : EXPR . BITOR EXPR  (67)
	FOR_STMT : FOR LP ASSIGNMENT SCOL $$18 EXPR . SCOL $$19 ASSIGNMENT RP $$20 LF $$21 STMTLIST RF  (106)

	ADD  shift 80
	SUB  shift 81
	MUL  shift 82
	DIV  shift 83
	EQ  shift 84
	NE  shift 85
	LT  shift 86
	GT  shift 87
	LE  shift 88
	GE  shift 89
	AND  shift 90
	OR  shift 91
	SCOL  shift 176
	BITAND  shift 93
	BITOR  shift 94
	.  error


state 170
	EXPR : EXPR . ADD EXPR  (54)
	EXPR : EXPR . SUB EXPR  (55)
	EXPR : EXPR . MUL EXPR  (56)
	EXPR : EXPR . DIV EXPR  (57)
	EXPR : EXPR . EQ EXPR  (58)
	EXPR : EXPR . NE EXPR  (59)
	EXPR : EXPR . LT EXPR  (60)
	EXPR : EXPR . GT EXPR  (61)
	EXPR : EXPR . LE EXPR  (62)
	EXPR : EXPR . GE EXPR  (63)
	EXPR : EXPR . AND EXPR  (64)
	EXPR : EXPR . OR EXPR  (65)
	EXPR : EXPR . BITAND EXPR  (66)
	EXPR : EXPR . BITOR EXPR  (67)
	ASSIGNMENT : ID LB EXPR RB ASSIGN EXPR .  (84)

	ADD  shift 80
	SUB  shift 81
	MUL  shift 82
	DIV  shift 83
	EQ  shift 84
	NE  shift 85
	LT  shift 86
	GT  shift 87
	LE  shift 88
	GE  shift 89
	AND  shift 90
	OR  shift 91
	BITAND  shift 93
	BITOR  shift 94
	SCOL  reduce 84
	RP  reduce 84


state 171
	ARGUMENTLIST : ARG COMMA ARGUMENTLIST .  (109)

	.  reduce 109


state 172
	DECLARATION : DATA_TYPE ID LB INT_NUM RB ASSIGN . $$4 LF ARR_VALUES RF  (48)
	$$4 : .  (47)

	.  reduce 47

	$$4  goto 177


state 173
	STMT : INPUT LP ID LB EXPR RB RP . SCOL  (41)

	SCOL  shift 178
	.  error


state 174
	IF_STMT : IF $$6 LP EXPR RP $$7 LF . $$8 STMTLIST RF $$9 ELIF_STMT ELSE_STMT  (89)
	$$8 : .  (87)

	.  reduce 87

	$$8  goto 179


state 175
	WHILE_STMT : WHILE $$15 LP EXPR RP $$16 LF . $$17 STMTLIST RF  (101)
	$$17 : .  (100)

	.  reduce 100

	$$17  goto 180


state 176
	FOR_STMT : FOR LP ASSIGNMENT SCOL $$18 EXPR SCOL . $$19 ASSIGNMENT RP $$20 LF $$21 STMTLIST RF  (106)
	$$19 : .  (103)

	.  reduce 103

	$$19  goto 181


state 177
	DECLARATION : DATA_TYPE ID LB INT_NUM RB ASSIGN $$4 . LF ARR_VALUES RF  (48)

	LF  shift 182
	.  error


state 178
	STMT : INPUT LP ID LB EXPR RB RP SCOL .  (41)

	.  reduce 41


state 179
	IF_STMT : IF $$6 LP EXPR RP $$7 LF $$8 . STMTLIST RF $$9 ELIF_STMT ELSE_STMT  (89)
	STMTLIST : .  (21)

	INT  shift 3
	CHAR  shift 4
	FLOAT  shift 5
	STRING  shift 21
	RETURN  shift 22
	INPUT  shift 23
	OUTPUT  shift 24
	IF  shift 25
	WHILE  shift 26
	FOR  shift 27
	BREAK  shift 28
	CONTINUE  shift 29
	INT_NUM  shift 30
	FLOAT_NUM  shift 31
	ID  shift 32
	ADD  shift 33
	SUB  shift 34
	LP  shift 35
	CHARACTER  shift 36
	NEG  shift 37
	RF  reduce 21

	DATA_TYPE  goto 38
	STMTLIST  goto 183
	STMT  goto 40
	DECLARATION  goto 41
	ASSIGNMENT  goto 42
	EXPR  goto 43
	RETURN_STMT  goto 44
	UNARY_EXPR  goto 45
	PRIMARY_EXPR  goto 46
	UNARY_OP  goto 47
	CONST  goto 48
	IF_STMT  goto 49
	WHILE_STMT  goto 50
	FOR_STMT  goto 51
	FUNCTION_CALL  goto 52
	POSTFIX_EXPR  goto 53


state 180
	WHILE_STMT : WHILE $$15 LP EXPR RP $$16 LF $$17 . STMTLIST RF  (101)
	STMTLIST : .  (21)

	INT  shift 3
	CHAR  shift 4
	FLOAT  shift 5
	STRING  shift 21
	RETURN  shift 22
	INPUT  shift 23
	OUTPUT  shift 24
	IF  shift 25
	WHILE  shift 26
	FOR  shift 27
	BREAK  shift 28
	CONTINUE  shift 29
	INT_NUM  shift 30
	FLOAT_NUM  shift 31
	ID  shift 32
	ADD  shift 33
	SUB  shift 34
	LP  shift 35
	CHARACTER  shift 36
	NEG  shift 37
	RF  reduce 21

	DATA_TYPE  goto 38
	STMTLIST  goto 184
	STMT  goto 40
	DECLARATION  goto 41
	ASSIGNMENT  goto 42
	EXPR  goto 43
	RETURN_STMT  goto 44
	UNARY_EXPR  goto 45
	PRIMARY_EXPR  goto 46
	UNARY_OP  goto 47
	CONST  goto 48
	IF_STMT  goto 49
	WHILE_STMT  goto 50
	FOR_STMT  goto 51
	FUNCTION_CALL  goto 52
	POSTFIX_EXPR  goto 53


state 181
	FOR_STMT : FOR LP ASSIGNMENT SCOL $$18 EXPR SCOL $$19 . ASSIGNMENT RP $$20 LF $$21 STMTLIST RF  (106)

	ID  shift 109
	.  error

	ASSIGNMENT  goto 185


state 182
	DECLARATION : DATA_TYPE ID LB INT_NUM RB ASSIGN $$4 LF . ARR_VALUES RF  (48)

	INT_NUM  shift 30
	FLOAT_NUM  shift 31
	CHARACTER  shift 36
	.  error

	CONST  goto 186
	ARR_VALUES  goto 187


state 183
	IF_STMT : IF $$6 LP EXPR RP $$7 LF $$8 STMTLIST . RF $$9 ELIF_STMT ELSE_STMT  (89)

	RF  shift 188
	.  error


state 184
	WHILE_STMT : WHILE $$15 LP EXPR RP $$16 LF $$17 STMTLIST . RF  (101)

	RF  shift 189
	.  error


state 185
	FOR_STMT : FOR LP ASSIGNMENT SCOL $$18 EXPR SCOL $$19 ASSIGNMENT . RP $$20 LF $$21 STMTLIST RF  (106)

	RP  shift 190
	.  error


state 186
	ARR_VALUES : CONST . $$5 COMMA ARR_VALUES  (50)
	ARR_VALUES : CONST .  (51)
	$$5 : .  (49)

	COMMA  reduce 49
	RF  reduce 51

	$$5  goto 191


state 187
	DECLARATION : DATA_TYPE ID LB INT_NUM RB ASSIGN $$4 LF ARR_VALUES . RF  (48)

	RF  shift 192
	.  error


state 188
	IF_STMT : IF $$6 LP EXPR RP $$7 LF $$8 STMTLIST RF . $$9 ELIF_STMT ELSE_STMT  (89)
	$$9 : .  (88)

	.  reduce 88

	$$9  goto 193


state 189
	WHILE_STMT : WHILE $$15 LP EXPR RP $$16 LF $$17 STMTLIST RF .  (101)

	.  reduce 101


state 190
	FOR_STMT : FOR LP ASSIGNMENT SCOL $$18 EXPR SCOL $$19 ASSIGNMENT RP . $$20 LF $$21 STMTLIST RF  (106)
	$$20 : .  (104)

	.  reduce 104

	$$20  goto 194


state 191
	ARR_VALUES : CONST $$5 . COMMA ARR_VALUES  (50)

	COMMA  shift 195
	.  error


state 192
	DECLARATION : DATA_TYPE ID LB INT_NUM RB ASSIGN $$4 LF ARR_VALUES RF .  (48)

	.  reduce 48


193: shift/reduce conflict (shift 196, reduce 95) on ELSE
state 193
	IF_STMT : IF $$6 LP EXPR RP $$7 LF $$8 STMTLIST RF $$9 . ELIF_STMT ELSE_STMT  (89)
	ELIF_STMT : .  (95)

	ELSE  shift 196

	ELIF_STMT  goto 197


state 194
	FOR_STMT : FOR LP ASSIGNMENT SCOL $$18 EXPR SCOL $$19 ASSIGNMENT RP $$20 . LF $$21 STMTLIST RF  (106)

	LF  shift 198
	.  error


state 195
	ARR_VALUES : CONST $$5 COMMA . ARR_VALUES  (50)

	INT_NUM  shift 30
	FLOAT_NUM  shift 31
	CHARACTER  shift 36
	.  error

	CONST  goto 186
	ARR_VALUES  goto 199


state 196
	ELIF_STMT : ELSE . IF $$10 LP EXPR RP $$11 LF $$12 STMTLIST RF $$13 ELIF_STMT  (94)

	IF  shift 200
	.  error


state 197
	IF_STMT : IF $$6 LP EXPR RP $$7 LF $$8 STMTLIST RF $$9 ELIF_STMT . ELSE_STMT  (89)

	ELSE  shift 201
	.  error

	ELSE_STMT  goto 202


state 198
	FOR_STMT : FOR LP ASSIGNMENT SCOL $$18 EXPR SCOL $$19 ASSIGNMENT RP $$20 LF . $$21 STMTLIST RF  (106)
	$$21 : .  (105)

	.  reduce 105

	$$21  goto 203


state 199
	ARR_VALUES : CONST $$5 COMMA ARR_VALUES .  (50)

	.  reduce 50


state 200
	ELIF_STMT : ELSE IF . $$10 LP EXPR RP $$11 LF $$12 STMTLIST RF $$13 ELIF_STMT  (94)
	$$10 : .  (90)

	.  reduce 90

	$$10  goto 204


state 201
	ELSE_STMT : ELSE . LF $$14 STMTLIST RF  (97)

	LF  shift 205
	.  error


state 202
	IF_STMT : IF $$6 LP EXPR RP $$7 LF $$8 STMTLIST RF $$9 ELIF_STMT ELSE_STMT .  (89)

	.  reduce 89


state 203
	FOR_STMT : FOR LP ASSIGNMENT SCOL $$18 EXPR SCOL $$19 ASSIGNMENT RP $$20 LF $$21 . STMTLIST RF  (106)
	STMTLIST : .  (21)

	INT  shift 3
	CHAR  shift 4
	FLOAT  shift 5
	STRING  shift 21
	RETURN  shift 22
	INPUT  shift 23
	OUTPUT  shift 24
	IF  shift 25
	WHILE  shift 26
	FOR  shift 27
	BREAK  shift 28
	CONTINUE  shift 29
	INT_NUM  shift 30
	FLOAT_NUM  shift 31
	ID  shift 32
	ADD  shift 33
	SUB  shift 34
	LP  shift 35
	CHARACTER  shift 36
	NEG  shift 37
	RF  reduce 21

	DATA_TYPE  goto 38
	STMTLIST  goto 206
	STMT  goto 40
	DECLARATION  goto 41
	ASSIGNMENT  goto 42
	EXPR  goto 43
	RETURN_STMT  goto 44
	UNARY_EXPR  goto 45
	PRIMARY_EXPR  goto 46
	UNARY_OP  goto 47
	CONST  goto 48
	IF_STMT  goto 49
	WHILE_STMT  goto 50
	FOR_STMT  goto 51
	FUNCTION_CALL  goto 52
	POSTFIX_EXPR  goto 53


state 204
	ELIF_STMT : ELSE IF $$10 . LP EXPR RP $$11 LF $$12 STMTLIST RF $$13 ELIF_STMT  (94)

	LP  shift 207
	.  error


state 205
	ELSE_STMT : ELSE LF . $$14 STMTLIST RF  (97)
	$$14 : .  (96)

	.  reduce 96

	$$14  goto 208


state 206
	FOR_STMT : FOR LP ASSIGNMENT SCOL $$18 EXPR SCOL $$19 ASSIGNMENT RP $$20 LF $$21 STMTLIST . RF  (106)

	RF  shift 209
	.  error


state 207
	ELIF_STMT : ELSE IF $$10 LP . EXPR RP $$11 LF $$12 STMTLIST RF $$13 ELIF_STMT  (94)

	INT_NUM  shift 30
	FLOAT_NUM  shift 31
	ID  shift 62
	ADD  shift 33
	SUB  shift 34
	LP  shift 35
	CHARACTER  shift 36
	NEG  shift 37
	.  error

	EXPR  goto 210
	UNARY_EXPR  goto 45
	PRIMARY_EXPR  goto 46
	UNARY_OP  goto 47
	CONST  goto 48
	FUNCTION_CALL  goto 52
	POSTFIX_EXPR  goto 53


state 208
	ELSE_STMT : ELSE LF $$14 . STMTLIST RF  (97)
	STMTLIST : .  (21)

	INT  shift 3
	CHAR  shift 4
	FLOAT  shift 5
	STRING  shift 21
	RETURN  shift 22
	INPUT  shift 23
	OUTPUT  shift 24
	IF  shift 25
	WHILE  shift 26
	FOR  shift 27
	BREAK  shift 28
	CONTINUE  shift 29
	INT_NUM  shift 30
	FLOAT_NUM  shift 31
	ID  shift 32
	ADD  shift 33
	SUB  shift 34
	LP  shift 35
	CHARACTER  shift 36
	NEG  shift 37
	RF  reduce 21

	DATA_TYPE  goto 38
	STMTLIST  goto 211
	STMT  goto 40
	DECLARATION  goto 41
	ASSIGNMENT  goto 42
	EXPR  goto 43
	RETURN_STMT  goto 44
	UNARY_EXPR  goto 45
	PRIMARY_EXPR  goto 46
	UNARY_OP  goto 47
	CONST  goto 48
	IF_STMT  goto 49
	WHILE_STMT  goto 50
	FOR_STMT  goto 51
	FUNCTION_CALL  goto 52
	POSTFIX_EXPR  goto 53


state 209
	FOR_STMT : FOR LP ASSIGNMENT SCOL $$18 EXPR SCOL $$19 ASSIGNMENT RP $$20 LF $$21 STMTLIST RF .  (106)

	.  reduce 106


state 210
	EXPR : EXPR . ADD EXPR  (54)
	EXPR : EXPR . SUB EXPR  (55)
	EXPR : EXPR . MUL EXPR  (56)
	EXPR : EXPR . DIV EXPR  (57)
	EXPR : EXPR . EQ EXPR  (58)
	EXPR : EXPR . NE EXPR  (59)
	EXPR : EXPR . LT EXPR  (60)
	EXPR : EXPR . GT EXPR  (61)
	EXPR : EXPR . LE EXPR  (62)
	EXPR : EXPR . GE EXPR  (63)
	EXPR : EXPR . AND EXPR  (64)
	EXPR : EXPR . OR EXPR  (65)
	EXPR : EXPR . BITAND EXPR  (66)
	EXPR : EXPR . BITOR EXPR  (67)
	ELIF_STMT : ELSE IF $$10 LP EXPR . RP $$11 LF $$12 STMTLIST RF $$13 ELIF_STMT  (94)

	ADD  shift 80
	SUB  shift 81
	MUL  shift 82
	DIV  shift 83
	EQ  shift 84
	NE  shift 85
	LT  shift 86
	GT  shift 87
	LE  shift 88
	GE  shift 89
	AND  shift 90
	OR  shift 91
	RP  shift 212
	BITAND  shift 93
	BITOR  shift 94
	.  error


state 211
	ELSE_STMT : ELSE LF $$14 STMTLIST . RF  (97)

	RF  shift 213
	.  error


state 212
	ELIF_STMT : ELSE IF $$10 LP EXPR RP . $$11 LF $$12 STMTLIST RF $$13 ELIF_STMT  (94)
	$$11 : .  (91)

	.  reduce 91

	$$11  goto 214


state 213
	ELSE_STMT : ELSE LF $$14 STMTLIST RF .  (97)

	.  reduce 97


state 214
	ELIF_STMT : ELSE IF $$10 LP EXPR RP $$11 . LF $$12 STMTLIST RF $$13 ELIF_STMT  (94)

	LF  shift 215
	.  error


state 215
	ELIF_STMT : ELSE IF $$10 LP EXPR RP $$11 LF . $$12 STMTLIST RF $$13 ELIF_STMT  (94)
	$$12 : .  (92)

	.  reduce 92

	$$12  goto 216


state 216
	ELIF_STMT : ELSE IF $$10 LP EXPR RP $$11 LF $$12 . STMTLIST RF $$13 ELIF_STMT  (94)
	STMTLIST : .  (21)

	INT  shift 3
	CHAR  shift 4
	FLOAT  shift 5
	STRING  shift 21
	RETURN  shift 22
	INPUT  shift 23
	OUTPUT  shift 24
	IF  shift 25
	WHILE  shift 26
	FOR  shift 27
	BREAK  shift 28
	CONTINUE  shift 29
	INT_NUM  shift 30
	FLOAT_NUM  shift 31
	ID  shift 32
	ADD  shift 33
	SUB  shift 34
	LP  shift 35
	CHARACTER  shift 36
	NEG  shift 37
	RF  reduce 21

	DATA_TYPE  goto 38
	STMTLIST  goto 217
	STMT  goto 40
	DECLARATION  goto 41
	ASSIGNMENT  goto 42
	EXPR  goto 43
	RETURN_STMT  goto 44
	UNARY_EXPR  goto 45
	PRIMARY_EXPR  goto 46
	UNARY_OP  goto 47
	CONST  goto 48
	IF_STMT  goto 49
	WHILE_STMT  goto 50
	FOR_STMT  goto 51
	FUNCTION_CALL  goto 52
	POSTFIX_EXPR  goto 53


state 217
	ELIF_STMT : ELSE IF $$10 LP EXPR RP $$11 LF $$12 STMTLIST . RF $$13 ELIF_STMT  (94)

	RF  shift 218
	.  error


state 218
	ELIF_STMT : ELSE IF $$10 LP EXPR RP $$11 LF $$12 STMTLIST RF . $$13 ELIF_STMT  (94)
	$$13 : .  (93)

	.  reduce 93

	$$13  goto 219


219: shift/reduce conflict (shift 196, reduce 95) on ELSE
state 219
	ELIF_STMT : ELSE IF $$10 LP EXPR RP $$11 LF $$12 STMTLIST RF $$13 . ELIF_STMT  (94)
	ELIF_STMT : .  (95)

	ELSE  shift 196

	ELIF_STMT  goto 220


state 220
	ELIF_STMT : ELSE IF $$10 LP EXPR RP $$11 LF $$12 STMTLIST RF $$13 ELIF_STMT .  (94)

	.  reduce 94


Rules never reduced:
	CLASSMEMBER :  (27)
	ELIF_STMT :  (95)


State 20 contains 4 shift/reduce conflicts.
State 21 contains 1 shift/reduce conflict.
State 102 contains 1 shift/reduce conflict.
State 117 contains 2 shift/reduce conflicts.
State 118 contains 2 shift/reduce conflicts.
State 119 contains 2 shift/reduce conflicts.
State 120 contains 2 shift/reduce conflicts.
State 121 contains 2 shift/reduce conflicts.
State 122 contains 2 shift/reduce conflicts.
State 123 contains 2 shift/reduce conflicts.
State 124 contains 2 shift/reduce conflicts.
State 125 contains 2 shift/reduce conflicts.
State 126 contains 2 shift/reduce conflicts.
State 127 contains 2 shift/reduce conflicts.
State 128 contains 2 shift/reduce conflicts.
State 129 contains 14 shift/reduce conflicts.
State 130 contains 14 shift/reduce conflicts.
State 193 contains 1 shift/reduce conflict.
State 219 contains 1 shift/reduce conflict.


49 terminals, 55 nonterminals
113 grammar rules, 221 states

grammar parser grammar
symbol# value# symbol
     0      0  $end
     1    256  error
     2    257  INT
     3    258  CHAR
     4    259  FLOAT
     5    260  STRING
     6    261  VOID
     7    262  RETURN
     8    263  CLASS
     9    264  PUBLIC
    10    265  PRIVATE
    11    266  PROTECTED
    12    267  INPUT
    13    268  OUTPUT
    14    269  IF
    15    270  ELSE
    16    271  WHILE
    17    272  FOR
    18    273  BREAK
    19    274  CONTINUE
    20    275  INT_NUM
    21    276  FLOAT_NUM
    22    277  ID
    23    278  ADD
    24    279  SUB
    25    280  MUL
    26    281  DIV
    27    282  ASSIGN
    28    283  EQ
    29    284  NE
    30    285  LT
    31    286  GT
    32    287  LE
    33    288  GE
    34    289  AND
    35    290  OR
    36    291  SCOL
    37    292  COMMA
    38    293  LP
    39    294  RP
    40    295  LF
    41    296  RF
    42    297  LB
    43    298  RB
    44    299  STR
    45    300  CHARACTER
    46    301  BITAND
    47    302  BITOR
    48    303  NEG
    49    304  $accept
    50    305  PROGRAM
    51    306  LIST
    52    307  FUNCTION
    53    308  FUNCTION_PREFIX
    54    309  DATA_TYPE
    55    310  PARAMLIST
    56    311  PARAM
    57    312  STMTLIST
    58    313  CLASSDEF
    59    314  CLASSBODY
    60    315  CLASSMEMBER
    61    316  ACCESS_MODIFIER
    62    317  STMT
    63    318  DECLARATION
    64    319  ASSIGNMENT
    65    320  EXPR
    66    321  RETURN_STMT
    67    322  UNARY_EXPR
    68    323  PRIMARY_EXPR
    69    324  UNARY_OP
    70    325  CONST
    71    326  IF_STMT
    72    327  ELIF_STMT
    73    328  ELSE_STMT
    74    329  WHILE_STMT
    75    330  FOR_STMT
    76    331  FUNCTION_CALL
    77    332  ARGUMENTLIST
    78    333  ARG
    79    334  FUNCTION_TYPE
    80    335  POSTFIX_EXPR
    81    336  ARR_VALUES
    82    337  $$1
    83    338  $$2
    84    339  $$3
    85    340  $$4
    86    341  $$5
    87    342  $$6
    88    343  $$7
    89    344  $$8
    90    345  $$9
    91    346  $$10
    92    347  $$11
    93    348  $$12
    94    349  $$13
    95    350  $$14
    96    351  $$15
    97    352  $$16
    98    353  $$17
    99    354  $$18
   100    355  $$19
   101    356  $$20
   102    357  $$21
   103    358  $$22
